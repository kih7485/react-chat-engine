{"ast":null,"code":"import React, { createContext, useState, useContext, useRef, useEffect, Component } from 'react';\nimport _$1 from 'lodash';\nimport axios from 'axios';\nimport { WebSocket } from 'nextjs-websocket';\nimport { TextInput as TextInput$1, Button as Button$1, newChat as newChat$1, Avatar as Avatar$1, removePerson as removePerson$1, AutoCompleteInput, addPerson as addPerson$1, getOtherPeople as getOtherPeople$1, deleteChat as deleteChat$1, editChat as editChat$1, Dot as Dot$1, TextAreaInput as TextAreaInput$1, isTyping as isTyping$1, sendMessage as sendMessage$1 } from 'react-chat-engine';\nimport { SyncOutlined, MenuOutlined, CloseOutlined, LeftOutlined, DownOutlined, SettingOutlined, LoadingOutlined, CloseCircleTwoTone, PaperClipOutlined, PlusOutlined, ArrowUpOutlined, DeleteOutlined, UserAddOutlined } from '@ant-design/icons';\nimport { setConfiguration, Row, Col } from 'react-grid-system';\nimport { animateScroll } from 'react-scroll';\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n\n  _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nvar ChatEngineContext = createContext();\n\nvar ChatEngineWrapper = function ChatEngineWrapper(props) {\n  var _useState = useState(true),\n      connecting = _useState[0],\n      setConnecting = _useState[1];\n\n  var _useState2 = useState(null),\n      conn = _useState2[0],\n      setConn = _useState2[1];\n\n  var _useState3 = useState(null),\n      creds = _useState3[0],\n      setCreds = _useState3[1];\n\n  var _useState4 = useState(null),\n      chats = _useState4[0],\n      setChats = _useState4[1];\n\n  var _useState5 = useState({}),\n      messages = _useState5[0],\n      setMessages = _useState5[1];\n\n  var _useState6 = useState({}),\n      sendingMessages = _useState6[0],\n      setSendingMessages = _useState6[1];\n\n  var _useState7 = useState(null),\n      activeChat = _useState7[0],\n      setActiveChat = _useState7[1];\n\n  var _useState8 = useState({}),\n      typingCounter = _useState8[0],\n      setTypingCounter = _useState8[1];\n\n  var _useState9 = useState({}),\n      typingData = _useState9[0],\n      setTypingData = _useState9[1];\n\n  var value = {\n    connecting: connecting,\n    setConnecting: setConnecting,\n    conn: conn,\n    setConn: setConn,\n    creds: creds,\n    setCreds: setCreds,\n    chats: chats,\n    setChats: setChats,\n    messages: messages,\n    setMessages: setMessages,\n    sendingMessages: sendingMessages,\n    setSendingMessages: setSendingMessages,\n    activeChat: activeChat,\n    setActiveChat: setActiveChat,\n    typingCounter: typingCounter,\n    setTypingCounter: setTypingCounter,\n    typingData: typingData,\n    setTypingData: setTypingData\n  };\n  return /*#__PURE__*/React.createElement(ChatEngineContext.Provider, {\n    value: value\n  }, props.children);\n};\n\nfunction getApiUrl(props) {\n  if (props && props.development) {\n    return 'http://127.0.0.1:8000';\n  }\n\n  return 'https://api.chatengine.io';\n}\n\nfunction getHeaders(props) {\n  if (props.chatID) {\n    return {\n      \"public-key\": props.publicKey ? props.publicKey : props.projectID,\n      \"chat-id\": props.chatID,\n      \"access-key\": props.chatAccessKey\n    };\n  }\n\n  return {\n    \"Public-Key\": props.publicKey ? props.publicKey : props.projectID,\n    \"User-Name\": props.userName,\n    \"User-Secret\": props.userPassword ? props.userPassword : props.userSecret\n  };\n}\n\nfunction getMessages(props, chatId, callback) {\n  axios.get(getApiUrl(props) + \"/chats/\" + chatId + \"/messages/\", {\n    headers: getHeaders(props)\n  }).then(function (response) {\n    props.onGetMessages && props.onGetMessages(chatId, response.data);\n    callback && callback(chatId, response.data);\n  })[\"catch\"](function (error) {\n    console.log('Fetch Messages Error', error);\n  });\n}\n\nfunction sendMessage(props, chatId, data, callback) {\n  var formdata = new FormData();\n\n  if (data.attachments) {\n    for (var i = 0; i < data.attachments.length; i++) {\n      formdata.append('attachments', data.attachments[i], data.attachments[i].name);\n    }\n  } else if (data.files) {\n    for (var _i = 0; _i < data.files.length; _i++) {\n      formdata.append('attachments', data.files[_i], data.files[_i].name);\n    }\n  }\n\n  formdata.append('text', data.text);\n  formdata.append('sender_username', data.sender_username);\n  formdata.append('custom_json', JSON.stringify(data.custom_json ? data.custom_json : {}));\n  axios.post(getApiUrl(props) + \"/chats/\" + chatId + \"/messages/\", formdata, {\n    headers: getHeaders(props)\n  }).then(function (response) {\n    callback && callback(response.data);\n  })[\"catch\"](function (error) {\n    console.log('Send Messages Error', error);\n  });\n}\n\nfunction editMessage(props, chatId, messageId, data, callback) {\n  axios.patch(getApiUrl(props) + \"/chats/\" + chatId + \"/messages/\" + messageId + \"/\", data, {\n    headers: getHeaders(props)\n  }).then(function (response) {\n    callback && callback(response.data);\n  })[\"catch\"](function (error) {\n    console.log('Delete Messages Error', error);\n  });\n}\n\nfunction readMessage(props, chatId, messageId, callback) {\n  axios.patch(getApiUrl(props) + \"/chats/\" + chatId + \"/people/\", {\n    last_read: messageId\n  }, {\n    headers: getHeaders(props)\n  }).then(function (response) {\n    callback && callback(response.data);\n  })[\"catch\"](function (error) {\n    console.log('Read Message Error', error);\n  });\n}\n\nfunction deleteMessage(props, chatId, messageId, callback) {\n  axios[\"delete\"](getApiUrl(props) + \"/chats/\" + chatId + \"/messages/\" + messageId + \"/\", {\n    headers: getHeaders(props)\n  }).then(function (response) {\n    callback && callback(response.data);\n  })[\"catch\"](function (error) {\n    console.log('Delete Messages Error', error);\n  });\n}\n\nfunction getLatestMessages(props, chatId, count, callback) {\n  axios.get(getApiUrl(props) + \"/chats/\" + chatId + \"/messages/latest/\" + count + \"/\", {\n    headers: getHeaders(props)\n  }).then(function (response) {\n    props.onGetMessages && props.onGetMessages(chatId, response.data);\n    callback && callback(chatId, response.data);\n  })[\"catch\"](function (error) {\n    console.log('Fetch Latest Messages Error', error);\n  });\n}\n\nvar _this = undefined;\n\nvar Socket = function Socket(props) {\n  var _useContext = useContext(ChatEngineContext),\n      setConnecting = _useContext.setConnecting,\n      conn = _useContext.conn,\n      setConn = _useContext.setConn,\n      setCreds = _useContext.setCreds,\n      chats = _useContext.chats,\n      setChats = _useContext.setChats,\n      messages = _useContext.messages,\n      setMessages = _useContext.setMessages,\n      sendingMessages = _useContext.sendingMessages,\n      setSendingMessages = _useContext.setSendingMessages,\n      activeChat = _useContext.activeChat,\n      setActiveChat = _useContext.setActiveChat,\n      typingCounter = _useContext.typingCounter,\n      setTypingCounter = _useContext.setTypingCounter;\n\n  function sortChats(chats) {\n    return Object.values(chats).sort(function (a, b) {\n      var aDate = a.last_message.created ? new Date(a.last_message.created) : new Date(a.created);\n      var bDate = b.last_message.created ? new Date(b.last_message.created) : new Date(b.created);\n      return new Date(bDate) - new Date(aDate);\n    });\n  }\n\n  function onEditChat(chat) {\n    if (chats) {\n      var newChats = _extends({}, chats);\n\n      newChats[chat.id] = chat;\n      setChats(newChats);\n    }\n\n    props.onEditChat && props.onEditChat(chat);\n  }\n\n  function onConnect(conn) {\n    setConn(conn);\n    setCreds(conn);\n    setConnecting(false);\n    props.onConnect && props.onConnect(conn);\n  }\n\n  function handleEvent(event) {\n    var eventJSON = JSON.parse(event);\n\n    if (eventJSON.action === 'login_error') {\n      console.log(\"Your login credentials were not correct: \\n\\n                Project ID: \" + props.projectID + \" \\n\\n                Username: \" + props.userName + \" \\n\\n                User Secret: \" + props.userSecret + \"\\n\\n                Double check these credentials to make sure they're correct.\\n\\n                If all three are correct, try resetting the username and secret in the Online Dashboard or Private API.\");\n      setConn(undefined);\n      setCreds(undefined);\n      props.onFailAuth && props.onFailAuth(conn);\n    } else if (eventJSON.action === 'new_chat') {\n      var chat = eventJSON.data;\n\n      if (chats) {\n        var newChats = _extends({}, chats);\n\n        newChats[chat.id] = chat;\n        setChats(newChats);\n        setActiveChat(chat.id);\n      }\n\n      props.onNewChat && props.onNewChat(eventJSON.data);\n    } else if (eventJSON.action === 'edit_chat') {\n      onEditChat(eventJSON.data);\n    } else if (eventJSON.action === 'delete_chat') {\n      var _chat = eventJSON.data;\n\n      if (chats) {\n        chats[_chat.id] = undefined;\n        setChats(chats);\n\n        if (!_.isEmpty(chats)) {\n          var sortedChats = sortChats(chats);\n          setActiveChat(sortedChats[0] ? parseInt(sortedChats[0].id) : 0);\n        }\n      }\n\n      props.onDeleteChat && props.onDeleteChat(_chat);\n    } else if (eventJSON.action === 'add_person') {\n      onEditChat(eventJSON.data);\n      props.onAddPerson && props.onAddPerson(eventJSON.data);\n    } else if (eventJSON.action === 'remove_person') {\n      onEditChat(eventJSON.data);\n      props.onRemovePerson && props.onRemovePerson(eventJSON.data);\n    } else if (eventJSON.action === 'new_message') {\n      var _eventJSON$data = eventJSON.data,\n          id = _eventJSON$data.id,\n          message = _eventJSON$data.message;\n\n      if (typeof message.custom_json === \"string\" && message.custom_json.indexOf('sender_id') !== -1) {\n        sendingMessages[JSON.parse(message.custom_json).sender_id] = undefined;\n        setSendingMessages(sendingMessages);\n      }\n\n      if (id === activeChat) {\n        var newMessages = _extends({}, messages);\n\n        newMessages[message.id] = message;\n        setMessages(newMessages);\n      }\n\n      if (message.sender_username !== props.userName) {\n        readMessage(conn, activeChat, message.id, function (chat) {\n          return onEditChat(chat);\n        });\n      }\n\n      props.onNewMessage && props.onNewMessage(id, message);\n    } else if (eventJSON.action === 'edit_message') {\n      var _eventJSON$data2 = eventJSON.data,\n          _id = _eventJSON$data2.id,\n          _message = _eventJSON$data2.message;\n\n      if (_id === activeChat) {\n        messages[_message.id] = _message;\n        setMessages(messages);\n      }\n\n      props.onEditMessage && props.onEditMessage(_id, _message);\n    } else if (eventJSON.action === 'delete_message') {\n      var _eventJSON$data3 = eventJSON.data,\n          _id2 = _eventJSON$data3.id,\n          _message2 = _eventJSON$data3.message;\n\n      if (_id2 === activeChat) {\n        messages[_message2.id] = undefined;\n        setMessages(messages);\n      }\n\n      props.onDeleteMessage && props.onDeleteMessage(_id2, _message2);\n    } else if (eventJSON.action === 'is_typing') {\n      var _eventJSON$data4 = eventJSON.data,\n          _id3 = _eventJSON$data4.id,\n          person = _eventJSON$data4.person;\n\n      var newTypingCounter = _extends({}, typingCounter);\n\n      if (newTypingCounter[_id3] && newTypingCounter[_id3][person]) {\n        var _extends2, _extends3;\n\n        newTypingCounter = _extends({}, newTypingCounter, (_extends3 = {}, _extends3[_id3] = _extends({}, newTypingCounter[_id3], (_extends2 = {}, _extends2[person] = newTypingCounter[_id3][person] + 1, _extends2)), _extends3));\n      } else {\n        var _extends4, _extends5;\n\n        newTypingCounter = _extends({}, newTypingCounter, (_extends5 = {}, _extends5[_id3] = _extends({}, newTypingCounter[_id3], (_extends4 = {}, _extends4[person] = 1, _extends4)), _extends5));\n      }\n\n      setTypingCounter(newTypingCounter);\n      props.onTyping && props.onTyping(_id3, person);\n    }\n  }\n\n  function onClose() {\n    setConnecting(true);\n  }\n\n  var development = props.development,\n      publicKey = props.publicKey,\n      projectID = props.projectID,\n      userName = props.userName,\n      userPassword = props.userPassword,\n      userSecret = props.userSecret;\n  var wsStart = development ? 'ws://' : 'wss://';\n  var rootHost = development ? '127.0.0.1:8000' : 'api.chatengine.io';\n  var project = publicKey ? publicKey : projectID;\n  var secret = userPassword ? userPassword : userSecret;\n  return /*#__PURE__*/React.createElement(WebSocket, {\n    url: \"\" + wsStart + rootHost + \"/person/?publicKey=\" + project + \"&username=\" + userName + \"&secret=\" + secret,\n    onOpen: function onOpen() {\n      return onConnect(props);\n    },\n    onClose: onClose.bind(_this),\n    onMessage: handleEvent.bind(_this),\n    reconnectIntervalInMilliSeconds: 3000\n  });\n};\n\nfunction getChats(props, callback) {\n  axios.get(getApiUrl(props) + \"/chats/\", {\n    headers: getHeaders(props)\n  }).then(function (response) {\n    props.onGetChats && props.onGetChats(response.data);\n    callback && callback(response.data);\n  })[\"catch\"](function (error) {\n    console.log('Fetch Chats Error', error);\n  });\n}\n\nfunction newChat(props, data, callback) {\n  axios.post(getApiUrl(props) + \"/chats/\", data, {\n    headers: getHeaders(props)\n  }).then(function (response) {\n    callback && callback(response.data);\n  })[\"catch\"](function (error) {\n    console.log('New Chat Error', error);\n  });\n}\n\nfunction getLatestChats(props, count, callback) {\n  axios.get(getApiUrl(props) + \"/chats/latest/\" + count + \"/\", {\n    headers: getHeaders(props)\n  }).then(function (response) {\n    props.onGetChats && props.onGetChats(response.data);\n    callback && callback(response.data);\n  })[\"catch\"](function (error) {\n    console.log('Fetch Chats Error', error);\n  });\n}\n\nfunction getChat(props, chatId, callback) {\n  axios.get(getApiUrl(props) + \"/chats/\" + chatId + \"/\", {\n    headers: getHeaders(props)\n  }).then(function (response) {\n    callback && callback(response.data);\n  })[\"catch\"](function (error) {\n    console.log('Get Chat Error', error);\n  });\n}\n\nfunction editChat(props, chatId, data, callback) {\n  axios.patch(getApiUrl(props) + \"/chats/\" + chatId + \"/\", data, {\n    headers: getHeaders(props)\n  }).then(function (response) {\n    callback && callback(response.data);\n  })[\"catch\"](function (error) {\n    console.log('Edit Chat Error', error);\n  });\n}\n\nfunction deleteChat(props, chatId, callback) {\n  axios[\"delete\"](getApiUrl(props) + \"/chats/\" + chatId + \"/\", {\n    headers: getHeaders(props)\n  }).then(function (response) {\n    callback && callback(response.data);\n  })[\"catch\"](function (error) {\n    console.log('Delete Chat Error', error);\n  });\n}\n\nvar ChatLoader = function ChatLoader(props) {\n  function useOnScreen(ref) {\n    var _useState = useState(false),\n        isIntersecting = _useState[0],\n        setIntersecting = _useState[1];\n\n    var observer = new IntersectionObserver(function (_ref) {\n      var entry = _ref[0];\n      setIntersecting(entry.isIntersecting);\n\n      if (entry.isIntersecting) {\n        props.onVisible();\n      }\n    });\n    useEffect(function () {\n      observer.observe(ref.current);\n      return function () {\n        observer.disconnect();\n      };\n    }, []);\n    return isIntersecting;\n  }\n\n  var ref = useRef();\n  var isVisible = useOnScreen(ref);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    ref: ref\n  });\n};\n\nvar _this$1 = undefined;\n\nvar NewChatForm = function NewChatForm() {\n  var _useContext = useContext(ChatEngineContext),\n      conn = _useContext.conn;\n\n  var _useState = useState(''),\n      value = _useState[0],\n      setValue = _useState[1];\n\n  function _handleChange(event) {\n    setValue(event.target.value);\n  }\n\n  function handleSubmit(event) {\n    event.preventDefault();\n\n    if (value.trim().length > 0) {\n      newChat$1(conn, {\n        title: value\n      }, function () {});\n    }\n\n    setValue('');\n  }\n\n  return /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit.bind(_this$1)\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      height: '1px'\n    }\n  }, /*#__PURE__*/React.createElement(TextInput$1, {\n    label: \"New Chat\",\n    value: value,\n    style: {\n      width: 'calc(100% - 48px)'\n    },\n    handleChange: function handleChange(e) {\n      return _handleChange(e);\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: '100%',\n      textAlign: 'right'\n    }\n  }, /*#__PURE__*/React.createElement(Button$1, {\n    icon: \"plus\",\n    type: \"submit\"\n  })));\n};\n\nfunction timeSinceDate(date) {\n  if (!date) return '';\n  var day = date.substr(8, 2);\n  var month = date.substr(5, 2);\n  var year = date.substr(0, 4);\n  var hour = date.substr(11, 2);\n  var minute = date.substr(14, 2);\n  var second = date.substr(17, 2);\n  var sent = new Date(month + \" \" + day + \" \" + year);\n  sent.setHours(hour);\n  sent.setMinutes(minute);\n  sent.setSeconds(second);\n  sent = sent.toString();\n  var dayStr = sent.substr(0, 10);\n  var timeStr = sent.substr(15, 6);\n  return dayStr + \" at \" + timeStr;\n}\n\nfunction daySinceSent(date) {\n  if (!date) return '';\n  var day = date.substr(8, 2);\n  var month = date.substr(5, 2);\n  var year = date.substr(0, 4);\n  var sent = new Date(month + \" \" + day + \" \" + year).toString();\n  return sent.substr(4, 6);\n}\n\nvar ChatCard = function ChatCard(props) {\n  var _useContext = useContext(ChatEngineContext),\n      conn = _useContext.conn,\n      activeChat = _useContext.activeChat,\n      setActiveChat = _useContext.setActiveChat;\n\n  if (!conn || conn === null) return /*#__PURE__*/React.createElement(\"div\", null);\n\n  function readLastMessage(chat) {\n    var readLastMessage = true;\n    chat.people.map(function (chat_person) {\n      if (conn.userName === chat_person.person.username) {\n        readLastMessage = chat.last_message.id === chat_person.last_read;\n      }\n    });\n    return readLastMessage;\n  }\n\n  var chat = props.chat;\n  var extraStyle = activeChat === chat.id ? styles.activeChat : {};\n  var otherPerson = chat.people.find(function (person) {\n    return person.person.username !== conn.userName;\n  });\n\n  if (props.renderChatCard) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: \"chat_\" + index\n    }, props.renderChatCard(chat, index));\n  }\n\n  var lastMessage = chat.last_message.text;\n\n  if (!lastMessage) {\n    lastMessage = chat.last_message.attachments.length > 0 ? chat.last_message.attachments.length + \" image\" + (chat.last_message.attachments.length > 1 ? 's' : '') : 'Say hello!';\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    onClick: function onClick() {\n      return setActiveChat(chat.id);\n    },\n    style: _extends({}, styles.chatContainer, extraStyle),\n    className: \"ce-chat-card \" + (activeChat === chat.id && 'ce-active-chat-card')\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: styles.titleText,\n    className: \"ce-chat-title-text\"\n  }, chat.is_direct_chat && otherPerson ? otherPerson.person.username : chat.title, !readLastMessage(chat) && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ce-chat-unread-dot\",\n    style: {\n      \"float\": 'right',\n      width: '12px',\n      height: '12px',\n      borderRadius: '6px',\n      backgroundColor: '#1890ff',\n      display: 'inline-block'\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: '100%'\n    },\n    className: \"ce-chat-subtitle\"\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: styles.messageText,\n    className: \"ce-chat-subtitle-text ce-chat-subtitle-message\"\n  }, lastMessage), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ce-chat-subtitle-text ce-chat-subtitle-date\",\n    style: _extends({}, styles.messageText, {\n      textAlign: 'right',\n      width: '25%'\n    })\n  }, daySinceSent(chat.last_message.created))));\n};\n\nvar styles = {\n  chatContainer: {\n    padding: '16px',\n    paddingBottom: '12px',\n    cursor: 'pointer'\n  },\n  titleText: {\n    fontWeight: '500',\n    paddingBottom: '4px',\n    whiteSpace: 'nowrap',\n    overflow: 'hidden'\n  },\n  messageText: {\n    width: '75%',\n    color: 'rgba(153, 153, 153, 1)',\n    fontSize: '14px',\n    whiteSpace: 'nowrap',\n    overflow: 'hidden',\n    display: 'inline-block'\n  },\n  activeChat: {\n    backgroundColor: '#d9d9d9',\n    border: '4px solid white',\n    borderRadius: '12px'\n  }\n};\nvar count = 13;\nvar interval = 13;\n\nvar ChatList = function ChatList(props) {\n  var didMountRef = useRef(false);\n\n  var _useState = useState(true),\n      hasMoreChats = _useState[0],\n      setHasMoreChats = _useState[1];\n\n  var _useContext = useContext(ChatEngineContext),\n      chats = _useContext.chats,\n      setChats = _useContext.setChats,\n      activeChat = _useContext.activeChat,\n      setActiveChat = _useContext.setActiveChat;\n\n  function renderChats(chats) {\n    return chats.map(function (chat, index) {\n      if (!chat) return /*#__PURE__*/React.createElement(\"div\", {\n        key: \"chat_\" + index\n      });\n\n      if (props.renderChatCard) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          key: \"chat_\" + index\n        }, props.renderChatCard(chat, index));\n      } else {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          key: \"chat_\" + index,\n          onClick: function onClick() {\n            return props.onChatClick && props.onChatClick();\n          }\n        }, /*#__PURE__*/React.createElement(ChatCard, {\n          chat: chat\n        }));\n      }\n    });\n  }\n\n  function sortChats(chats) {\n    return chats.sort(function (a, b) {\n      var aDate = a.last_message.created ? new Date(a.last_message.created) : new Date(a.created);\n      var bDate = b.last_message.created ? new Date(b.last_message.created) : new Date(b.created);\n      return new Date(bDate) - new Date(aDate);\n    });\n  }\n\n  function onGetChats(chats, count) {\n    var chatList = sortChats(chats);\n\n    if (chatList.length > 0 && activeChat === null) {\n      setActiveChat(chatList[0].id);\n    }\n\n    if (count && count > chatList.length) {\n      setHasMoreChats(false);\n    }\n\n    var newChats = _extends({}, chats);\n\n    setChats(_$1.mapKeys(newChats, 'id'));\n  }\n\n  useEffect(function () {\n    if (!didMountRef.current) {\n      didMountRef.current = true;\n      getLatestChats(props, interval, function (chats) {\n        return onGetChats(chats);\n      });\n    }\n  });\n\n  function loadChats() {\n    count = count + interval;\n    getLatestChats(props, count, function (chats) {\n      return onGetChats(chats, count);\n    });\n  }\n\n  var chatList = sortChats(chats ? Object.values(chats) : []);\n  if (props.renderChatList) return props.renderChatList(props);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: styles$1.chatListContainer,\n    className: \"ce-chat-list\"\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: styles$1.chatsContainer,\n    className: \"ce-chats-container\"\n  }, renderChats(chatList), hasMoreChats && chatList.length > 0 && /*#__PURE__*/React.createElement(ChatLoader, {\n    onVisible: function onVisible() {\n      return loadChats();\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      height: '64px'\n    }\n  }), props.renderNewChatForm ? props.renderNewChatForm(props) : /*#__PURE__*/React.createElement(\"div\", {\n    style: styles$1.newChatContainer,\n    className: \"ce-chat-form-container\"\n  }, /*#__PURE__*/React.createElement(NewChatForm, {\n    className: \"ce-chat-form\"\n  }))));\n};\n\nvar styles$1 = {\n  chatListContainer: {\n    height: '100%',\n    maxHeight: '100vh',\n    overflow: 'scroll',\n    overflowX: 'hidden',\n    borderRight: '1px solid #afafaf',\n    backgroundColor: 'white'\n  },\n  chatsContainer: {\n    width: '100%',\n    backgroundColor: 'white',\n    borderRadius: '0px 0px 24px 24px'\n  },\n  chatContainer: {\n    padding: '16px',\n    paddingBottom: '12px',\n    cursor: 'pointer'\n  },\n  titleText: {\n    fontWeight: '500',\n    paddingBottom: '4px',\n    whiteSpace: 'nowrap',\n    overflow: 'hidden'\n  },\n  messageText: {\n    width: '75%',\n    color: 'rgba(153, 153, 153, 1)',\n    fontSize: '14px',\n    whiteSpace: 'nowrap',\n    overflow: 'hidden',\n    display: 'inline-block'\n  },\n  activeChat: {\n    backgroundColor: '#d9d9d9',\n    border: '4px solid white',\n    borderRadius: '12px'\n  },\n  newChatContainer: {\n    position: 'absolute',\n    bottom: '0px',\n    padding: '12px',\n    width: 'calc(100% - 25px)',\n    backgroundColor: 'white'\n  }\n};\n\nvar AuthFail = function AuthFail() {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      height: '100%',\n      textAlign: 'center'\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: '100%'\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    style: {\n      width: '40%',\n      paddingTop: '25vh'\n    },\n    src: \"https://chat-engine-assets.s3.amazonaws.com/denied.svg\",\n    alt: \"welcome-to-chat-engine\"\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      fontSize: '18px',\n      paddingTop: '24px',\n      width: '75%',\n      paddingLeft: '12.5%'\n    }\n  }, \"Your credentials are incorrect. Make sure your Public Key, Username, and Password are correct at \", /*#__PURE__*/React.createElement(\"a\", {\n    href: \"https://chatengine.io\"\n  }, \"chatengine.io\")));\n};\n\nvar Loading = function Loading() {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      zIndex: '1',\n      bottom: '66px',\n      left: 'calc(50% - 78px)',\n      position: 'absolute',\n      fontSize: '15px',\n      padding: '10px 22px',\n      color: 'white',\n      backgroundColor: '#fa8c16',\n      borderRadius: '1.3em'\n    },\n    id: \"ce-connecting-popup\"\n  }, /*#__PURE__*/React.createElement(SyncOutlined, {\n    spin: true\n  }), ' ', \"Connecting\");\n};\n\nvar Welcome = function Welcome() {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      height: '100%',\n      textAlign: 'center'\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: '100%'\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    style: {\n      width: '60%',\n      paddingTop: '33vh'\n    },\n    src: \"https://chat-engine-assets.s3.amazonaws.com/welcome.svg\",\n    alt: \"welcome-to-chat-engine\"\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      fontSize: '18px',\n      paddingTop: '24px',\n      width: '75%',\n      paddingLeft: '12.5%'\n    }\n  }, \"Fill out the \\\"New Chat\\\" form to get started.\"));\n};\n\nvar ChatListDrawer = function ChatListDrawer(props) {\n  var _useState = useState(false),\n      isOpen = _useState[0],\n      setIsOpen = _useState[1];\n\n  return /*#__PURE__*/React.createElement(\"div\", null, /*#__PURE__*/React.createElement(MenuOutlined, {\n    onClick: function onClick() {\n      return setIsOpen(true);\n    },\n    style: {\n      color: 'rgb(24, 144, 255)',\n      outline: 'none'\n    }\n  }), isOpen && /*#__PURE__*/React.createElement(\"div\", {\n    style: styles$2.drawerContainer\n  }, /*#__PURE__*/React.createElement(CloseOutlined, {\n    style: styles$2.closeIcon,\n    onClick: function onClick() {\n      return setIsOpen(false);\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    style: styles$2.titleContainer\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: styles$2.titleText\n  }, \"My Chats\")), /*#__PURE__*/React.createElement(ChatList, _extends({}, props, {\n    onChatClick: function onChatClick() {\n      return setIsOpen(false);\n    }\n  }))));\n};\n\nvar styles$2 = {\n  drawerContainer: {\n    position: 'fixed',\n    zIndex: '1',\n    top: '0px',\n    left: '0px',\n    width: '100%',\n    height: '100%',\n    backgroundColor: 'white',\n    textAlign: 'left'\n  },\n  closeIcon: {\n    position: 'absolute',\n    left: '28px',\n    top: '32px'\n  },\n  titleContainer: {\n    width: '100%',\n    padding: '24px 0px',\n    textAlign: 'center',\n    color: 'rgb(24, 144, 255)'\n  },\n  titleText: {\n    fontSize: '24px',\n    fontWeight: '600'\n  }\n};\n\nvar Person = function Person(props) {\n  var _useState = useState(false),\n      selected = _useState[0],\n      setSelected = _useState[1];\n\n  var person = props.person,\n      chat = props.chat,\n      conn = props.conn;\n\n  if (!person || !chat) {\n    return /*#__PURE__*/React.createElement(\"div\", null);\n  }\n\n  if (!conn || conn === null) return /*#__PURE__*/React.createElement(\"div\", null);\n\n  function onRemovePerson() {\n    removePerson$1(props.conn, props.chat.id, props.person.username);\n  }\n\n  function renderPersonText(person) {\n    if (person.first_name && person.first_name !== null) {\n      return \"\" + person.first_name + (person.last_name ? \" \" + person.last_name : '');\n    } else {\n      return person.username;\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ce-person-container\",\n    onMouseEnter: function onMouseEnter() {\n      return setSelected(true);\n    },\n    onMouseLeave: function onMouseLeave() {\n      return setSelected(false);\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ce-person-avatar\",\n    style: {\n      padding: '2px',\n      height: '0px'\n    }\n  }, /*#__PURE__*/React.createElement(Avatar$1, {\n    avatar: person.avatar,\n    username: person.username,\n    is_online: person.is_online\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ce-person-text\",\n    style: {\n      paddingLeft: '52px',\n      height: '44px',\n      position: 'relative',\n      top: '10px',\n      fontSize: '15px'\n    }\n  }, renderPersonText(person)), selected && conn.userName === chat.admin.username && person.username !== chat.admin.username && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ce-delete-chat\",\n    style: {\n      \"float\": 'right',\n      height: '0px',\n      position: 'relative',\n      bottom: '44px'\n    }\n  }, /*#__PURE__*/React.createElement(Button$1, {\n    theme: \"danger\",\n    icon: \"delete\",\n    onClick: function onClick() {\n      return onRemovePerson();\n    }\n  })));\n};\n\nvar Option = function Option(props) {\n  var _useState = useState(false),\n      focused = _useState[0],\n      setFocused = _useState[1];\n\n  var _props$person = props.person,\n      avatar = _props$person.avatar,\n      username = _props$person.username;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    onMouseEnter: function onMouseEnter() {\n      return setFocused(true);\n    },\n    onMouseLeave: function onMouseLeave() {\n      return setFocused(false);\n    },\n    onClick: function onClick() {\n      return props.onClick && props.onClick();\n    },\n    style: _extends({}, styles$3.option, {\n      backgroundColor: focused ? '#f5f5f5' : 'white'\n    })\n  }, /*#__PURE__*/React.createElement(\"div\", null, /*#__PURE__*/React.createElement(Avatar$1, {\n    username: username,\n    avatar: avatar\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: 'flex',\n      padding: '12px 4px'\n    }\n  }, props.person.username));\n};\n\nvar styles$3 = {\n  option: {\n    padding: '4px 16px',\n    cursor: 'pointer',\n    fontSize: '15px',\n    display: 'flex'\n  }\n};\n\nvar PersonForm = function PersonForm(props) {\n  var _useState = useState({\n    value: '',\n    others: []\n  }),\n      state = _useState[0],\n      setState = _useState[1];\n\n  function _handleChange(value) {\n    setState(_extends({}, state, {\n      value: value\n    }));\n  }\n\n  function invitePerson(name) {\n    addPerson$1(props.conn, props.chat.id, name, function () {\n      setState(_extends({}, state, {\n        value: ''\n      }));\n      getOthers();\n    });\n  }\n\n  function getOthers() {\n    getOtherPeople$1(props.conn, props.chat.id, function (id, others) {\n      return setState(_extends({}, state, {\n        others: others\n      }));\n    }, function () {});\n  }\n\n  function _renderOption(option) {\n    return /*#__PURE__*/React.createElement(Option, {\n      person: option,\n      onClick: function onClick() {\n        return invitePerson(option.username);\n      }\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      marginBottom: '12px'\n    }\n  }, /*#__PURE__*/React.createElement(AutoCompleteInput, {\n    style: {\n      width: '100%'\n    },\n    label: \"Type a username\",\n    value: state.value,\n    options: state.others,\n    onFocus: function onFocus() {\n      return getOthers();\n    },\n    handleChange: function handleChange(value) {\n      return _handleChange(value);\n    },\n    renderOption: function renderOption(option) {\n      return _renderOption(option);\n    }\n  }));\n};\n\nvar PeopleSettings = function PeopleSettings(props) {\n  var _useState = useState({\n    collapsed: false,\n    hovered: false\n  }),\n      state = _useState[0],\n      setState = _useState[1];\n\n  var chat = props.chat;\n\n  if (chat.is_direct_chat) {\n    return /*#__PURE__*/React.createElement(\"div\", null);\n  }\n\n  function renderChatPeople(people, chat) {\n    return people.map(function (chatPerson, index) {\n      return /*#__PURE__*/React.createElement(Person, {\n        key: \"person_\" + index,\n        person: chatPerson.person,\n        conn: props,\n        chat: chat\n      });\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      borderTop: '1px solid #f0f0f0'\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    onMouseEnter: function onMouseEnter() {\n      return setState(_extends({}, state, {\n        hovered: true\n      }));\n    },\n    onMouseLeave: function onMouseLeave() {\n      return setState(_extends({}, state, {\n        hovered: false\n      }));\n    },\n    onClick: function onClick() {\n      return setState(_extends({}, state, {\n        collapsed: !state.collapsed\n      }));\n    },\n    style: state.hovered ? {\n      backgroundColor: '#f0f0f0',\n      cursor: 'pointer'\n    } : {},\n    className: \"ce-section-title-container ce-person-title-container\"\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ce-section-title ce-people-title\",\n    style: {\n      fontSize: '17px',\n      padding: '12px',\n      fontWeight: '600'\n    }\n  }, \"People\"), state.collapsed ? /*#__PURE__*/React.createElement(LeftOutlined, {\n    style: styles$4.collapseIcon\n  }) : /*#__PURE__*/React.createElement(DownOutlined, {\n    style: styles$4.collapseIcon\n  })), !state.collapsed && /*#__PURE__*/React.createElement(\"div\", null, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      height: '12px'\n    }\n  }), renderChatPeople(chat.people, chat), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      height: '12px'\n    }\n  }), props && chat && props.userName === chat.admin.username && /*#__PURE__*/React.createElement(PersonForm, {\n    conn: props,\n    chat: chat\n  })));\n};\n\nvar styles$4 = {\n  collapseIcon: {\n    \"float\": 'right',\n    position: 'relative',\n    bottom: '30px',\n    right: '12px'\n  }\n};\n\nvar Thumbnail = function Thumbnail(props) {\n  var attachment = props.attachment;\n\n  if (!attachment) {\n    return /*#__PURE__*/React.createElement(\"div\", null);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: styles$5.container,\n    className: \"ce-photo-thumbnail\"\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      paddingTop: '100%'\n    }\n  }), /*#__PURE__*/React.createElement(\"img\", {\n    alt: attachment.id,\n    style: styles$5.image,\n    src: attachment.file,\n    className: \"ce-photo-img\",\n    id: \"image-\" + attachment.id\n  }));\n};\n\nvar styles$5 = {\n  container: {\n    position: 'relative',\n    width: 'calc(33% - 8px)',\n    border: '1px solid white',\n    display: 'inline-block',\n    cursor: 'pointer'\n  },\n  image: {\n    top: '0px',\n    width: '100%',\n    height: '100%',\n    position: 'absolute',\n    objectFit: 'cover'\n  }\n};\n\nvar PhotosSettings = function PhotosSettings(props) {\n  var _useState = useState({\n    collapsed: true,\n    hovered: false\n  }),\n      state = _useState[0],\n      setState = _useState[1];\n\n  var chat = props.chat;\n\n  function renderPhotos(attachments) {\n    return attachments.map(function (attachment, index) {\n      return /*#__PURE__*/React.createElement(Thumbnail, {\n        key: \"person_\" + index,\n        attachment: attachment\n      });\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      borderTop: '1px solid #f0f0f0'\n    },\n    className: \"ce-photo-section\"\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    onMouseEnter: function onMouseEnter() {\n      return setState(_extends({}, state, {\n        hovered: true\n      }));\n    },\n    onMouseLeave: function onMouseLeave() {\n      return setState(_extends({}, state, {\n        hovered: false\n      }));\n    },\n    onClick: function onClick() {\n      return setState(_extends({}, state, {\n        collapsed: !state.collapsed\n      }));\n    },\n    style: state.hovered ? {\n      backgroundColor: '#f0f0f0',\n      cursor: 'pointer'\n    } : {},\n    className: \"ce-section-title-container ce-photo-title-container\"\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ce-section-title ce-photo-title\",\n    style: {\n      fontSize: '17px',\n      padding: '12px',\n      fontWeight: '600'\n    }\n  }, \"Photos\"), state.collapsed ? /*#__PURE__*/React.createElement(LeftOutlined, {\n    style: styles$6.collapseIcon\n  }) : /*#__PURE__*/React.createElement(DownOutlined, {\n    style: styles$6.collapseIcon\n  })), !state.collapsed && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ce-photo-feed\"\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      height: '12px'\n    }\n  }), renderPhotos(chat.attachments)));\n};\n\nvar styles$6 = {\n  collapseIcon: {\n    \"float\": 'right',\n    position: 'relative',\n    bottom: '30px',\n    right: '12px'\n  }\n};\n\nvar OptionsSettings = function OptionsSettings(props) {\n  var _useState = useState({\n    collapsed: true,\n    hovered: false\n  }),\n      state = _useState[0],\n      setState = _useState[1];\n\n  var chat = props.chat;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      borderTop: '1px solid #f0f0f0'\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    onMouseEnter: function onMouseEnter() {\n      return setState(_extends({}, state, {\n        hovered: true\n      }));\n    },\n    onMouseLeave: function onMouseLeave() {\n      return setState(_extends({}, state, {\n        hovered: false\n      }));\n    },\n    onClick: function onClick() {\n      return setState(_extends({}, state, {\n        collapsed: !state.collapsed\n      }));\n    },\n    style: state.hovered ? {\n      backgroundColor: '#f0f0f0',\n      cursor: 'pointer'\n    } : {}\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      fontSize: '17px',\n      padding: '12px',\n      fontWeight: '600'\n    }\n  }, \"Options\"), state.collapsed ? /*#__PURE__*/React.createElement(LeftOutlined, {\n    style: styles$7.collapseIcon\n  }) : /*#__PURE__*/React.createElement(DownOutlined, {\n    style: styles$7.collapseIcon\n  })), !state.collapsed && /*#__PURE__*/React.createElement(\"div\", null, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      height: '12px'\n    }\n  }), /*#__PURE__*/React.createElement(Button$1, {\n    value: \"Delete\",\n    theme: \"danger\",\n    icon: \"delete\",\n    onClick: function onClick() {\n      return deleteChat$1(props, chat.id, function (data) {});\n    },\n    style: {\n      width: '100%',\n      marginBottom: '12px'\n    }\n  })));\n};\n\nvar styles$7 = {\n  collapseIcon: {\n    \"float\": 'right',\n    position: 'relative',\n    bottom: '30px',\n    right: '12px'\n  }\n};\n\nvar NewMessageForm = function NewMessageForm(props) {\n  var didMountRef = useRef(false);\n\n  var _useState = useState({\n    activeChat: null,\n    value: ''\n  }),\n      state = _useState[0],\n      setState = _useState[1];\n\n  function _handleChange(event) {\n    setState(_extends({}, state, {\n      value: event.target.value\n    }));\n  }\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    editChat$1(props.conn, props.chat.id, {\n      title: state.value\n    }, function (data) {});\n  }\n\n  useEffect(function () {\n    if (!didMountRef.current) {\n      didMountRef.current = true;\n    } else {\n      if (state.activeChat !== props.chat.id) {\n        setState(_extends({}, state, {\n          value: props.chat.title,\n          activeChat: props.chat.id\n        }));\n      }\n    }\n  });\n  return /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: function onSubmit(e) {\n      return handleSubmit(e);\n    },\n    className: \"ce-chat-title-form\"\n  }, /*#__PURE__*/React.createElement(TextInput$1, {\n    label: \"Rename this Chat\",\n    value: state.value,\n    \"default\": props.chat.title,\n    handleChange: function handleChange(e) {\n      return _handleChange(e);\n    },\n    style: {\n      fontSize: '16px',\n      fontWeight: '600',\n      textAlign: 'center',\n      border: '0px solid white',\n      width: '100%'\n    }\n  }));\n};\n\nvar ChatSettingsTop = function ChatSettingsTop(props) {\n  var _useContext = useContext(ChatEngineContext),\n      conn = _useContext.conn;\n\n  var chat = props.chat;\n  if (!conn || conn === null) return /*#__PURE__*/React.createElement(\"div\", null);\n  var topPeople = chat.people.slice(0, 3);\n  var otherPerson = getOtherPerson(chat.people);\n\n  function renderOnePerson(people) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        width: '100%',\n        paddingTop: '14px'\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        \"float\": 'left',\n        position: 'relative',\n        left: 'calc(50% - 22px)'\n      }\n    }, /*#__PURE__*/React.createElement(Avatar$1, {\n      show_online: false,\n      username: people[0].person.username,\n      avatar: people[0].person.avatar\n    })));\n  }\n\n  function renderTwoPeople(people) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        width: '100%',\n        paddingTop: '14px'\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        \"float\": 'left',\n        position: 'relative',\n        left: 'calc(50% - 22px - 15px)'\n      }\n    }, /*#__PURE__*/React.createElement(Avatar$1, {\n      show_online: false,\n      username: people[0].person.username,\n      avatar: people[0].person.avatar\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        \"float\": 'left',\n        position: 'relative',\n        left: 'calc(50% - 44px - 22px + 15px)'\n      }\n    }, /*#__PURE__*/React.createElement(Avatar$1, {\n      show_online: false,\n      username: people[1].person.username,\n      avatar: people[1].person.avatar\n    })));\n  }\n\n  function renderThreePeople(people) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        width: '100%',\n        paddingTop: '14px'\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        \"float\": 'left',\n        position: 'relative',\n        left: 'calc(50% - 22px - 24px)'\n      }\n    }, /*#__PURE__*/React.createElement(Avatar$1, {\n      show_online: false,\n      username: people[0].person.username,\n      avatar: people[0].person.avatar\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        \"float\": 'left',\n        position: 'relative',\n        left: 'calc(50% - 24px - 44px)'\n      }\n    }, /*#__PURE__*/React.createElement(Avatar$1, {\n      show_online: false,\n      username: people[1].person.username,\n      avatar: people[1].person.avatar\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        \"float\": 'left',\n        position: 'relative',\n        left: 'calc(50% - 22px - 44px - 44px + 24px)'\n      }\n    }, /*#__PURE__*/React.createElement(Avatar$1, {\n      show_online: false,\n      username: people[2].person.username,\n      avatar: people[2].person.avatar\n    })));\n  }\n\n  function getOtherPerson(people) {\n    return people.find(function (person) {\n      return person.person.username !== conn.userName;\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ce-chat-settings-container\"\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ce-chat-avatars-row\"\n  }, topPeople.length === 1 && renderOnePerson(topPeople), chat.is_direct_chat && otherPerson && renderOnePerson([otherPerson]), !chat.is_direct_chat && otherPerson && topPeople.length === 2 && renderTwoPeople(topPeople), !chat.is_direct_chat && otherPerson && topPeople.length === 3 && renderThreePeople(topPeople)), chat.is_direct_chat && otherPerson ? /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      paddingTop: '55px',\n      paddingBottom: '7px',\n      fontSize: '16px',\n      fontWeight: '600',\n      textAlign: 'center',\n      border: '0px solid white',\n      width: '100%'\n    }\n  }, otherPerson.person.username) : /*#__PURE__*/React.createElement(NewMessageForm, {\n    chat: chat,\n    conn: conn\n  }));\n};\n\nvar ChatSettings = function ChatSettings(props) {\n  var _useContext = useContext(ChatEngineContext),\n      chats = _useContext.chats,\n      activeChat = _useContext.activeChat;\n\n  var chat = chats && chats[activeChat];\n  if (props.renderChatSettings) return props.renderChatSettings(props);\n  if (!chat) return /*#__PURE__*/React.createElement(\"div\", {\n    style: styles$8.filler\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: styles$8.settingsContainer,\n    className: \"ce-settings\"\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: '90%',\n      paddingLeft: '5%'\n    },\n    className: \"ce-settings-container\"\n  }, props.renderChatSettingsTop ? props.renderChatSettingsTop(props, chat) : /*#__PURE__*/React.createElement(ChatSettingsTop, _extends({}, props, {\n    chat: chat\n  })), props.renderPeopleSettings ? props.renderPeopleSettings(props, chat) : /*#__PURE__*/React.createElement(PeopleSettings, _extends({}, props, {\n    chat: chat\n  })), props.renderPhotosSettings ? props.renderPhotosSettings(chat) : /*#__PURE__*/React.createElement(PhotosSettings, _extends({}, props, {\n    chat: chat\n  })), props && chat && props.userName === chat.admin.username && /*#__PURE__*/React.createElement(\"div\", null, props.renderOptionsSettings ? props.renderOptionsSettings(props, chat) : /*#__PURE__*/React.createElement(OptionsSettings, _extends({}, props, {\n    chat: chat\n  })))));\n};\n\nvar styles$8 = {\n  settingsContainer: {\n    height: '100%',\n    overflow: 'scroll',\n    overflowX: 'hidden',\n    borderLeft: '1px solid #afafaf',\n    backgroundColor: 'white'\n  },\n  filler: {\n    display: 'flex',\n    width: '90%',\n    paddingLeft: '5%',\n    borderLeft: '1px solid #afafaf'\n  }\n};\n\nvar ChatSettingsDrawer = function ChatSettingsDrawer(props) {\n  var _useState = useState(false),\n      isOpen = _useState[0],\n      setIsOpen = _useState[1];\n\n  return /*#__PURE__*/React.createElement(\"div\", null, /*#__PURE__*/React.createElement(SettingOutlined, {\n    onClick: function onClick() {\n      return setIsOpen(true);\n    },\n    style: {\n      color: 'rgb(24, 144, 255)',\n      outline: 'none'\n    }\n  }), isOpen && /*#__PURE__*/React.createElement(\"div\", {\n    style: styles$9.drawerContainer\n  }, /*#__PURE__*/React.createElement(CloseOutlined, {\n    style: styles$9.closeIcon,\n    onClick: function onClick() {\n      return setIsOpen(false);\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    style: styles$9.titleContainer\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: styles$9.titleText\n  }, \"Chat Settings\")), /*#__PURE__*/React.createElement(ChatSettings, props)));\n};\n\nvar styles$9 = {\n  drawerContainer: {\n    position: 'fixed',\n    zIndex: '1',\n    top: '0px',\n    left: '0px',\n    width: '100%',\n    height: '100%',\n    backgroundColor: 'white',\n    textAlign: 'left'\n  },\n  closeIcon: {\n    position: 'absolute',\n    left: '28px',\n    top: '32px'\n  },\n  titleContainer: {\n    width: '100%',\n    padding: '24px 0px',\n    textAlign: 'center',\n    color: 'rgb(24, 144, 255)'\n  },\n  titleText: {\n    fontSize: '24px',\n    fontWeight: '600'\n  }\n};\nsetConfiguration({\n  maxScreenClass: 'xl',\n  gutterWidth: 0\n});\n\nvar ChatHeader = function ChatHeader() {\n  var _useContext = useContext(ChatEngineContext),\n      conn = _useContext.conn,\n      chats = _useContext.chats,\n      activeChat = _useContext.activeChat;\n\n  if (!chats || !activeChat || !chats[activeChat]) {\n    return /*#__PURE__*/React.createElement(\"div\", null);\n  }\n\n  if (!conn || conn === null) {\n    return /*#__PURE__*/React.createElement(\"div\", null);\n  }\n\n  var chat = chats[activeChat];\n  var otherPerson = chat.people.find(function (person) {\n    return person.person.username !== conn.userName;\n  });\n  return /*#__PURE__*/React.createElement(Row, {\n    className: \"ce-chat-title\",\n    style: styles$a.titleSection\n  }, /*#__PURE__*/React.createElement(Col, {\n    xs: 2,\n    sm: 0,\n    style: _extends({}, styles$a.mobileOptiom, {\n      left: '6px'\n    }),\n    className: \"ce-chat-list-mobile-option\"\n  }, /*#__PURE__*/React.createElement(ChatListDrawer, null)), /*#__PURE__*/React.createElement(Col, {\n    xs: 8,\n    sm: 12,\n    style: styles$a.titleContainer,\n    className: \"ce-chat-title-container\"\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: styles$a.titleText,\n    className: \"ce-chat-title-text\"\n  }, chat.is_direct_chat && otherPerson ? otherPerson.person.username : chat.title), /*#__PURE__*/React.createElement(\"div\", {\n    style: styles$a.subtitleText,\n    className: \"ce-chat-subtitle-text\"\n  }, chat.last_message.created && chat.last_message.created.length > 0 ? \"Active \" + timeSinceDate(chat.last_message.created) : 'Say hello!')), /*#__PURE__*/React.createElement(Col, {\n    xs: 2,\n    sm: 0,\n    style: _extends({}, styles$a.mobileOptiom, {\n      right: '6px'\n    }),\n    className: \"ce-chat-settings-mobile-option\"\n  }, /*#__PURE__*/React.createElement(ChatSettingsDrawer, null)));\n};\n\nvar styles$a = {\n  titleSection: {\n    position: 'absolute',\n    top: '0px',\n    width: '100%',\n    zIndex: '1',\n    backgroundColor: 'rgb(256, 256, 256, 0.92)'\n  },\n  mobileOptiom: {\n    width: '100%',\n    top: '32px',\n    textAlign: 'center',\n    color: 'rgb(24, 144, 255)',\n    overflow: 'hidden'\n  },\n  titleContainer: {\n    width: '100%',\n    padding: '18px 0px',\n    textAlign: 'center',\n    color: 'rgb(24, 144, 255)'\n  },\n  titleText: {\n    fontSize: '24px',\n    fontWeight: '600'\n  },\n  subtitleText: {\n    fontSize: '12px'\n  }\n};\nvar months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\nvar suffix = ['st', 'nd', 'rd', 'th', 'th', 'th', 'th', 'th', 'th', 'th', 'th', 'th', 'th', 'th', 'th', 'th', 'th', 'th', 'th', 'th', 'st', 'nd', 'rd', 'th', 'th', 'th', 'th', 'th', 'th', 'th', 'st'];\n\nvar DatePartition = function DatePartition(props) {\n  function getDate(date) {\n    return date ? date.substr(0, 10) : null;\n  }\n\n  function formatDate(date_time) {\n    if (!date_time) return '';\n    var year = date_time.substr(0, 4);\n    var month = months[parseInt(date_time.substr(5, 2)) - 1];\n    var day = date_time.substr(8, 2);\n    var dayDuffix = suffix[parseInt(date_time.substr(8, 2)) - 1];\n    var time = date_time.substr(11, 5);\n    var timeSuffix = '';\n\n    if (parseInt(time.substr(0, 2)) >= 12) {\n      if (parseInt(time.substr(0, 2)) > 12) {\n        time = String(parseInt(time.substr(0, 2)) - 12) + ':' + time.substr(3, 2);\n      }\n\n      timeSuffix = 'PM';\n    } else {\n      timeSuffix = 'AM';\n    }\n\n    return time + timeSuffix + ', ' + month + ' ' + day + dayDuffix + ', ' + year;\n  }\n\n  var lastCreated = props.lastCreated,\n      created = props.created;\n  var lastDate = getDate(lastCreated);\n  var thisDate = getDate(created);\n\n  if (lastCreated && lastDate === thisDate) {\n    return /*#__PURE__*/React.createElement(\"div\", null);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: styles$b.dateText,\n    className: \"ce-message-date-text\"\n  }, formatDate(created));\n};\n\nvar styles$b = {\n  dateText: {\n    width: '100%',\n    textAlign: 'center',\n    paddingTop: '4px',\n    paddingBottom: '10px',\n    fontSize: '15px',\n    color: 'rgba(0, 0, 0, .40)'\n  }\n};\n\nvar _loadingContainer, _thumbnail;\n\nvar Thumbnail$1 = function Thumbnail(props) {\n  var attachment = props.attachment;\n\n  if (!attachment) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: styles$c.loadingContainer\n    }, /*#__PURE__*/React.createElement(LoadingOutlined, {\n      style: {\n        color: 'white',\n        padding: '4px',\n        fontSize: '28px'\n      }\n    }));\n  }\n\n  return /*#__PURE__*/React.createElement(\"img\", {\n    style: styles$c.thumbnail,\n    src: attachment.file,\n    alt: 'thumb-nail'\n  });\n};\n\nvar styles$c = {\n  loadingContainer: (_loadingContainer = {\n    width: '100%',\n    cursor: 'pointer',\n    textAlign: 'right',\n    display: 'inline-block',\n    objectFit: 'cover',\n    borderRadius: '0.3em',\n    marginRight: '2px',\n    height: '30vw'\n  }, _loadingContainer[\"width\"] = '30vw', _loadingContainer.maxHeight = '200px', _loadingContainer.maxWidth = '200px', _loadingContainer.minHeight = '100px', _loadingContainer.minWidth = '100px', _loadingContainer.backgroundColor = '#d9d9d9', _loadingContainer),\n  thumbnail: (_thumbnail = {\n    width: '100%',\n    cursor: 'pointer',\n    textAlign: 'right',\n    display: 'inline',\n    objectFit: 'cover',\n    borderRadius: '0.3em',\n    paddingRight: '2px',\n    height: '30vw'\n  }, _thumbnail[\"width\"] = '30vw', _thumbnail.maxHeight = '200px', _thumbnail.maxWidth = '200px', _thumbnail.minHeight = '100px', _thumbnail.minWidth = '100px', _thumbnail)\n};\nvar colors = ['#D64045', '#5B3000', '#00CC99', '#467599', '#1D3354', '#8F250C', '#6153CC', '#961D4E', '#A29F15', '#0CAADC', '#FF5154', '#FA7921', '#688E26', '#550527', '#A10702', '#FF1053', '#6C6EA0', '#100B00'];\n\nfunction stringToNumber(str) {\n  var sum = 0;\n\n  for (var i = 0; i < str.length; i++) {\n    sum = sum + str.charCodeAt(i) * i - 97;\n  }\n\n  return sum;\n}\n\nfunction stringToColor(str) {\n  if (!str) {\n    return 'black';\n  } else {\n    return colors[stringToNumber(str) % colors.length];\n  }\n}\n\nvar Dot = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(Dot, _Component);\n\n  function Dot() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _Component.call.apply(_Component, [this].concat(args)) || this;\n    _this.state = {\n      avatar: ''\n    };\n    return _this;\n  }\n\n  var _proto = Dot.prototype;\n\n  _proto.updateImg = function updateImg() {\n    var avatar = this.props.avatar;\n    avatar = avatar && avatar !== null ? avatar : '';\n\n    if (avatar.split('?')[0] !== this.state.avatar.split('?')[0]) {\n      this.setState({\n        avatar: avatar\n      });\n    }\n  };\n\n  _proto.componentDidMount = function componentDidMount() {\n    this.updateImg();\n  };\n\n  _proto.componentDidUpdate = function componentDidUpdate() {\n    this.updateImg();\n  };\n\n  _proto.render = function render() {\n    var username = this.props.username;\n    var color = stringToColor(username);\n    var customStyle = this.props.style ? this.props.style : {};\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"ce-avatar-dot\",\n      style: _extends({}, styles$d.dot, customStyle, {\n        backgroundColor: this.state.avatar ? 'white' : color,\n        backgroundImage: this.state.avatar && \"url(\" + this.state.avatar + \")\",\n        backgroundRepeat: 'no-repeat',\n        backgroundPosition: 'center',\n        backgroundSize: '14px'\n      })\n    });\n  };\n\n  return Dot;\n}(Component);\n\nvar styles$d = {\n  dot: {\n    width: '13px',\n    height: '13px',\n    borderRadius: '13px',\n    textAlign: 'center'\n  }\n};\nsetConfiguration({\n  maxScreenClass: 'xl'\n});\n\nvar Message = function Message(props) {\n  function renderReads() {\n    var chat = props.chat,\n        message = props.message;\n\n    if (!chat) {\n      return /*#__PURE__*/React.createElement(\"div\", null);\n    }\n\n    return chat.people.map(function (chatPerson, index) {\n      if (message.id === chatPerson.last_read) {\n        return /*#__PURE__*/React.createElement(Dot, {\n          key: \"read_\" + index,\n          avatar: chatPerson.person.avatar,\n          username: chatPerson.person.username,\n          style: {\n            \"float\": 'right',\n            marginLeft: '4px'\n          }\n        });\n      }\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        key: \"read_\" + index\n      });\n    });\n  }\n\n  function renderAttachments() {\n    var message = props.message;\n    var attachments = message && message.attachments ? message.attachments : [];\n    return attachments.map(function (attachment, index) {\n      return /*#__PURE__*/React.createElement(Thumbnail$1, {\n        attachment: attachment,\n        key: \"attachment_\" + index\n      });\n    });\n  }\n\n  var lastMessage = props.lastMessage,\n      message = props.message,\n      nextMessage = props.nextMessage;\n\n  if (!message) {\n    return /*#__PURE__*/React.createElement(\"div\", null);\n  }\n\n  var attachments = message && message.attachments && message.attachments;\n  var topRightRadius = !lastMessage || lastMessage.sender_username !== message.sender_username ? '1.3em' : '0.3em';\n  var bottomRightRadius = !nextMessage || nextMessage.sender_username !== message.sender_username ? '1.3em' : '0.3em';\n  var borderRadius = \"1.3em \" + topRightRadius + \" \" + bottomRightRadius + \" 1.3em\";\n  var paddingBottom = !nextMessage || nextMessage.sender_username !== message.sender_username ? '12px' : '2px';\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ce-message-row ce-my-message\",\n    style: {\n      width: '100%',\n      textAlign: 'right',\n      paddingBottom: paddingBottom\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: 'auto'\n    },\n    className: \"ce-my-message-attachments-container\"\n  }, renderAttachments()), /*#__PURE__*/React.createElement(Row, {\n    style: {\n      paddingRight: '2px'\n    },\n    className: \"ce-message-bubble-row ce-my-message-bubble-row\"\n  }, /*#__PURE__*/React.createElement(Col, {\n    xs: 1,\n    sm: 2,\n    md: 3\n  }), /*#__PURE__*/React.createElement(Col, {\n    xs: 11,\n    sm: 10,\n    md: 9\n  }, !attachments || message.text && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ce-message-bubble ce-my-message-bubble\",\n    style: _extends({}, styles$e.myMessage, {\n      borderRadius: borderRadius\n    })\n  }, message.text)), /*#__PURE__*/React.createElement(Col, {\n    xs: 1,\n    sm: 2,\n    md: 3\n  }), /*#__PURE__*/React.createElement(Col, {\n    xs: 12,\n    className: \"ce-reads-row ce-my-reads-row\"\n  }, renderReads())));\n};\n\nvar styles$e = {\n  myMessage: {\n    color: 'white',\n    cursor: 'pointer',\n    \"float\": 'right',\n    textAlign: 'left',\n    padding: '12px',\n    fontSize: '15px',\n    whiteSpace: 'pre-line',\n    backgroundColor: 'rgb(24, 144, 255)'\n  }\n};\nsetConfiguration({\n  maxScreenClass: 'xl'\n});\n\nvar TheirMessage = function TheirMessage(props) {\n  function renderReads() {\n    var chat = props.chat,\n        message = props.message;\n\n    if (!chat) {\n      return /*#__PURE__*/React.createElement(\"div\", null);\n    }\n\n    return chat.people.map(function (person, index) {\n      if (message.id === person.last_read) {\n        return /*#__PURE__*/React.createElement(Dot$1, {\n          key: \"read_\" + index,\n          avatar: person.person.avatar,\n          username: person.person.username,\n          style: {\n            \"float\": 'left',\n            marginLeft: '4px'\n          }\n        });\n      }\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        key: \"read_\" + index\n      });\n    });\n  }\n\n  function renderAttachments() {\n    var message = props.message;\n    var attachments = message && message.attachments ? props.message.attachments : [];\n    return attachments.map(function (attachment, index) {\n      return /*#__PURE__*/React.createElement(Thumbnail$1, {\n        attachment: attachment,\n        key: \"attachment_\" + index\n      });\n    });\n  }\n\n  var lastMessage = props.lastMessage,\n      message = props.message,\n      nextMessage = props.nextMessage;\n\n  if (!message) {\n    return /*#__PURE__*/React.createElement(\"div\", null);\n  }\n\n  var attachments = message && message.attachments && message.attachments;\n  var topLeftRadius = !lastMessage || lastMessage.sender_username !== message.sender_username ? '1.3em' : '0.3em';\n  var bottomLeftRadius = !nextMessage || nextMessage.sender_username !== message.sender_username ? '1.3em' : '0.3em';\n  var borderRadius = topLeftRadius + \" 1.3em 1.3em \" + bottomLeftRadius;\n  var paddingBottom = !nextMessage || nextMessage.sender_username !== message.sender_username ? '12px' : '2px';\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: '100%',\n      paddingBottom: paddingBottom\n    },\n    className: \"ce-message-row ce-their-message\"\n  }, (!lastMessage || lastMessage.sender_username !== message.sender_username) && /*#__PURE__*/React.createElement(\"div\", {\n    style: styles$f.nameText,\n    className: \"ce-their-message-sender\"\n  }, message.sender_username), /*#__PURE__*/React.createElement(Row, {\n    style: {\n      paddingLeft: '2px'\n    },\n    className: \"ce-their-message-row\"\n  }, /*#__PURE__*/React.createElement(Col, {\n    xs: 11,\n    sm: 10,\n    md: 9\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      height: '0px'\n    },\n    className: \"ce-their-message-avatar\"\n  }, (!nextMessage || nextMessage.sender_username !== message.sender_username) && /*#__PURE__*/React.createElement(Avatar$1, {\n    show_online: false,\n    username: message.sender_username,\n    avatar: message.sender && message.sender.avatar\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: 'auto',\n      paddingLeft: '50px'\n    },\n    className: \"ce-their-message-attachments-container\"\n  }, renderAttachments()), !attachments || message.text && /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      paddingLeft: '48px'\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ce-message-bubble ce-their-message-bubble\",\n    style: _extends({}, styles$f.theirMessage, {\n      borderRadius: borderRadius\n    })\n  }, message.text))), /*#__PURE__*/React.createElement(Col, {\n    xs: 9,\n    style: {\n      marginLeft: '48px'\n    },\n    className: \"ce-reads-row ce-their-reads-row\"\n  }, renderReads())));\n};\n\nvar styles$f = {\n  theirMessage: {\n    cusor: 'auto',\n    color: 'black',\n    \"float\": 'left',\n    padding: '12px',\n    fontSize: '15px',\n    whiteSpace: 'pre-line',\n    backgroundColor: '#f1f0f0'\n  },\n  nameText: {\n    paddingLeft: '62px',\n    paddingBottom: '2px',\n    color: 'rgba(0, 0, 0, .40)',\n    fontSize: '15px'\n  }\n};\nsetConfiguration({\n  maxScreenClass: 'xl'\n});\n\nvar SendingMessage = function SendingMessage(props) {\n  function renderAttachments(attachments) {\n    return attachments.map(function (a, index) {\n      return /*#__PURE__*/React.createElement(Thumbnail$1, {\n        key: \"sending-file-\" + index\n      });\n    });\n  }\n\n  var lastMessage = props.lastMessage,\n      message = props.message,\n      nextMessage = props.nextMessage;\n\n  if (!message) {\n    return /*#__PURE__*/React.createElement(\"div\", null);\n  }\n\n  var attachments = message && message.attachments ? message.attachments : [];\n  var topRightRadius = !lastMessage || lastMessage.sender_username !== message.sender_username ? '1.3em' : '0.3em';\n  var bottomRightRadius = !nextMessage || nextMessage.sender_username !== message.sender_username ? '1.3em' : '0.3em';\n  var borderRadius = \"1.3em \" + topRightRadius + \" \" + bottomRightRadius + \" 1.3em\";\n  var paddingBottom = !nextMessage || nextMessage.sender_username !== message.sender_username ? '12px' : '2px';\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ce-message-row ce-my-message ce-my-message-sending\",\n    style: {\n      width: '100%',\n      textAlign: 'right',\n      paddingBottom: paddingBottom\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: 'auto'\n    },\n    className: \"ce-my-message-attachments-container\"\n  }, renderAttachments(attachments)), /*#__PURE__*/React.createElement(Row, {\n    style: {\n      paddingRight: '2px'\n    },\n    className: \"ce-message-bubble-row ce-my-message-bubble-row ce-my-message-sending-row\"\n  }, /*#__PURE__*/React.createElement(Col, {\n    xs: 1,\n    sm: 2,\n    md: 3\n  }), /*#__PURE__*/React.createElement(Col, {\n    xs: 11,\n    sm: 10,\n    md: 9\n  }, message.text && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ce-message-bubble ce-my-message-bubble\",\n    style: _extends({}, styles$g.myMessage, {\n      borderRadius: borderRadius\n    })\n  }, message.text)), /*#__PURE__*/React.createElement(Col, {\n    xs: 1,\n    sm: 2,\n    md: 3\n  })));\n};\n\nvar styles$g = {\n  myMessage: {\n    color: 'white',\n    cursor: 'pointer',\n    \"float\": 'right',\n    textAlign: 'left',\n    padding: '12px',\n    fontSize: '15px',\n    whiteSpace: 'pre-line',\n    backgroundColor: '#40a9ff'\n  }\n};\n\nvar Message$1 = function Message$1(props) {\n  var lastMessage = props.lastMessage,\n      message = props.message,\n      nextMessage = props.nextMessage,\n      sending = props.sending,\n      chat = props.chat;\n\n  var _useContext = useContext(ChatEngineContext),\n      conn = _useContext.conn;\n\n  if (!message || !chat) {\n    return /*#__PURE__*/React.createElement(\"div\", null);\n  }\n\n  if (!conn || conn === null) {\n    return /*#__PURE__*/React.createElement(\"div\", null);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ce-message-and-date\"\n  }, !sending && /*#__PURE__*/React.createElement(DatePartition, {\n    lastCreated: lastMessage ? lastMessage.created : null,\n    created: message.created\n  }), sending ? /*#__PURE__*/React.createElement(SendingMessage, {\n    chat: chat,\n    conn: conn,\n    lastMessage: lastMessage,\n    message: message,\n    nextMessage: nextMessage\n  }) : /*#__PURE__*/React.createElement(\"div\", null, message.sender_username === conn.userName || message.sender_username === conn.senderUsername ? /*#__PURE__*/React.createElement(Message, {\n    chat: chat,\n    conn: conn,\n    lastMessage: lastMessage,\n    message: message,\n    nextMessage: nextMessage\n  }) : /*#__PURE__*/React.createElement(TheirMessage, {\n    chat: chat,\n    conn: conn,\n    lastMessage: lastMessage,\n    message: message,\n    nextMessage: nextMessage\n  })));\n};\n\nvar Thumbnail$2 = function Thumbnail(props) {\n  var _useState = useState(false),\n      hovered = _useState[0],\n      setHovered = _useState[1];\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      padding: '12px 6px',\n      display: 'inline'\n    },\n    onMouseEnter: function onMouseEnter() {\n      return setHovered(true);\n    },\n    onMouseLeave: function onMouseLeave() {\n      return setHovered(false);\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    style: styles$h.imageSquare,\n    alt: props.file ? props.file.name : '',\n    src: URL.createObjectURL(props.file)\n  }), hovered && /*#__PURE__*/React.createElement(CloseCircleTwoTone, {\n    style: styles$h.closeIcon,\n    onClick: function onClick() {\n      return props.onRemove && props.onRemove();\n    }\n  }));\n};\n\nvar styles$h = {\n  imageSquare: {\n    height: '108px',\n    width: '108px',\n    border: '1px solid #afafaf',\n    borderRadius: '8px',\n    objectFit: 'cover',\n    display: 'inline'\n  },\n  closeIcon: {\n    position: 'relative',\n    bottom: '91px',\n    right: '20px',\n    width: '0px',\n    cursor: 'pointer'\n  }\n};\n\nvar FileRow = function FileRow(props) {\n  function renderFiles() {\n    return props.files.map(function (file, index) {\n      return /*#__PURE__*/React.createElement(Thumbnail$2, {\n        file: file,\n        key: \"thumb_\" + index,\n        onRemove: function onRemove() {\n          return props.onRemove && props.onRemove(index);\n        }\n      });\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: 'calc(100% - 24px)',\n      paddingLeft: '12px'\n    }\n  }, renderFiles());\n};\n\nvar ImagesInput = function ImagesInput(props) {\n  var _useState = useState({\n    hovered: false,\n    files: []\n  }),\n      state = _useState[0],\n      setState = _useState[1];\n\n  function onSelect(event) {\n    var files = [];\n    var indexes = [].concat(Array(event.target.files.length).keys());\n    indexes.map(function (i, index) {\n      var file = event.target.files[index];\n\n      if (file) {\n        files.push(file);\n      }\n    });\n    props.onSelectFiles && props.onSelectFiles(files);\n  }\n\n  return /*#__PURE__*/React.createElement(\"form\", {\n    className: \"uploader\",\n    encType: \"multipart/form-data\",\n    style: {\n      height: '0px'\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"files\",\n    id: \"upload-document-button\"\n  }, /*#__PURE__*/React.createElement(PaperClipOutlined, {\n    onMouseEnter: function onMouseEnter() {\n      return setState(_extends({}, state, {\n        hovered: true\n      }));\n    },\n    onMouseLeave: function onMouseLeave() {\n      return setState(_extends({}, state, {\n        hovered: false\n      }));\n    },\n    style: _extends({}, {\n      cursor: 'pointer',\n      position: 'absolute',\n      bottom: '20px',\n      right: '63px',\n      fontSize: '18px'\n    }, {\n      color: state.hovered ? '#69c0ff' : '#1890ff'\n    })\n  })), /*#__PURE__*/React.createElement(\"input\", {\n    multiple: true,\n    id: \"files\",\n    accept: \"image/x-png,image/gif,image/jpeg\",\n    style: {\n      visibility: \"hidden\"\n    },\n    type: \"file\",\n    onChange: function onChange(e) {\n      return onSelect(e);\n    }\n  }));\n};\n\nvar _this$2 = undefined;\n\nvar NewMessageForm$1 = function NewMessageForm() {\n  var _useContext = useContext(ChatEngineContext),\n      conn = _useContext.conn,\n      activeChat = _useContext.activeChat,\n      sendingMessages = _useContext.sendingMessages,\n      setSendingMessages = _useContext.setSendingMessages;\n\n  if (!conn || conn === null) return /*#__PURE__*/React.createElement(\"div\", null);\n\n  var _useState = useState({\n    trigger: 0,\n    mod: 3,\n    value: '',\n    attachments: []\n  }),\n      state = _useState[0],\n      setState = _useState[1];\n\n  function _onRemove(index) {\n    var attachments = state.attachments;\n    attachments.splice(index, 1);\n    setState(_extends({}, state, {\n      attachments: attachments\n    }));\n  }\n\n  function handleChange(event) {\n    setState(_extends({}, state, {\n      value: event.target.value,\n      trigger: (state.trigger + 1) % state.mod\n    }));\n\n    if (state.trigger === 1) {\n      isTyping$1(conn, activeChat);\n    }\n  }\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    var attachments = state.attachments;\n    var text = state.value.trim();\n    var custom_json = {\n      sender_id: Date.now().toString()\n    };\n    var sender_username = conn.userName ? conn.userName : conn.senderUsername;\n    var data = {\n      text: text,\n      attachments: attachments,\n      custom_json: custom_json,\n      sender_username: sender_username,\n      chat: activeChat\n    };\n\n    if (text.length > 0 || attachments.length > 0) {\n      sendMessage$1(conn, activeChat, data, function (data) {});\n    }\n\n    setState(_extends({}, state, {\n      value: '',\n      attachments: []\n    }));\n\n    var newSendingMessages = _extends({}, sendingMessages);\n\n    newSendingMessages[data.custom_json.sender_id] = data;\n    setSendingMessages(newSendingMessages);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    id: \"msg-form-container\",\n    style: styles$i.NewMessageFormContainer,\n    className: \"ce-message-form-container\"\n  }, /*#__PURE__*/React.createElement(FileRow, {\n    files: state.attachments,\n    onRemove: function onRemove(i) {\n      return _onRemove(i);\n    }\n  }), /*#__PURE__*/React.createElement(ImagesInput, {\n    onSelectFiles: function onSelectFiles(attachments) {\n      return setState(_extends({}, state, {\n        attachments: attachments\n      }));\n    }\n  }), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit.bind(_this$2),\n    className: \"ce-message-form\"\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: styles$i.inputContainer,\n    className: \"ce-message-input-form\"\n  }, /*#__PURE__*/React.createElement(TextAreaInput$1, {\n    value: state.value,\n    label: \"Send a message...\",\n    handleChange: handleChange.bind(_this$2),\n    onSubmit: handleSubmit.bind(_this$2)\n  }), /*#__PURE__*/React.createElement(Button$1, {\n    icon: \"send\",\n    type: \"submit\",\n    style: {\n      position: 'absolute',\n      bottom: '10px',\n      right: '6px'\n    }\n  }))));\n};\n\nvar styles$i = {\n  NewMessageFormContainer: {\n    position: 'absolute',\n    bottom: '0px',\n    width: '100%',\n    backgroundColor: 'white'\n  },\n  inputContainer: {\n    minHeight: '36px',\n    paddingTop: '10px',\n    paddingBottom: '6px'\n  }\n};\n\nvar IsTyping = function IsTyping(props) {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      color: stringToColor(props.username),\n      padding: '2px',\n      paddingLeft: '12px'\n    }\n  }, props.username + \" is typing...\");\n};\n\nvar ChatFeed = function ChatFeed(props) {\n  var didMountRef = useRef(false);\n\n  var _useState = useState(0),\n      duration = _useState[0],\n      setDuration = _useState[1];\n\n  var _useState2 = useState(null),\n      currentChat = _useState2[0],\n      setCurrentChat = _useState2[1];\n\n  var _useContext = useContext(ChatEngineContext),\n      connecting = _useContext.connecting,\n      conn = _useContext.conn,\n      chats = _useContext.chats,\n      setChats = _useContext.setChats,\n      sendingMessages = _useContext.sendingMessages,\n      messages = _useContext.messages,\n      setMessages = _useContext.setMessages,\n      activeChat = _useContext.activeChat,\n      setActiveChat = _useContext.setActiveChat,\n      typingData = _useContext.typingData,\n      setTypingData = _useContext.setTypingData,\n      typingCounter = _useContext.typingCounter,\n      setTypingCounter = _useContext.setTypingCounter;\n\n  function onReadMessage(chat) {\n    if (chats) {\n      var newChats = _extends({}, chats);\n\n      newChats[chat.id] = chat;\n      setChats(newChats);\n    }\n  }\n\n  function onGetMessages(chatId, messages) {\n    setMessages(_$1.mapKeys(messages, 'id'));\n\n    if (messages.length > 0) {\n      var message = messages[messages.length - 1];\n\n      if (props.userName && props.userName !== message.sender_username) {\n        readMessage(conn, chatId, message.id, function (chat) {\n          return onReadMessage(chat);\n        });\n      }\n    }\n\n    props.onGetMessages && props.onGetMessages(chatId, messages);\n  }\n\n  function loadMoreMessages() {\n    if (conn && !props.activeChat && activeChat !== null && activeChat !== currentChat) {\n      setCurrentChat(activeChat);\n      getMessages(conn, activeChat, function (chatId, messages) {\n        return onGetMessages(chatId, messages);\n      });\n    } else if (conn && props.activeChat && props.activeChat !== currentChat) {\n      setActiveChat(props.activeChat);\n      setCurrentChat(props.activeChat);\n      getMessages(conn, props.activeChat, function (chatId, messages) {\n        return onGetMessages(chatId, messages);\n      });\n    }\n  }\n\n  useEffect(function () {\n    loadMoreMessages();\n  }, [conn, activeChat, currentChat]);\n  useEffect(function () {\n    if (typingCounter) {\n      var newTypingCounter = _extends({}, typingCounter);\n\n      Object.keys(newTypingCounter).map(function (chatId) {\n        Object.keys(newTypingCounter[chatId]).map(function (person) {\n          if (newTypingCounter[chatId][person] > 0) {\n            setTimeout(function () {\n              var _extends2, _extends3;\n\n              setTypingCounter(_extends({}, newTypingCounter, (_extends3 = {}, _extends3[chatId] = _extends({}, newTypingCounter[chatId], (_extends2 = {}, _extends2[person] = newTypingCounter[chatId][person] - 1, _extends2)), _extends3)));\n            }, 2500);\n          }\n        });\n      });\n    }\n  }, [typingCounter]);\n  useEffect(function () {\n    if (!didMountRef.current) {\n      didMountRef.current = true;\n      setTimeout(function () {\n        setDuration(100);\n      }, 3000);\n    } else {\n      if (!_$1.isEmpty(messages)) {\n        animateScroll.scrollToBottom({\n          duration: duration,\n          containerId: \"ce-feed-container\"\n        });\n      }\n\n      Object.keys(typingCounter).map(function (chat) {\n        var typers = [];\n        Object.keys(typingCounter[chat]).map(function (person) {\n          if (typingCounter[chat][person] > 0) {\n            typers.push(person);\n          }\n        });\n\n        if (!typingData[chat] || typingData[chat].length !== typers.length) {\n          var _extends4;\n\n          setTypingData(_extends({}, typingData, (_extends4 = {}, _extends4[chat] = typers, _extends4)));\n        }\n      });\n    }\n  });\n\n  function renderTypers() {\n    var typers = typingData && typingData[activeChat] ? typingData[activeChat] : [];\n\n    if (props.renderIsTyping) {\n      return props.renderIsTyping(typers);\n    }\n\n    return typers.map(function (username, index) {\n      return /*#__PURE__*/React.createElement(IsTyping, {\n        key: \"typer_\" + index,\n        username: username\n      });\n    });\n  }\n\n  function renderMessages() {\n    var chat = chats && chats[activeChat];\n    var keys = Object.keys(messages);\n    return keys.map(function (key, index) {\n      var message = messages[key];\n      var lastMessageKey = index === 0 ? null : keys[index - 1];\n      var nextMessageKey = index === keys.length - 1 ? null : keys[index + 1];\n\n      if (props.renderMessageBubble) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          key: \"message_\" + index\n        }, props.renderMessageBubble(conn, chat, messages[lastMessageKey], message, messages[nextMessageKey]));\n      }\n\n      return /*#__PURE__*/React.createElement(Message$1, {\n        key: \"message_\" + index,\n        chat: chat,\n        message: message,\n        lastMessage: messages[lastMessageKey],\n        nextMessage: messages[nextMessageKey]\n      });\n    });\n  }\n\n  function renderSendingMessages() {\n    var keys = Object.keys(sendingMessages);\n    var chat = chats && chats[activeChat];\n    return keys.map(function (key, index) {\n      var message = sendingMessages[key];\n      var lastMessageKey = index === 0 ? null : keys[index - 1];\n      var nextMessageKey = index === keys.length - 1 ? null : keys[index + 1];\n\n      if (message && message.chat === activeChat) {\n        return /*#__PURE__*/React.createElement(Message$1, {\n          sending: true,\n          key: \"sending-msg-\" + index,\n          chat: chat,\n          message: message,\n          lastMessage: sendingMessages[lastMessageKey],\n          nextMessage: sendingMessages[nextMessageKey]\n        });\n      }\n    });\n  }\n\n  var chat = chats && chats[currentChat];\n  if (props.renderChatFeed) return props.renderChatFeed(props);\n  if (conn === undefined) return /*#__PURE__*/React.createElement(AuthFail, null);\n  if (conn && chats !== null && _$1.isEmpty(chats)) return /*#__PURE__*/React.createElement(Welcome, null);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ce-chat-feed\",\n    style: {\n      height: '100%',\n      maxHeight: '100vh',\n      backgroundColor: '#f0f0f0'\n    }\n  }, connecting && /*#__PURE__*/React.createElement(Loading, null), props.renderChatHeader ? props.renderChatHeader(chat) : /*#__PURE__*/React.createElement(ChatHeader, null), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"ce-feed-container\",\n    style: styles$j.feedContainer,\n    className: \"ce-chat-feed-container\"\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      height: '88px'\n    },\n    className: \"ce-feed-container-top\"\n  }), renderMessages(), renderSendingMessages(), renderTypers(), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      height: '54px'\n    },\n    className: \"ce-feed-container-bottom\"\n  })), props.renderNewMessageForm ? props.renderNewMessageForm(props, currentChat) : /*#__PURE__*/React.createElement(NewMessageForm$1, null));\n};\n\nvar styles$j = {\n  feedContainer: {\n    width: '100%',\n    height: '100%',\n    maxHeight: '100vh',\n    overflowX: 'hidden',\n    overflowY: 'scroll',\n    backgroundColor: 'white'\n  }\n};\nsetConfiguration({\n  maxScreenClass: 'xl',\n  gutterWidth: 0\n});\n\nvar ChatEngine = function ChatEngine(props) {\n  var context = useContext(ChatEngineContext);\n  var height = props.height;\n\n  var propsAndContext = _extends({}, props, context);\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      textAlign: 'left',\n      backgroundColor: 'white'\n    }\n  }, /*#__PURE__*/React.createElement(Socket, props), /*#__PURE__*/React.createElement(Row, null, /*#__PURE__*/React.createElement(Col, {\n    xs: 0,\n    sm: 3,\n    style: {\n      height: height ? height : ''\n    }\n  }, /*#__PURE__*/React.createElement(ChatList, propsAndContext)), /*#__PURE__*/React.createElement(Col, {\n    xs: 12,\n    sm: 6,\n    style: {\n      height: height ? height : ''\n    }\n  }, /*#__PURE__*/React.createElement(ChatFeed, propsAndContext)), /*#__PURE__*/React.createElement(Col, {\n    xs: 0,\n    sm: 3,\n    style: {\n      height: height ? height : ''\n    }\n  }, /*#__PURE__*/React.createElement(ChatSettings, propsAndContext))));\n};\n\nvar ChatEngineApp = function ChatEngineApp(props) {\n  if (useContext(ChatEngineContext)) {\n    return /*#__PURE__*/React.createElement(ChatEngine, props);\n  } else {\n    return /*#__PURE__*/React.createElement(ChatEngineWrapper, null, /*#__PURE__*/React.createElement(ChatEngine, props));\n  }\n};\n\nvar _this$3 = undefined;\n\nvar ChatSocket = function ChatSocket(props) {\n  var _useContext = useContext(ChatEngineContext),\n      setConnecting = _useContext.setConnecting,\n      conn = _useContext.conn,\n      setConn = _useContext.setConn,\n      setCreds = _useContext.setCreds,\n      chats = _useContext.chats,\n      setChats = _useContext.setChats,\n      messages = _useContext.messages,\n      setMessages = _useContext.setMessages,\n      sendingMessages = _useContext.sendingMessages,\n      setSendingMessages = _useContext.setSendingMessages,\n      activeChat = _useContext.activeChat,\n      setActiveChat = _useContext.setActiveChat,\n      typingCounter = _useContext.typingCounter,\n      setTypingCounter = _useContext.setTypingCounter;\n\n  function onEditChat(chat) {\n    if (chats) {\n      var newChats = _extends({}, chats);\n\n      newChats[chat.id] = chat;\n      setChats(newChats);\n    }\n\n    props.onEditChat && props.onEditChat(chat);\n  }\n\n  function onGetChat(chat) {\n    if (activeChat === null) {\n      setActiveChat(chat.id);\n    }\n\n    setChats(_.mapKeys([chat], 'id'));\n  }\n\n  function onConnect(conn) {\n    setConn(conn);\n    setCreds(conn);\n    setConnecting(false);\n    getChat(conn, props.chatID, function (chat) {\n      return onGetChat(chat);\n    });\n    props.onConnect && props.onConnect(conn);\n  }\n\n  function handleEvent(event) {\n    var eventJSON = JSON.parse(event);\n\n    if (eventJSON.action === 'login_error') {\n      console.log(\"Your chat auth credentials were not correct: \\n\\n                Project ID: \" + props.projectID + \" \\n\\n                Chat ID: \" + props.chatID + \" \\n\\n                Access Key: \" + props.chatAccessKey + \"\\n\\n                Double check these credentials to make sure they're correct.\\n\\n                If all three are correct, try resetting the username and secret in the Online Dashboard or Private API.\");\n      setConn(undefined);\n      setCreds(undefined);\n      props.onFailAuth && props.onFailAuth(conn);\n    } else if (eventJSON.action === 'edit_chat') {\n      onEditChat(eventJSON.data);\n    } else if (eventJSON.action === 'delete_chat') {\n      var chat = eventJSON.data;\n\n      if (chats) {\n        chats[chat.id] = undefined;\n        setChats(chats);\n      }\n\n      props.onDeleteChat && props.onDeleteChat(chat);\n    } else if (eventJSON.action === 'add_person') {\n      onEditChat(eventJSON.data);\n      props.onAddPerson && props.onAddPerson(eventJSON.data);\n    } else if (eventJSON.action === 'remove_person') {\n      onEditChat(eventJSON.data);\n      props.onRemovePerson && props.onRemovePerson(eventJSON.data);\n    } else if (eventJSON.action === 'new_message') {\n      var _eventJSON$data = eventJSON.data,\n          id = _eventJSON$data.id,\n          message = _eventJSON$data.message;\n\n      if (typeof message.custom_json === \"string\" && message.custom_json.indexOf('sender_id') !== -1) {\n        sendingMessages[JSON.parse(message.custom_json).sender_id] = undefined;\n        setSendingMessages(sendingMessages);\n      }\n\n      if (id === activeChat) {\n        var newMessages = _extends({}, messages);\n\n        newMessages[message.id] = message;\n        setMessages(newMessages);\n      }\n\n      props.onNewMessage && props.onNewMessage(id, message);\n    } else if (eventJSON.action === 'edit_message') {\n      var _eventJSON$data2 = eventJSON.data,\n          _id = _eventJSON$data2.id,\n          _message = _eventJSON$data2.message;\n\n      if (_id === activeChat) {\n        messages[_message.id] = _message;\n        setMessages(messages);\n      }\n\n      props.onEditMessage && props.onEditMessage(_id, _message);\n    } else if (eventJSON.action === 'delete_message') {\n      var _eventJSON$data3 = eventJSON.data,\n          _id2 = _eventJSON$data3.id,\n          _message2 = _eventJSON$data3.message;\n\n      if (_id2 === activeChat) {\n        messages[_message2.id] = undefined;\n        setMessages(messages);\n      }\n\n      props.onDeleteMessage && props.onDeleteMessage(_id2, _message2);\n    } else if (eventJSON.action === 'is_typing') {\n      var _eventJSON$data4 = eventJSON.data,\n          _id3 = _eventJSON$data4.id,\n          person = _eventJSON$data4.person;\n\n      var newTypingCounter = _extends({}, typingCounter);\n\n      if (newTypingCounter[_id3] && newTypingCounter[_id3][person]) {\n        var _extends2, _extends3;\n\n        newTypingCounter = _extends({}, newTypingCounter, (_extends3 = {}, _extends3[_id3] = _extends({}, newTypingCounter[_id3], (_extends2 = {}, _extends2[person] = newTypingCounter[_id3][person] + 1, _extends2)), _extends3));\n      } else {\n        var _extends4, _extends5;\n\n        newTypingCounter = _extends({}, newTypingCounter, (_extends5 = {}, _extends5[_id3] = _extends({}, newTypingCounter[_id3], (_extends4 = {}, _extends4[person] = 1, _extends4)), _extends5));\n      }\n\n      setTypingCounter(newTypingCounter);\n      props.onTyping && props.onTyping(_id3, person);\n    }\n  }\n\n  function onClose() {\n    setConnecting(true);\n  }\n\n  var development = props.development,\n      publicKey = props.publicKey,\n      projectID = props.projectID,\n      chatID = props.chatID,\n      chatAccessKey = props.chatAccessKey;\n  var wsStart = development ? 'ws://' : 'wss://';\n  var rootHost = development ? '127.0.0.1:8000' : 'api.chatengine.io';\n  var project = publicKey ? publicKey : projectID;\n  return /*#__PURE__*/React.createElement(WebSocket, {\n    url: \"\" + wsStart + rootHost + \"/chat/?projectID=\" + project + \"&chatID=\" + chatID + \"&accessKey=\" + chatAccessKey,\n    onOpen: function onOpen() {\n      return onConnect(props);\n    },\n    onClose: onClose.bind(_this$3),\n    onMessage: handleEvent.bind(_this$3),\n    reconnectIntervalInMilliSeconds: 3000\n  });\n};\n\nfunction isTyping(props, chatId, callback) {\n  axios.post(getApiUrl(props) + \"/chats/\" + chatId + \"/typing/\", {}, {\n    headers: getHeaders(props)\n  }).then(function (response) {\n    callback && callback(response.data);\n  })[\"catch\"](function (error) {});\n}\n\nfunction addPerson(props, chatId, userName, callback) {\n  axios.post(getApiUrl(props) + \"/chats/\" + chatId + \"/people/\", {\n    username: userName\n  }, {\n    headers: getHeaders(props)\n  }).then(function (response) {\n    callback && callback(response.data);\n  })[\"catch\"](function (error) {\n    console.log('New Person Error', error);\n  });\n}\n\nfunction removePerson(props, chatId, userName, callback) {\n  axios.put(getApiUrl(props) + \"/chats/\" + chatId + \"/people/\", {\n    username: userName\n  }, {\n    headers: getHeaders(props)\n  }).then(function (response) {\n    callback && callback(response.data);\n  })[\"catch\"](function (error) {\n    console.log('Delete Person Error', error);\n  });\n}\n\nfunction getOtherPeople(props, chatId, successCallback, errorCallback) {\n  axios.get(getApiUrl(props) + \"/chats/\" + chatId + \"/others/\", {\n    headers: getHeaders(props)\n  }).then(function (response) {\n    props.onGetOtherPeople && props.onGetOtherPeople(chatId, response.data);\n    successCallback && successCallback(chatId, response.data);\n  })[\"catch\"](function (error) {\n    console.log('Fetch Other People Error', error);\n    errorCallback && errorCallback();\n  });\n}\n\nfunction getMyData(props, callback) {\n  axios.get(getApiUrl(props) + \"/chats/me/\", {\n    headers: getHeaders(props)\n  }).then(function (response) {\n    callback && callback(response.data);\n  })[\"catch\"](function (error) {\n    console.log('Get Myself Error', error);\n  });\n}\n\nfunction editMyData(props, data, callback) {\n  axios.patch(getApiUrl(props) + \"/chats/me/\", data, {\n    headers: getHeaders(props)\n  }).then(function (response) {\n    callback && callback(response.data);\n  })[\"catch\"](function (error) {\n    console.log('Edit Myself Error', error);\n  });\n}\n\nfunction leaveChat(props, chatId, callback) {\n  axios[\"delete\"](getApiUrl(props) + \"/chats/\" + chatId + \"/people/\", {\n    headers: getHeaders(props)\n  }).then(function (response) {\n    callback && callback(response.data);\n  })[\"catch\"](function (error) {\n    console.log('Delete Person Error', error);\n  });\n}\n\nvar Avatar = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(Avatar, _Component);\n\n  function Avatar() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _Component.call.apply(_Component, [this].concat(args)) || this;\n    _this.state = {\n      avatar: ''\n    };\n    return _this;\n  }\n\n  var _proto = Avatar.prototype;\n\n  _proto.updateImg = function updateImg() {\n    var avatar = this.props.avatar;\n    avatar = avatar && avatar !== null ? avatar : '';\n\n    if (avatar.split('?')[0] !== this.state.avatar.split('?')[0]) {\n      this.setState({\n        avatar: avatar\n      });\n    }\n  };\n\n  _proto.componentDidMount = function componentDidMount() {\n    this.updateImg();\n  };\n\n  _proto.componentDidUpdate = function componentDidUpdate() {\n    this.updateImg();\n  };\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        username = _this$props.username,\n        is_online = _this$props.is_online;\n    var customStyle = this.props.style ? this.props.style : {};\n    var text = username ? username.substring(0, 2).toUpperCase() : '';\n    var color = stringToColor(username);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        width: '48px',\n        height: '48px'\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        height: '0px'\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"ce-avatar\",\n      style: _extends({}, styles$k.avatar, customStyle, {\n        backgroundColor: this.state.avatar ? 'white' : color,\n        backgroundImage: this.state.avatar && \"url(\" + this.state.avatar + \")\",\n        backgroundRepeat: 'no-repeat',\n        backgroundPosition: 'center',\n        backgroundSize: '48px'\n      })\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"ce-avatar-text\",\n      style: styles$k.avatarText\n    }, !this.state.avatar && text))), this.props.show_online !== false && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"ce-avatar-status\",\n      style: _extends({}, styles$k.status, {\n        backgroundColor: is_online ? '#52c41a' : '#f5222d'\n      })\n    }));\n  };\n\n  return Avatar;\n}(Component);\n\nvar styles$k = {\n  avatar: {\n    width: '44px',\n    height: '44px',\n    borderRadius: '22px',\n    color: 'white',\n    textAlign: 'center'\n  },\n  avatarText: {\n    color: 'white',\n    paddingTop: '12px',\n    fontSize: '15px',\n    fontWeight: '600'\n  },\n  status: {\n    width: '8px',\n    height: '8px',\n    borderRadius: '100%',\n    border: '2px solid white'\n  }\n};\n\nvar _dangerButton;\n\nvar Button = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(Button, _Component);\n\n  function Button() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _Component.call.apply(_Component, [this].concat(args)) || this;\n    _this.state = {\n      hovered: false\n    };\n    return _this;\n  }\n\n  var _proto = Button.prototype;\n\n  _proto.render = function render() {\n    var _this2 = this;\n\n    var _this$props = this.props,\n        value = _this$props.value,\n        icon = _this$props.icon,\n        theme = _this$props.theme,\n        style = _this$props.style;\n    var customStyle = style ? style : {};\n    var hoverStyle = this.state.hovered ? styles$l.hoverButton : {};\n    var themeStyle = theme === 'danger' ? styles$l.dangerButton : styles$l.button;\n    return /*#__PURE__*/React.createElement(\"button\", {\n      type: this.props.type,\n      onClick: function onClick() {\n        return _this2.props.onClick && _this2.props.onClick();\n      },\n      onMouseEnter: function onMouseEnter() {\n        return _this2.setState({\n          hovered: true\n        });\n      },\n      onMouseLeave: function onMouseLeave() {\n        return _this2.setState({\n          hovered: false\n        });\n      },\n      style: _extends({}, themeStyle, customStyle, hoverStyle),\n      className: \"ce-primary-button \" + (theme === 'danger' ? 'ce-danger-button' : '')\n    }, icon === 'plus' && /*#__PURE__*/React.createElement(PlusOutlined, null), icon === 'send' && /*#__PURE__*/React.createElement(ArrowUpOutlined, null), icon === 'delete' && /*#__PURE__*/React.createElement(DeleteOutlined, null), icon === 'user-add' && /*#__PURE__*/React.createElement(UserAddOutlined, null), value && icon ? \" \" + value : value);\n  };\n\n  return Button;\n}(Component);\n\nvar styles$l = {\n  button: {\n    color: 'white',\n    border: 'none',\n    outline: 'none',\n    height: '36px',\n    fontSize: '15px',\n    cursor: 'pointer',\n    padding: '8px 16px',\n    borderRadius: '33px',\n    backgroundColor: '#1890ff'\n  },\n  dangerButton: (_dangerButton = {\n    color: 'red',\n    border: 'none',\n    outline: 'none',\n    height: '36px',\n    fontSize: '15px',\n    cursor: 'pointer',\n    padding: '8px 16px',\n    borderRadius: '33px',\n    backgroundColor: 'white'\n  }, _dangerButton[\"border\"] = '1px solid red', _dangerButton),\n  hoverButton: {\n    opacity: '0.66'\n  }\n};\n\nvar TextInput = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(TextInput, _Component);\n\n  function TextInput() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _Component.call.apply(_Component, [this].concat(args)) || this;\n    _this.state = {\n      focused: false,\n      value: null\n    };\n    return _this;\n  }\n\n  var _proto = TextInput.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    var value = this.props[\"default\"];\n\n    if (value) {\n      var event = {\n        target: {\n          value: value\n        }\n      };\n      this.props.handleChange(event);\n      this.setState({\n        value: value\n      });\n    }\n  };\n\n  _proto.render = function render() {\n    var _this2 = this;\n\n    var customStyle = this.props.style ? this.props.style : {};\n    var defaultStyle = this.state.focused ? styles$m.focusInput : styles$m.input;\n    return /*#__PURE__*/React.createElement(\"input\", {\n      className: \"ce-input ce-text-input\",\n      value: this.props.value,\n      placeholder: this.props.label,\n      style: _extends({}, defaultStyle, customStyle),\n      onBlur: function onBlur() {\n        return _this2.setState({\n          focused: false\n        });\n      },\n      onFocus: function onFocus() {\n        return _this2.setState({\n          focused: true\n        });\n      },\n      type: this.props.type ? this.props.type : \"text\",\n      onChange: function onChange(e) {\n        return _this2.props.handleChange && _this2.props.handleChange(e);\n      }\n    });\n  };\n\n  return TextInput;\n}(Component);\n\nvar styles$m = {\n  input: {\n    height: '36px',\n    fontSize: '15px',\n    outline: 'none',\n    borderRadius: '24px',\n    border: '1px solid #d9d9d9',\n    padding: '0px 12px',\n    boxSizing: 'border-box'\n  },\n  focusInput: {\n    height: '36px',\n    fontSize: '15px',\n    outline: 'none',\n    borderRadius: '24px',\n    border: '1px solid #1890ff',\n    padding: '0px 12px',\n    boxSizing: 'border-box'\n  }\n};\n\nvar TextAreaInput = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(TextAreaInput, _Component);\n\n  function TextAreaInput() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _Component.call.apply(_Component, [this].concat(args)) || this;\n    _this.state = {\n      focused: false,\n      value: null\n    };\n    return _this;\n  }\n\n  var _proto = TextAreaInput.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    var value = this.props[\"default\"];\n\n    if (value) {\n      this.props.handleChange({\n        target: {\n          value: value\n        }\n      });\n      this.setState({\n        value: value\n      });\n    }\n  };\n\n  _proto.resize = function resize() {\n    var textarea = document.getElementById(\"msg-textarea\");\n    textarea.style.height = \"\";\n    textarea.style.height = Math.min(textarea.scrollHeight, 150) + \"px\";\n  };\n\n  _proto.componentDidMount = function componentDidMount() {\n    this.resize();\n  };\n\n  _proto.handleChange = function handleChange(e) {\n    this.resize();\n    this.props.handleChange && this.props.handleChange(e);\n  };\n\n  _proto.onKeyDown = function onKeyDown(e) {\n    if (e.key === 'Enter') {\n      e.preventDefault();\n\n      if (this.props.value.length > 0) {\n        this.props.onSubmit && this.props.onSubmit(e);\n      }\n    }\n  };\n\n  _proto.render = function render() {\n    var _this2 = this;\n\n    return /*#__PURE__*/React.createElement(\"textarea\", {\n      id: \"msg-textarea\",\n      className: \"ce-input ce-textarea-input\",\n      rows: \"1\",\n      style: styles$n.input,\n      value: this.props.value,\n      placeholder: this.props.label,\n      onBlur: function onBlur() {\n        return _this2.setState({\n          focused: false\n        });\n      },\n      onFocus: function onFocus() {\n        return _this2.setState({\n          focused: true\n        });\n      },\n      type: this.props.type ? this.props.type : \"text\",\n      onChange: function onChange(e) {\n        return _this2.handleChange(e);\n      },\n      onKeyDown: function onKeyDown(e) {\n        return _this2.onKeyDown(e);\n      }\n    });\n  };\n\n  return TextAreaInput;\n}(Component);\n\nvar styles$n = {\n  input: {\n    border: '1px solid white',\n    width: 'calc(100% - 64px - 24px - 44px)',\n    outline: 'none',\n    fontFamily: 'inherit',\n    fontSize: '15px',\n    paddingLeft: '12px',\n    paddingRight: '12px',\n    position: 'relative',\n    left: '12px',\n    resize: 'none'\n  }\n};\n\nvar AutoComplete = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(AutoComplete, _Component);\n\n  function AutoComplete() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _Component.call.apply(_Component, [this].concat(args)) || this;\n    _this.state = {\n      focused: false,\n      showAll: false\n    };\n    return _this;\n  }\n\n  var _proto = AutoComplete.prototype;\n\n  _proto.onFocus = function onFocus() {\n    this.onChange('', true);\n    this.setState({\n      focused: true\n    });\n    this.props.onFocus && this.props.onFocus();\n  };\n\n  _proto.onBlur = function onBlur() {\n    this.setState({\n      focused: false\n    });\n    this.props.onBlur && this.props.onBlur();\n  };\n\n  _proto.onChange = function onChange(value, showAll) {\n    this.setState({\n      showAll: showAll\n    });\n    this.props.handleChange && this.props.handleChange(value);\n  };\n\n  _proto.getNames = function getNames() {\n    var _this2 = this;\n\n    var count = 0;\n    var max = this.props.max ? this.props.max : 3;\n    var results = [];\n    this.props.options.map(function (option) {\n      if (JSON.stringify(option).toLowerCase().indexOf(_this2.props.value.toLowerCase()) !== -1 && count < max) {\n        count = count + 1;\n        results.push(option);\n      }\n    });\n    return results;\n  };\n\n  _proto.renderOptions = function renderOptions() {\n    var _this3 = this;\n\n    if (!this.props.value && !this.state.showAll) {\n      return /*#__PURE__*/React.createElement(\"div\", null);\n    }\n\n    var results = this.getNames();\n    return results.map(function (option, index) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        key: \"option_\" + index,\n        className: \"ce-autocomplete-option\"\n      }, _this3.props.renderOption && _this3.props.renderOption(option), index === results.length - 1 && /*#__PURE__*/React.createElement(\"div\", {\n        style: styles$o.close,\n        className: \"ce-autocomplete-close\",\n        onClick: function onClick() {\n          return _this3.onChange('', false);\n        }\n      }, /*#__PURE__*/React.createElement(CloseOutlined, null)));\n    });\n  };\n\n  _proto.render = function render() {\n    var _this4 = this;\n\n    var options = this.props.options;\n    var customStyle = this.props.style ? this.props.style : {};\n\n    var defaultStyle = _extends({}, styles$o.input, {\n      border: this.state.focused ? '1px solid #1890ff' : '1px solid #d9d9d9'\n    });\n\n    return /*#__PURE__*/React.createElement(\"div\", null, /*#__PURE__*/React.createElement(\"input\", {\n      className: \"ce-input ce-autocomplete-input\",\n      value: this.props.value,\n      placeholder: this.props.label,\n      style: _extends({}, defaultStyle, customStyle),\n      type: this.props.type ? this.props.type : \"text\",\n      onBlur: function onBlur() {\n        return _this4.onBlur();\n      },\n      onFocus: function onFocus() {\n        return _this4.onFocus();\n      },\n      onChange: function onChange(e) {\n        return _this4.onChange(e.target.value, true);\n      }\n    }), options && options.length > 0 && this.state.showAll && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"ce-autocomplete-options\",\n      style: {\n        borderRadius: '19px',\n        border: '1px solid #afafaf',\n        overflow: 'hidden'\n      }\n    }, this.props.options && this.renderOptions()));\n  };\n\n  return AutoComplete;\n}(Component);\n\nvar styles$o = {\n  input: {\n    height: '36px',\n    fontSize: '15px',\n    outline: 'none',\n    borderRadius: '24px',\n    padding: '0px 12px',\n    boxSizing: 'border-box'\n  },\n  close: {\n    cursor: 'pointer',\n    textAlign: 'center',\n    padding: '8px 12px',\n    fontSize: '15px',\n    borderRadius: '24px'\n  }\n};\nexport { AutoComplete as AutoCompleteInput, Avatar, Button, ChatCard, ChatEngineApp as ChatEngine, ChatEngineContext, ChatEngineWrapper, ChatFeed, ChatHeader, ChatList, ChatSettings, ChatSettingsTop, ChatSocket, Dot, IsTyping, Message$1 as MessageBubble, NewChatForm, NewMessageForm$1 as NewMessageForm, OptionsSettings, PeopleSettings, PhotosSettings, Socket, TextAreaInput, TextInput, addPerson, deleteChat, deleteMessage, editChat, editMessage, editMyData, getChat, getChats, getLatestChats, getLatestMessages, getMessages, getMyData, getOtherPeople, isTyping, leaveChat, newChat, removePerson, sendMessage };","map":{"version":3,"sources":["../src/components/Context/index.js","../src/actions/index.js","../src/actions/auth.js","../src/actions/messages/getMessages.js","../src/actions/messages/sendMessage.js","../src/actions/messages/editMessage.js","../src/actions/messages/readMessage.js","../src/actions/messages/deleteMessage.js","../src/actions/messages/getLatestMessages.js","../src/components/Socket/index.js","../src/actions/chats/getChats.js","../src/actions/chats/newChat.js","../src/actions/chats/getLatestChats.js","../src/actions/chats/getChat.js","../src/actions/chats/editChat.js","../src/actions/chats/deleteChat.js","../src/components/ChatEngine/ChatList/ChatLoader.js","../src/components/ChatEngine/ChatList/NewChatForm/index.js","../src/components/ChatEngine/Utilities/dateToString.js","../src/components/ChatEngine/ChatList/ChatCard.js","../src/components/ChatEngine/ChatList/index.js","../src/components/ChatEngine/ChatFeed/Steps/AuthFail.js","../src/components/ChatEngine/ChatFeed/Steps/Loading.js","../src/components/ChatEngine/ChatFeed/Steps/Welcome.js","../src/components/ChatEngine/ChatFeed/ChatHeader/ChatListDrawer.js","../src/components/ChatEngine/ChatSettings/PeopleSettings/Person.js","../src/components/ChatEngine/ChatSettings/PeopleSettings/PersonForm/Option.js","../src/components/ChatEngine/ChatSettings/PeopleSettings/PersonForm/index.js","../src/components/ChatEngine/ChatSettings/PeopleSettings/index.js","../src/components/ChatEngine/ChatSettings/PhotosSettings/Thumbnail.js","../src/components/ChatEngine/ChatSettings/PhotosSettings/index.js","../src/components/ChatEngine/ChatSettings/OptionsSettings/index.js","../src/components/ChatEngine/ChatSettings/ChatSettingsTop/TitleForm/index.js","../src/components/ChatEngine/ChatSettings/ChatSettingsTop/index.js","../src/components/ChatEngine/ChatSettings/index.js","../src/components/ChatEngine/ChatFeed/ChatHeader/ChatSettingsDrawer.js","../src/components/ChatEngine/ChatFeed/ChatHeader/index.js","../src/components/ChatEngine/ChatFeed/MessageBubble/DatePartition.js","../src/components/ChatEngine/ChatFeed/MessageBubble/Thumbnail.js","../src/components/ChatEngine/Utilities/colorMapping.js","../src/components/ChatEngine/components/Avatar/Dot.js","../src/components/ChatEngine/ChatFeed/MessageBubble/MyMessage.js","../src/components/ChatEngine/ChatFeed/MessageBubble/TheirMessage.js","../src/components/ChatEngine/ChatFeed/MessageBubble/SendingMessage.js","../src/components/ChatEngine/ChatFeed/MessageBubble/index.js","../src/components/ChatEngine/ChatFeed/NewMessageForm/Thumbnail.js","../src/components/ChatEngine/ChatFeed/NewMessageForm/FileRow.js","../src/components/ChatEngine/ChatFeed/NewMessageForm/ImagesInput.js","../src/components/ChatEngine/ChatFeed/NewMessageForm/index.js","../src/components/ChatEngine/ChatFeed/IsTyping.js","../src/components/ChatEngine/ChatFeed/index.js","../src/components/ChatEngine/index.js","../src/components/index.js","../src/components/Socket/ChatSocket.js","../src/actions/typing/isTyping.js","../src/actions/people/addPerson.js","../src/actions/people/removePerson.js","../src/actions/people/getOtherPeople.js","../src/actions/people/getMyData.js","../src/actions/people/editMyData.js","../src/actions/people/leaveChat.js","../src/components/ChatEngine/components/Avatar/Avatar.js","../src/components/ChatEngine/components/Button/Button.js","../src/components/ChatEngine/components/Input/TextInput.js","../src/components/ChatEngine/components/Input/TextAreaInput.js","../src/components/ChatEngine/components/Input/AutocompleteInput.js"],"names":["ChatEngineContext","createContext","ChatEngineWrapper","connecting","setConnecting","useState","conn","setConn","creds","setCreds","chats","setChats","messages","setMessages","sendingMessages","setSendingMessages","activeChat","setActiveChat","typingCounter","setTypingCounter","typingData","setTypingData","value","props","chatAccessKey","userSecret","axios","str","headers","getHeaders","response","callback","console","formdata","data","i","JSON","last_read","messageId","Socket","useContext","aDate","a","bDate","b","newChats","chat","eventJSON","onEditChat","_","sortedChats","sortChats","parseInt","id","message","newMessages","readMessage","person","newTypingCounter","development","publicKey","projectID","userName","userPassword","wsStart","rootHost","project","secret","onConnect","onClose","handleEvent","ChatLoader","isIntersecting","setIntersecting","observer","entry","useEffect","ref","useRef","isVisible","useOnScreen","NewChatForm","setValue","event","newChat","title","handleSubmit","height","width","handleChange","textAlign","day","date","month","year","hour","minute","second","sent","dayStr","timeStr","ChatCard","readLastMessage","chat_person","extraStyle","styles","otherPerson","index","lastMessage","borderRadius","backgroundColor","display","daySinceSent","chatContainer","padding","paddingBottom","cursor","titleText","fontWeight","whiteSpace","overflow","messageText","color","fontSize","border","count","interval","ChatList","didMountRef","hasMoreChats","setHasMoreChats","chatList","getLatestChats","onGetChats","Object","renderChats","loadChats","chatListContainer","maxHeight","overflowX","borderRight","chatsContainer","newChatContainer","position","bottom","AuthFail","paddingTop","paddingLeft","Loading","zIndex","left","Welcome","ChatListDrawer","isOpen","setIsOpen","outline","drawerContainer","titleContainer","top","closeIcon","Person","selected","setSelected","removePerson","is_online","renderPersonText","onRemovePerson","Option","focused","setFocused","avatar","username","option","PersonForm","state","setState","others","addPerson","getOthers","getOtherPeople","invitePerson","marginBottom","renderOption","PeopleSettings","collapsed","hovered","chatPerson","borderTop","collapseIcon","renderChatPeople","right","Thumbnail","attachment","container","image","objectFit","PhotosSettings","renderPhotos","OptionsSettings","deleteChat","NewMessageForm","editChat","ChatSettingsTop","topPeople","getOtherPerson","people","renderOnePerson","renderTwoPeople","renderThreePeople","ChatSettings","filler","settingsContainer","borderLeft","ChatSettingsDrawer","setConfiguration","maxScreenClass","gutterWidth","ChatHeader","titleSection","timeSinceDate","mobileOptiom","subtitleText","months","suffix","DatePartition","date_time","dayDuffix","time","timeSuffix","String","lastCreated","created","lastDate","getDate","thisDate","formatDate","dateText","loadingContainer","marginRight","thumbnail","paddingRight","colors","sum","stringToNumber","Dot","Component","updateImg","componentDidMount","componentDidUpdate","render","stringToColor","customStyle","backgroundImage","backgroundRepeat","backgroundPosition","backgroundSize","dot","Message","marginLeft","attachments","nextMessage","topRightRadius","bottomRightRadius","renderAttachments","renderReads","myMessage","TheirMessage","topLeftRadius","bottomLeftRadius","theirMessage","cusor","nameText","SendingMessage","sending","setHovered","URL","imageSquare","FileRow","renderFiles","ImagesInput","files","indexes","Array","file","visibility","onSelect","trigger","mod","isTyping","text","custom_json","sender_id","Date","sender_username","sendMessage","newSendingMessages","onRemove","NewMessageFormContainer","inputContainer","minHeight","IsTyping","ChatFeed","duration","setDuration","currentChat","setCurrentChat","onReadMessage","getMessages","onGetMessages","loadMoreMessages","setTimeout","animateScroll","containerId","typers","keys","lastMessageKey","nextMessageKey","renderMessages","renderSendingMessages","renderTypers","feedContainer","overflowY","ChatEngine","context","propsAndContext","ChatEngineApp","ChatSocket","getChat","onGetChat","chatID","successCallback","errorCallback","Avatar","avatarText","status","Button","icon","theme","style","hoverStyle","themeStyle","button","dangerButton","hoverButton","opacity","TextInput","target","defaultStyle","input","boxSizing","focusInput","TextAreaInput","resize","textarea","document","Math","onKeyDown","e","fontFamily","AutoComplete","showAll","onFocus","onBlur","onChange","getNames","max","results","renderOptions","options","close"],"mappings":"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","sourcesContent":["import React, { useState, createContext } from 'react'\n\nexport const ChatEngineContext = createContext()\n\nexport const ChatEngineWrapper = props => {\n    const [connecting, setConnecting] = useState(true)\n    const [conn, setConn] = useState(null)\n    const [creds, setCreds] = useState(null)\n    const [chats, setChats] = useState(null)\n    const [messages, setMessages] = useState({})\n    const [sendingMessages, setSendingMessages] = useState({})\n    const [activeChat, setActiveChat] = useState(null)\n    const [typingCounter, setTypingCounter] = useState({})\n    const [typingData, setTypingData] = useState({})\n\n    const value = {\n        connecting, setConnecting,\n        conn, setConn,\n        creds, setCreds,\n        chats, setChats,\n        messages, setMessages,\n        sendingMessages, setSendingMessages,\n        activeChat, setActiveChat,\n        typingCounter, setTypingCounter,\n        typingData, setTypingData,\n    }\n\n    return (\n        <ChatEngineContext.Provider value={value}>\n            {props.children}\n        </ChatEngineContext.Provider>\n    )\n}\n","export function getApiUrl(props) { \n    if (props && props.development) {\n        return 'http://127.0.0.1:8000'\n    }\n    return 'https://api.chatengine.io'\n}\n","export function getHeaders(props) { \n    if (props.chatID) {\n        return { \n            \"public-key\": props.publicKey ? props.publicKey : props.projectID,\n            \"chat-id\": props.chatID,\n            \"access-key\": props.chatAccessKey,\n        }\n    }\n\n    return { \n        \"Public-Key\": props.publicKey ? props.publicKey : props.projectID,\n        \"User-Name\": props.userName,\n        \"User-Secret\": props.userPassword ? props.userPassword : props.userSecret,\n    }\n}\n","import axios from 'axios'\nimport * as str from '../../actions'\nimport { getHeaders } from '../auth'\n\nexport function getMessages(props, chatId, callback) {\n    axios.get(\n        `${str.getApiUrl(props)}/chats/${chatId}/messages/`,\n        { headers: getHeaders(props) }\n    )\n\n    .then((response) => {\n        // Run hook in Axios on GET requests\n        props.onGetMessages && props.onGetMessages(chatId, response.data)\n\n        callback && callback(chatId, response.data)\n    })\n    \n    .catch((error) => {\n        console.log('Fetch Messages Error', error)\n    });\n}","import axios from 'axios'\nimport * as str from '../../actions'\nimport { getHeaders } from '../auth'\n\nexport function sendMessage(props, chatId, data, callback) {\n    let formdata = new FormData()\n    \n    if (data.attachments) {\n        for (let i = 0; i < data.attachments.length; i++) { \n            formdata.append('attachments', data.attachments[i], data.attachments[i].name)\n        }\n    } else if (data.files) {\n        for (let i = 0; i < data.files.length; i++) { \n            formdata.append('attachments', data.files[i], data.files[i].name)\n        }\n    }\n\n    formdata.append('text', data.text)\n    formdata.append('sender_username', data.sender_username)\n    formdata.append('custom_json', JSON.stringify(data.custom_json ? data.custom_json : {}))\n    \n    axios.post(\n        `${str.getApiUrl(props)}/chats/${chatId}/messages/`,\n        formdata,\n        { headers: getHeaders(props) }\n    )\n\n    .then((response) => {\n        callback && callback(response.data)\n    })\n    \n    .catch((error) => {\n        console.log('Send Messages Error', error)\n    });\n    \n}","import axios from 'axios'\nimport * as str from '../../actions'\nimport { getHeaders } from '../auth'\n\nexport function editMessage(props, chatId, messageId, data, callback) {\n    axios.patch(\n        `${str.getApiUrl(props)}/chats/${chatId}/messages/${messageId}/`,\n        data,\n        { headers: getHeaders(props) }\n    )\n\n    .then((response) => {\n        callback && callback(response.data)\n    })\n    \n    .catch((error) => {\n        console.log('Delete Messages Error', error)\n    });\n}","import axios from 'axios'\nimport * as str from '../../actions'\nimport { getHeaders } from '../auth'\n\nexport function readMessage(props, chatId, messageId, callback) {\n    axios.patch(\n        `${str.getApiUrl(props)}/chats/${chatId}/people/`,\n        { last_read: messageId },\n        { headers: getHeaders(props) }\n    )\n\n    .then((response) => {\n        callback && callback(response.data)\n    })\n    \n    .catch((error) => {\n        console.log('Read Message Error', error)\n    });\n}","import axios from 'axios'\nimport * as str from '../../actions'\nimport { getHeaders } from '../auth'\n\nexport function deleteMessage(props, chatId, messageId, callback) {\n    axios.delete(\n        `${str.getApiUrl(props)}/chats/${chatId}/messages/${messageId}/`,\n        { headers: getHeaders(props) }\n    )\n\n    .then((response) => {\n        callback && callback(response.data)\n    })\n    \n    .catch((error) => {\n        console.log('Delete Messages Error', error)\n    });\n}","import axios from 'axios'\nimport * as str from '../../actions'\nimport { getHeaders } from '../auth'\n\nexport function getLatestMessages(props, chatId, count, callback) {\n    axios.get(\n        `${str.getApiUrl(props)}/chats/${chatId}/messages/latest/${count}/`,\n        { headers: getHeaders(props) }\n    )\n\n    .then((response) => {\n        props.onGetMessages && props.onGetMessages(chatId, response.data)\n\n        callback && callback(chatId, response.data)\n    })\n    \n    .catch((error) => {\n        console.log('Fetch Latest Messages Error', error)\n    });\n}","import React, { useContext } from 'react'\n\nimport { ChatEngineContext } from '../Context'\n\nimport { readMessage } from '../../actions/messages'\n\nimport { WebSocket } from 'nextjs-websocket'\n\nconst Socket = props => {\n    const {\n      setConnecting,\n      conn, setConn, setCreds,\n      chats, setChats,\n      messages, setMessages,\n      sendingMessages, setSendingMessages,\n      activeChat, setActiveChat,\n      typingCounter, setTypingCounter,\n    } = useContext(ChatEngineContext)\n\n    function sortChats(chats) {\n        return Object.values(chats).sort((a, b) => { \n            const aDate = a.last_message.created ? new Date(a.last_message.created) : new Date(a.created)\n            const bDate = b.last_message.created ? new Date(b.last_message.created) : new Date(b.created)\n            return new Date(bDate) - new Date(aDate); \n        })\n    }\n\n    // Common Context Handlers\n\n    function onEditChat(chat) {\n        if (chats) {\n            const newChats = {...chats}\n            newChats[chat.id] = chat\n            setChats(newChats)\n        }\n\n        props.onEditChat && props.onEditChat(chat)\n    }\n\n    function onConnect(conn) {\n        setConn(conn); setCreds(conn);\n        setConnecting(false)\n        \n        props.onConnect && props.onConnect(conn)\n    }\n    \n    // Socket Events\n\n    function handleEvent(event) {\n        const eventJSON = JSON.parse(event)\n\n        if (eventJSON.action === 'login_error') {\n            console.log(\n                `Your login credentials were not correct: \\n\n                Project ID: ${props.projectID} \\n\n                Username: ${props.userName} \\n\n                User Secret: ${props.userSecret}\\n\n                Double check these credentials to make sure they're correct.\\n\n                If all three are correct, try resetting the username and secret in the Online Dashboard or Private API.`\n            )\n\n            setConn(undefined); setCreds(undefined);\n\n            props.onFailAuth && props.onFailAuth(conn)\n\n        } else if (eventJSON.action === 'new_chat') {\n            const chat = eventJSON.data\n            \n            if (chats) {\n                const newChats = {...chats}\n                newChats[chat.id] = chat\n                setChats(newChats)\n                setActiveChat(chat.id)\n            }\n\n            props.onNewChat && props.onNewChat(eventJSON.data)\n\n        } else if (eventJSON.action === 'edit_chat') {\n            onEditChat(eventJSON.data)\n            \n        } else if (eventJSON.action === 'delete_chat') {\n            const chat = eventJSON.data \n\n            if (chats) {\n                chats[chat.id] = undefined\n                \n                setChats(chats)\n          \n                if (!_.isEmpty(chats)) {\n                    const sortedChats = sortChats(chats)\n                    setActiveChat(sortedChats[0] ? parseInt(sortedChats[0].id) : 0)\n                }\n            }\n\n            props.onDeleteChat && props.onDeleteChat(chat)\n\n        } else if (eventJSON.action === 'add_person') {\n            onEditChat(eventJSON.data)\n            \n            props.onAddPerson && props.onAddPerson(eventJSON.data)\n\n        } else if (eventJSON.action === 'remove_person') {\n            onEditChat(eventJSON.data)\n\n            props.onRemovePerson && props.onRemovePerson(eventJSON.data)\n\n        } else if (eventJSON.action === 'new_message') {\n            const { id, message } = eventJSON.data\n\n            if (typeof message.custom_json === \"string\" && message.custom_json.indexOf('sender_id') !== -1) {\n                sendingMessages[JSON.parse(message.custom_json).sender_id] = undefined\n                setSendingMessages(sendingMessages)\n            }\n        \n            if (id === activeChat) {\n                const newMessages = {...messages}\n                newMessages[message.id] = message\n                setMessages(newMessages)\n            }\n          \n            if (message.sender_username !== props.userName) {\n                readMessage(conn, activeChat, message.id, (chat) => onEditChat(chat))\n            }\n\n            props.onNewMessage && props.onNewMessage(id, message)\n\n        } else if (eventJSON.action === 'edit_message') {\n            const { id, message } = eventJSON.data\n            \n            if (id === activeChat) {\n                messages[message.id] = message\n                setMessages(messages)\n            }\n\n            props.onEditMessage && props.onEditMessage(id, message)\n\n        } else if (eventJSON.action === 'delete_message') {\n            const { id, message } = eventJSON.data\n\n            if (id === activeChat) {\n                messages[message.id] = undefined\n                setMessages(messages)\n            }\n\n            props.onDeleteMessage && props.onDeleteMessage(id, message)\n        \n        } else if (eventJSON.action === 'is_typing') {\n            const { id, person } = eventJSON.data\n            let newTypingCounter = {...typingCounter}\n\n            if (newTypingCounter[id] && newTypingCounter[id][person]) {\n                newTypingCounter = {\n                    ...newTypingCounter,\n                    [id]: {\n                    ...newTypingCounter[id],\n                    [person]: newTypingCounter[id][person] + 1\n                    }\n                }\n\n            } else {\n                newTypingCounter = {\n                    ...newTypingCounter,\n                    [id]: {\n                    ...newTypingCounter[id],\n                    [person]: 1\n                    }\n                }\n            }\n                \n            setTypingCounter(newTypingCounter)\n                \n            props.onTyping && props.onTyping(id, person)\n        }\n    }\n\n    function onClose() { setConnecting(true) }\n\n    // Render\n    \n    const { \n        development,\n        publicKey, projectID, \n        userName, \n        userPassword, userSecret, \n    } = props \n    \n    const wsStart = development ? 'ws://' : 'wss://'\n    const rootHost = development ? '127.0.0.1:8000' : 'api.chatengine.io'\n    const project = publicKey ? publicKey : projectID\n    const secret = userPassword ? userPassword : userSecret\n\n    return <WebSocket \n        url={`${wsStart}${rootHost}/person/?publicKey=${project}&username=${userName}&secret=${secret}`}\n        onOpen={() => onConnect(props)}\n        onClose={onClose.bind(this)}\n        onMessage={handleEvent.bind(this)}\n        reconnectIntervalInMilliSeconds={3000}\n    />\n}\n\nexport default Socket","import axios from 'axios'\nimport * as str from '../../actions'\nimport { getHeaders } from '../auth'\n\nexport function getChats(props, callback) {\n    axios.get(\n        `${str.getApiUrl(props)}/chats/`,\n        { headers: getHeaders(props) }\n    )\n\n    .then((response) => {\n        // Run hook in Axios on GET requests\n        props.onGetChats && props.onGetChats(response.data)\n\n        callback && callback(response.data)\n    })\n    \n    .catch((error) => {\n        console.log('Fetch Chats Error', error)\n    });\n}","import axios from 'axios'\nimport * as str from '../../actions'\nimport { getHeaders } from '../auth'\n\nexport function newChat(props, data, callback) {\n    axios.post(\n        `${str.getApiUrl(props)}/chats/`,\n        data, \n        { headers: getHeaders(props) }\n    )\n\n    .then((response) => {\n        callback && callback(response.data)\n    })\n    \n    .catch((error) => {\n        console.log('New Chat Error', error)\n    });\n}","import axios from 'axios'\nimport * as str from '../../actions'\nimport { getHeaders } from '../auth'\n\nexport function getLatestChats(props, count, callback) {\n    axios.get(\n        `${str.getApiUrl(props)}/chats/latest/${count}/`,\n        { headers: getHeaders(props) }\n    )\n\n    .then((response) => {\n        // Run hook in Axios on GET requests\n        props.onGetChats && props.onGetChats(response.data)\n\n        callback && callback(response.data)\n    })\n    \n    .catch((error) => {\n        console.log('Fetch Chats Error', error)\n    });\n}","import axios from 'axios'\nimport * as str from '../../actions'\nimport { getHeaders } from '../auth'\n\nexport function getChat(props, chatId, callback) {\n    axios.get(\n        `${str.getApiUrl(props)}/chats/${chatId}/`,\n        { headers: getHeaders(props) }\n    )\n\n    .then((response) => {\n        callback && callback(response.data)\n    })\n    \n    .catch((error) => {\n        console.log('Get Chat Error', error)\n    });\n}","import axios from 'axios'\nimport * as str from '../../actions'\nimport { getHeaders } from '../auth'\n\nexport function editChat(props, chatId, data, callback) {\n    axios.patch(\n        `${str.getApiUrl(props)}/chats/${chatId}/`,\n        data, \n        { headers: getHeaders(props) }\n    )\n\n    .then((response) => {\n        callback && callback(response.data)\n    })\n    \n    .catch((error) => {\n        console.log('Edit Chat Error', error)\n    });\n}","import axios from 'axios'\nimport * as str from '../../actions'\nimport { getHeaders } from '../auth'\n\nexport function deleteChat(props, chatId, callback) {\n    axios.delete(\n        `${str.getApiUrl(props)}/chats/${chatId}/`,\n        { headers: getHeaders(props) }\n    )\n\n    .then((response) => {\n        callback && callback(response.data)\n    })\n    \n    .catch((error) => {\n        console.log('Delete Chat Error', error)\n    });\n}","import React, { useState, useRef, useEffect } from 'react'\n\nconst ChatLoader = props => {\n    function useOnScreen(ref) {\n        const [isIntersecting, setIntersecting] = useState(false)\n      \n        const observer = new IntersectionObserver(\n            ([entry]) => {\n                setIntersecting(entry.isIntersecting)\n                if (entry.isIntersecting) {\n                    props.onVisible()\n                }\n            }\n        )\n      \n        useEffect(() => {\n          observer.observe(ref.current)\n          // Remove the observer as soon as the component is unmounted\n          return () => { observer.disconnect() }\n        }, [])\n      \n        return isIntersecting\n    }\n  \n    const ref = useRef()\n    const isVisible = useOnScreen(ref)\n    \n    return <div ref={ref} />\n}\n\nexport default ChatLoader","import React, { useState, useContext } from 'react'\n\nimport { ChatEngineContext } from '../../../Context'\n\nimport { newChat } from 'react-chat-engine'\n\nimport { Button, TextInput } from 'react-chat-engine'\n\nconst NewChatForm = () => {\n  const { conn } = useContext(ChatEngineContext)\n  const [value, setValue] = useState('')\n  \n  function handleChange(event) {\n    setValue(event.target.value)\n  }\n\n  function handleSubmit(event) {\n    event.preventDefault()\n\n    if (value.trim().length > 0) {\n      newChat(\n        conn, \n        { title: value },\n        () => {}\n      )\n    }\n\n    setValue('')\n  }\n\n  return (\n    <form onSubmit={handleSubmit.bind(this)}>\n      <div style={{ height: '1px' }}>\n        <TextInput \n          label='New Chat'\n          value={value}\n          style={{ width: 'calc(100% - 48px)' }}\n          handleChange={(e) => handleChange(e)}\n        />\n      </div>\n\n      <div style={{ width: '100%', textAlign: 'right' }}>\n        <Button \n          icon='plus'\n          type=\"submit\" \n        />\n      </div>\n    </form>\n  )\n}\n\nexport default NewChatForm","export function timeSinceDate(date) {\n    if (!date) return ''\n\n    const day = date.substr(8,2)\n    const month = date.substr(5,2)\n    const year = date.substr(0,4)\n\n    const hour = date.substr(11,2)\n    const minute = date.substr(14,2)\n    const second = date.substr(17,2)\n\n    var sent = new Date(`${month} ${day} ${year}`)\n    sent.setHours(hour)\n    sent.setMinutes(minute)\n    sent.setSeconds(second)\n    sent = sent.toString()\n\n    const dayStr = sent.substr(0, 10)\n    const timeStr = sent.substr(15, 6)\n    return `${dayStr} at ${timeStr}`\n}\n\nexport function daySinceSent(date) {\n    if (!date) return ''\n    const day = date.substr(8,2)\n    const month = date.substr(5,2)\n    const year = date.substr(0,4)\n    const sent = new Date(`${month} ${day} ${year}`).toString()\n    return sent.substr(4, 6)\n}\n","import React, { useContext } from 'react'\n\nimport { ChatEngineContext } from '../../Context'\n\nimport _ from 'lodash'\n\nimport { daySinceSent } from '../Utilities/dateToString'\n\nconst ChatCard = props => {\n    const { conn, activeChat, setActiveChat } = useContext(ChatEngineContext)\n\n    if (!conn || conn === null) return <div/>\n\n    function readLastMessage(chat) {\n        let readLastMessage = true\n        chat.people.map(chat_person => {\n            if(conn.userName === chat_person.person.username) {\n                readLastMessage = chat.last_message.id === chat_person.last_read\n            }\n        })\n        return readLastMessage\n    }\n\n    const { chat } = props\n    const extraStyle = activeChat === chat.id ? styles.activeChat : {}\n    const otherPerson = chat.people.find(person => person.person.username !== conn.userName);\n    \n    if (props.renderChatCard) {\n        return <div key={`chat_${index}`}>{props.renderChatCard(chat, index)}</div>\n    }\n\n    let lastMessage = chat.last_message.text\n    if (!lastMessage) {\n        lastMessage = chat.last_message.attachments.length > 0 ?\n        `${chat.last_message.attachments.length} image${chat.last_message.attachments.length > 1 ? 's' : ''}` :\n        'Say hello!'\n    }\n\n    return (\n        <div \n            onClick={() => setActiveChat(chat.id)}\n            style={{ ...styles.chatContainer, ...extraStyle }}\n            className={`ce-chat-card ${activeChat === chat.id && 'ce-active-chat-card'}`}\n        >\n            <div style={ styles.titleText } className='ce-chat-title-text'>\n                { chat.is_direct_chat && otherPerson ? otherPerson.person.username : chat.title }\n                \n                {\n                    !readLastMessage(chat) &&\n                    <div \n                        className='ce-chat-unread-dot'\n                        style={{ \n                            float: 'right',\n                            width: '12px',\n                            height: '12px',\n                            borderRadius: '6px',\n                            backgroundColor: '#1890ff',\n                            display: 'inline-block'\n                        }} \n                    />\n                }\n                \n            </div>\n\n            <div style={{ width: '100%' }} className='ce-chat-subtitle'>\n                <div style={styles.messageText} className='ce-chat-subtitle-text ce-chat-subtitle-message'>\n                    { lastMessage }\n                </div>\n\n                <div \n                    className='ce-chat-subtitle-text ce-chat-subtitle-date'\n                    style={{ ...styles.messageText, ...{ textAlign: 'right', width: '25%' } }}\n                >\n                    { daySinceSent(chat.last_message.created) }\n                </div>\n            </div>\n        </div>\n    )\n}\n\nconst styles={\n    chatContainer: { \n        padding: '16px', \n        paddingBottom: '12px',\n        cursor: 'pointer'\n    },\n    titleText: { \n        fontWeight: '500',\n         paddingBottom: '4px', \n         whiteSpace: 'nowrap', \n         overflow: 'hidden' \n    },\n    messageText: {\n        width: '75%',\n        color: 'rgba(153, 153, 153, 1)', \n        fontSize: '14px', \n        whiteSpace: 'nowrap', \n        overflow: 'hidden',\n        display: 'inline-block'\n    },\n    activeChat: {\n        backgroundColor: '#d9d9d9',\n        border: '4px solid white',\n        borderRadius: '12px'\n    },\n}\n\nexport default ChatCard;\n","import React, { useContext, useEffect, useRef, useState } from 'react'\n\nimport { ChatEngineContext } from '../../Context'\n\nimport { getLatestChats } from '../../../actions/chats'\n\nimport _ from 'lodash'\n\nimport ChatLoader from './ChatLoader'\n\nimport ChatForm from './NewChatForm'\nimport ChatCard from './ChatCard'\n\nlet count = 13\nconst interval = 13\n\nconst ChatList = props => {\n    const didMountRef = useRef(false)\n    const [hasMoreChats, setHasMoreChats] = useState(true)\n    const { chats, setChats, activeChat, setActiveChat } = useContext(ChatEngineContext)\n\n    function renderChats(chats) {\n        return chats.map((chat, index) => {\n            if (!chat) return <div key={`chat_${index}`} />\n\n            if (props.renderChatCard) {\n                return <div key={`chat_${index}`}>{props.renderChatCard(chat, index)}</div>\n                \n            } else {\n                return (\n                    <div \n                        key={`chat_${index}`}\n                        onClick={() => props.onChatClick && props.onChatClick()}\n                    >\n                        <ChatCard chat={chat} />\n                    </div>\n                )\n            }\n        })\n    }\n\n    function sortChats(chats) {\n        return chats.sort((a, b) => { \n            const aDate = a.last_message.created ? new Date(a.last_message.created) : new Date(a.created)\n            const bDate = b.last_message.created ? new Date(b.last_message.created) : new Date(b.created)\n            return new Date(bDate) - new Date(aDate); \n        })\n    }\n\n    function onGetChats(chats, count) {\n        const chatList = sortChats(chats)\n    \n        if (chatList.length > 0 && activeChat === null) {\n            setActiveChat(chatList[0].id)\n        }\n\n        if(count && count > chatList.length) { setHasMoreChats(false) }\n        \n        const newChats = {...chats}\n        setChats(_.mapKeys(newChats, 'id'))\n    }\n\n    useEffect(() => {\n        if (!didMountRef.current) {\n            didMountRef.current = true\n            getLatestChats(props, interval, (chats) => onGetChats(chats))\n        }\n    })\n\n    function loadChats() {\n        count = count + interval\n        getLatestChats(props, count, (chats) => onGetChats(chats, count))\n    }\n\n    const chatList = sortChats(chats ? Object.values(chats) : [])\n\n    if (props.renderChatList) return props.renderChatList(props)\n\n    return (\n        <div style={styles.chatListContainer} className='ce-chat-list'>\n            <div style={styles.chatsContainer} className='ce-chats-container'>\n                { renderChats(chatList) } \n\n                { hasMoreChats && chatList.length > 0 && <ChatLoader onVisible={() => loadChats()} /> }\n\n                <div style={{ height: '64px' }} />\n\n                {\n                    props.renderNewChatForm ?\n                    props.renderNewChatForm(props) :\n                    <div style={styles.newChatContainer} className='ce-chat-form-container'>\n                        <ChatForm className='ce-chat-form' />\n                    </div>\n                }\n            </div>\n        </div>\n    )\n}\n\nconst styles={\n    chatListContainer: { \n        height: '100%', \n        maxHeight: '100vh', \n        overflow: 'scroll', \n        overflowX: 'hidden',\n        borderRight: '1px solid #afafaf', \n        backgroundColor: 'white' \n    },\n    chatsContainer: { \n        width: '100%', \n        backgroundColor: 'white', \n        borderRadius: '0px 0px 24px 24px'\n    },\n    chatContainer: { \n        padding: '16px', \n        paddingBottom: '12px',\n        cursor: 'pointer'\n    },\n    titleText: { \n        fontWeight: '500',\n         paddingBottom: '4px', \n         whiteSpace: 'nowrap', \n         overflow: 'hidden' \n    },\n    messageText: {\n        width: '75%',\n        color: 'rgba(153, 153, 153, 1)', \n        fontSize: '14px', \n        whiteSpace: 'nowrap', \n        overflow: 'hidden',\n        display: 'inline-block'\n    },\n    activeChat: {\n        backgroundColor: '#d9d9d9',\n        border: '4px solid white',\n        borderRadius: '12px'\n    },\n    newChatContainer: { \n        position: 'absolute', \n        bottom: '0px', \n        padding: '12px',\n        width: 'calc(100% - 25px)',\n        backgroundColor: 'white'\n    }\n}\n\nexport default ChatList;\n","import React from 'react'\n\nconst AuthFail = () => {\n    return (\n        <div style={{ height: '100%', textAlign: 'center' }}>\n            \n            <div style={{ width: '100%' }}>\n                <img\n                    style={{ width: '40%', paddingTop: '25vh' }}\n                    src='https://chat-engine-assets.s3.amazonaws.com/denied.svg'\n                    alt='welcome-to-chat-engine'\n                />\n            </div>\n\n            <div style={{ fontSize: '18px', paddingTop: '24px', width: '75%', paddingLeft: '12.5%' }}>\n                Your credentials are incorrect. Make sure your Public Key, Username, and Password are correct at <a href='https://chatengine.io'>chatengine.io</a>\n            </div>\n\n        </div>\n    )\n}\n\nexport default AuthFail","import React from 'react'\n\nimport { SyncOutlined } from '@ant-design/icons'\n\nconst Loading  = () => {\n    return (\n        <div \n            style={{ \n                zIndex: '1',\n                bottom: '66px', \n                left: 'calc(50% - 78px)',\n                position: 'absolute', \n                fontSize: '15px',\n                padding: '10px 22px', \n                color: 'white',\n                backgroundColor: '#fa8c16',\n                borderRadius: '1.3em',\n            }}\n            id='ce-connecting-popup'\n        >\n            <SyncOutlined spin />\n            {' '}\n            Connecting\n        </div>\n    )\n}\n\nexport default Loading\n","import React from 'react'\n\nconst Welcome = () => {\n    return (\n        <div style={{ height: '100%', textAlign: 'center' }}>\n\n            <div style={{ width: '100%' }}>                    \n                <img\n                    style={{ width: '60%', paddingTop: '33vh' }}\n                    src='https://chat-engine-assets.s3.amazonaws.com/welcome.svg'\n                    alt='welcome-to-chat-engine'\n                />\n            </div>\n\n            <div style={{ fontSize: '18px', paddingTop: '24px', width: '75%', paddingLeft: '12.5%' }}>\n                Fill out the \"New Chat\" form to get started.\n            </div>\n\n        </div>\n    )\n}\n\nexport default Welcome\n","import React, { useState } from 'react'\n\nimport { MenuOutlined, CloseOutlined } from '@ant-design/icons'\n\nimport ChatList from '../../ChatList'\n\nconst ChatListDrawer = props => {\n    const [isOpen, setIsOpen] = useState(false)\n\n    return (\n        <div> \n            <MenuOutlined\n                onClick={() => setIsOpen(true)}\n                style={{ color: 'rgb(24, 144, 255)', outline: 'none' }} \n            />\n\n            { \n                isOpen &&\n                <div style={styles.drawerContainer}>\n                    <CloseOutlined\n                        style={styles.closeIcon}\n                        onClick={() => setIsOpen(false)}\n                    />\n\n                    <div style={styles.titleContainer}>\n                        <div style={styles.titleText}>\n                            My Chats\n                        </div>\n                    </div>\n\n                    <ChatList \n                        {...props} \n                        onChatClick={() => setIsOpen(false)}\n                    />\n                </div>\n            }\n        </div>\n    )\n}\n\nexport default ChatListDrawer\n\nconst styles = {\n    drawerContainer: { \n        position: 'fixed',\n        zIndex: '1',\n        top: '0px',\n        left: '0px',\n        width: '100%',\n        height: '100%',\n        backgroundColor: 'white',\n        textAlign: 'left'\n    },\n    closeIcon: {\n        position: 'absolute',\n        left: '28px',\n        top: '32px'\n    },\n    titleContainer: {\n        width: '100%',\n        padding: '24px 0px',\n        textAlign: 'center',\n        color: 'rgb(24, 144, 255)',\n    },\n    titleText: {\n        fontSize: '24px',\n        fontWeight: '600',\n    }\n}\n","import React, { useState } from 'react'\n\nimport { removePerson } from 'react-chat-engine'\n\nimport { Avatar, Button } from 'react-chat-engine'\n\nconst Person = props => {\n    const [selected, setSelected] = useState(false)\n\n    const { person, chat, conn } = props\n\n    if (!person || !chat) { return <div /> }\n\n    if (!conn || conn === null) return <div />\n\n    function onRemovePerson() {\n        removePerson(\n            props.conn,\n            props.chat.id,\n            props.person.username\n        )\n    }\n\n    function renderPersonText(person) {\n        if (person.first_name && person.first_name !== null) {\n            return `${person.first_name}${person.last_name ? ` ${person.last_name}` : ''}`\n        } else {\n            return person.username\n        }\n    }\n\n    return (\n        <div \n            className='ce-person-container'\n            onMouseEnter={() => setSelected(true)}\n            onMouseLeave={() => setSelected(false)}\n        >\n            <div \n                className='ce-person-avatar'\n                style={{ padding: '2px', height: '0px' }}\n            >\n                <Avatar \n                    avatar={person.avatar} \n                    username={person.username} \n                    is_online={person.is_online}\n                />\n            </div>\n\n            <div\n                className='ce-person-text'\n                style={{ paddingLeft: '52px', height: '44px', position: 'relative', top: '10px', fontSize: '15px' }}\n            >\n                { renderPersonText(person) }\n            </div>\n\n            {\n                selected && (conn.userName === chat.admin.username) && (person.username !== chat.admin.username) &&\n                <div\n                    className='ce-delete-chat' \n                    style={{ float: 'right', height: '0px', position: 'relative', bottom: '44px'}}\n                >\n                    <Button \n                        theme='danger'\n                        icon='delete'\n                        onClick={() => onRemovePerson()}\n                    />\n                </div>\n            }\n        </div>\n    )\n}\n\nexport default Person\n","import React, { useState } from 'react';\n\nimport { Avatar } from 'react-chat-engine'\n\n\nconst Option = props => {\n    const [focused, setFocused] = useState(false)\n\n    const { avatar, username } = props.person \n\n    return (\n        <div \n            onMouseEnter={() => setFocused(true)}\n            onMouseLeave={() => setFocused(false)}\n            onClick={() => props.onClick && props.onClick()}\n            style={{ ...styles.option, ...{ backgroundColor: focused ? '#f5f5f5' : 'white'} }}\n        >\n            <div>\n                <Avatar username={username} avatar={avatar} />\n            </div>\n\n            <div style={{ display: 'flex', padding: '12px 4px' }}>\n                {props.person.username}\n            </div>\n        </div>\n    );\n}\n\nexport default Option\n\nconst styles = {\n  option: {\n    padding: '4px 16px',\n    cursor: 'pointer',\n    fontSize: '15px',\n    display: 'flex'\n  },\n}","import React, { useState } from 'react';\n\nimport { addPerson, getOtherPeople } from 'react-chat-engine'\n\nimport { AutoCompleteInput } from 'react-chat-engine'\n\nimport Option from './Option'\n\nconst PersonForm = props => {\n  const [state, setState] = useState({\n    value: '',\n    others: []\n  })\n\n  function handleChange(value) {\n    setState({ ...state, value });\n  }\n\n  function invitePerson(name) {\n    addPerson(\n      props.conn,\n      props.chat.id,\n      name,\n      () => { \n        setState({ ...state, value: '' }); \n        getOthers(); \n      }\n    )\n  }\n\n  function getOthers() {\n    getOtherPeople(\n      props.conn,\n      props.chat.id,\n      (id, others) => setState({ ...state, others }),\n      () => {},\n    )\n  }\n\n  function renderOption(option) {\n    return <Option person={option} onClick={() => invitePerson(option.username)} />\n  }\n\n  return (\n    <div style={{ marginBottom: '12px' }}>\n      <AutoCompleteInput \n        style={{ width: '100%' }}\n        label='Type a username'\n        value={state.value}\n        options={state.others}\n        onFocus={() => getOthers()}\n        handleChange={(value) => handleChange(value)} \n        renderOption={(option) => renderOption(option)}\n      />\n    </div>\n  )\n}\n\nexport default PersonForm\n","import React, { useState } from 'react';\n\nimport Person from './Person'\nimport PersonForm from './PersonForm'\n\nimport { LeftOutlined, DownOutlined } from '@ant-design/icons'\n\nconst PeopleSettings = props => {\n    const [state, setState] = useState({\n        collapsed: false,\n        hovered: false\n    })\n    const { chat } = props\n\n    if (chat.is_direct_chat) { return <div /> }\n\n    function renderChatPeople(people, chat) {\n        return people.map((chatPerson, index) => {\n            return (\n                <Person \n                    key={`person_${index}`} \n                    person={chatPerson.person}\n                    conn={props} \n                    chat={chat} \n                />\n            )\n        })\n    }    \n\n    return (\n        <div style={{ borderTop: '1px solid #f0f0f0' }}>\n            <div \n                onMouseEnter={() => setState({ ...state, hovered: true })}\n                onMouseLeave={() => setState({ ...state, hovered: false })}\n                onClick={() => setState({ ...state, collapsed: !state.collapsed })}\n                style={state.hovered ? { backgroundColor: '#f0f0f0', cursor: 'pointer' } : {}}\n                className='ce-section-title-container ce-person-title-container'\n            >\n                <div\n                    className='ce-section-title ce-people-title'\n                    style={{ fontSize: '17px', padding: '12px', fontWeight: '600' }}>\n                    People\n                </div>\n\n                {\n                    state.collapsed ?\n                    <LeftOutlined style={styles.collapseIcon} /> :\n                    <DownOutlined style={styles.collapseIcon} />\n                }\n            </div>\n\n            {\n                !state.collapsed &&\n                <div>\n                    <div style={{ height: '12px' }} />\n\n                    { renderChatPeople(chat.people, chat) }\n\n                    <div style={{ height: '12px' }} />\n\n                    {\n                        props && chat && props.userName === chat.admin.username &&\n                        <PersonForm conn={props} chat={chat} />\n                    }\n                </div>\n            }\n        </div>\n    )\n}\n\nexport default PeopleSettings\n\nconst styles = {\n    collapseIcon: {\n        float: 'right',\n        position: 'relative',\n        bottom: '30px',\n        right: '12px'\n    }\n}","import React from 'react'\n\nconst Thumbnail = props => {\n    const { attachment } = props \n\n    if (!attachment) { return <div /> }\n\n    return (\n        <div style={styles.container} className='ce-photo-thumbnail'>\n            \n            <div style={{ paddingTop: '100%' }} />\n            \n            <img\n                alt={attachment.id}\n                style={styles.image}\n                src={attachment.file}\n                className='ce-photo-img'\n                id={`image-${attachment.id}`}\n            />\n            \n        </div>\n    )\n}\n\nexport default Thumbnail\n\nconst styles = {\n    container: { \n        position: 'relative', \n        width: 'calc(33% - 8px)', \n        border: '1px solid white', \n        display: 'inline-block',\n        cursor: 'pointer'\n    },\n    image: {\n        top: '0px', \n        width: '100%', \n        height: '100%',\n        position: 'absolute',\n        objectFit: 'cover'\n    }\n}","import React, { useState } from 'react'\n\nimport Thumbnail from './Thumbnail'\n\nimport { LeftOutlined, DownOutlined } from '@ant-design/icons'\n\n\nconst PhotosSettings = props => {\n    const [state, setState] = useState({\n        collapsed: true,\n        hovered: false\n    })\n    const { chat } = props\n\n    function renderPhotos(attachments) {\n        return attachments.map((attachment, index) => {\n            return <Thumbnail key={`person_${index}`} attachment={attachment} />\n        })\n    }\n\n    return (\n        <div style={{ borderTop: '1px solid #f0f0f0' }} className='ce-photo-section'>\n            <div \n                onMouseEnter={() => setState({ ...state, hovered: true })}\n                onMouseLeave={() => setState({ ...state, hovered: false })}\n                onClick={() => setState({ ...state, collapsed: !state.collapsed })}\n                style={state.hovered ? { backgroundColor: '#f0f0f0', cursor: 'pointer' } : {}}\n                className='ce-section-title-container ce-photo-title-container'\n            >\n                <div \n                    className='ce-section-title ce-photo-title'\n                    style={{ fontSize: '17px', padding: '12px', fontWeight: '600' }}\n                >\n                    Photos\n                </div>\n\n                {\n                    state.collapsed ?\n                    <LeftOutlined style={styles.collapseIcon} /> :\n                    <DownOutlined style={styles.collapseIcon} />\n                }\n            </div>\n\n            {\n                !state.collapsed &&\n                <div className='ce-photo-feed'>\n                    <div style={{ height: '12px' }} />\n\n                    { renderPhotos(chat.attachments) }\n                </div>\n            }\n        </div>\n    )\n}\n\nexport default PhotosSettings\n\nconst styles = {\n    collapseIcon: {\n        float: 'right',\n        position: 'relative',\n        bottom: '30px',\n        right: '12px'\n    }\n}\n","import React, { useState } from 'react'\n\nimport { Button, deleteChat } from 'react-chat-engine'\n\nimport { LeftOutlined, DownOutlined } from '@ant-design/icons'\n\nconst OptionsSettings = props => {\n    const [state, setState] = useState({\n        collapsed: true,\n        hovered: false\n    })\n    const { chat } = props\n\n    return (\n        <div style={{ borderTop: '1px solid #f0f0f0' }}>\n            <div \n                onMouseEnter={() => setState({ ...state, hovered: true })}\n                onMouseLeave={() => setState({ ...state, hovered: false })}\n                onClick={() => setState({ ...state, collapsed: !state.collapsed })}\n                style={state.hovered ? { backgroundColor: '#f0f0f0', cursor: 'pointer' } : {}}\n            >\n                <div style={{ fontSize: '17px', padding: '12px', fontWeight: '600' }}>\n                    Options\n                </div>\n\n                {\n                    state.collapsed ?\n                    <LeftOutlined style={styles.collapseIcon} /> :\n                    <DownOutlined style={styles.collapseIcon} />\n                }\n            </div>\n            \n            {\n                !state.collapsed &&\n                <div>\n                    <div style={{ height: '12px' }} />\n\n                    <Button \n                        value=\"Delete\" \n                        theme='danger'\n                        icon='delete'\n                        onClick={() => deleteChat(props, chat.id, (data) => {})}\n                        style={{ width: '100%', marginBottom: '12px' }}\n                    />\n                </div>\n            }\n        </div>\n    )\n}\n\nexport default OptionsSettings\n\nconst styles = {\n    collapseIcon: {\n        float: 'right',\n        position: 'relative',\n        bottom: '30px',\n        right: '12px'\n    }\n}\n","import React, { useState, useEffect, useRef } from 'react';\n\nimport { editChat, TextInput } from 'react-chat-engine'\n\nconst NewMessageForm = props => {\n    const didMountRef = useRef(false)\n    const [state, setState] = useState({\n        activeChat: null,\n        value: ''\n    })\n  \n    function handleChange(event) {\n        setState({ ...state, value: event.target.value });\n    }\n  \n    function handleSubmit(event) {\n        event.preventDefault();\n\n        editChat(\n            props.conn, \n            props.chat.id,\n            {title: state.value},\n            (data) => {}\n        )\n    }\n\n    useEffect(() => {\n        if (!didMountRef.current) {\n            didMountRef.current = true\n\n        } else {\n            if(state.activeChat !== props.chat.id) {\n                setState({ \n                    ...state,\n                    value: props.chat.title,\n                    activeChat: props.chat.id\n                })\n            }\n        }\n    })\n\n    return (\n        <form onSubmit={(e) => handleSubmit(e)} className='ce-chat-title-form'>\n            <TextInput \n                label=\"Rename this Chat\" \n                value={state.value} \n                default={props.chat.title}\n                handleChange={(e) => handleChange(e)} \n                style={{ \n                    fontSize: '16px',\n                    fontWeight: '600',\n                    textAlign: 'center',\n                    border: '0px solid white',\n                    width: '100%',\n                }}\n            />\n        </form>\n    );\n}\n\nexport default NewMessageForm","import React, { useContext } from 'react'\n\nimport { ChatEngineContext } from '../../../Context'\n\nimport { Avatar } from 'react-chat-engine'\n\nimport TitleForm from './TitleForm'\n\nconst ChatSettingsTop = props => {\n    const { conn } = useContext(ChatEngineContext)\n    const { chat } = props\n    \n    if (!conn || conn === null) return <div />\n\n    const topPeople = chat.people.slice(0, 3)\n    const otherPerson = getOtherPerson(chat.people)\n\n    function renderOnePerson(people) {\n        return (\n            <div style={{ width: '100%', paddingTop: '14px' }}>\n                <div style={{ float: 'left', position: 'relative', left: 'calc(50% - 22px)' }}>\n                    <Avatar \n                        show_online={false} \n                        username={people[0].person.username} \n                        avatar={people[0].person.avatar}\n                    />\n                </div>\n            </div>\n        )\n    }\n\n    function renderTwoPeople(people) {\n        return (\n            <div style={{ width: '100%', paddingTop: '14px' }}>\n                <div style={{ float: 'left', position: 'relative', left: 'calc(50% - 22px - 15px)' }}>\n                    <Avatar \n                        show_online={false} \n                        username={people[0].person.username} \n                        avatar={people[0].person.avatar}\n                    />\n                </div>\n\n                <div style={{ float: 'left', position: 'relative', left: 'calc(50% - 44px - 22px + 15px)' }}>\n                    <Avatar \n                        show_online={false} \n                        username={people[1].person.username} \n                        avatar={people[1].person.avatar}\n                    />\n                </div>\n            </div>\n        )\n    }\n\n    function renderThreePeople(people) {\n        return (\n            <div style={{ width: '100%', paddingTop: '14px' }}>\n                <div style={{ float: 'left', position: 'relative', left: 'calc(50% - 22px - 24px)' }}>\n                    <Avatar \n                        show_online={false} \n                        username={people[0].person.username}\n                        avatar={people[0].person.avatar}\n                    />\n                </div>\n\n                <div style={{ float: 'left', position: 'relative', left: 'calc(50% - 24px - 44px)' }}>\n                    <Avatar \n                        show_online={false} \n                        username={people[1].person.username} \n                        avatar={people[1].person.avatar}\n                    />\n                </div>\n\n                <div style={{ float: 'left', position: 'relative', left: 'calc(50% - 22px - 44px - 44px + 24px)' }}>\n                    <Avatar \n                        show_online={false} \n                        username={people[2].person.username}\n                        avatar={people[2].person.avatar}\n                    />\n                </div>\n            </div>\n        )\n    }\n\n    function getOtherPerson(people) {\n        return people.find(person => person.person.username !== conn.userName);\n    }\n    \n    return (\n        <div className='ce-chat-settings-container'>\n            <div className='ce-chat-avatars-row'>\n                { topPeople.length === 1 && renderOnePerson(topPeople) }\n                \n                { chat.is_direct_chat && otherPerson && renderOnePerson([otherPerson]) }\n\n                { !chat.is_direct_chat && otherPerson && topPeople.length === 2 && renderTwoPeople(topPeople) }\n\n                { !chat.is_direct_chat && otherPerson && topPeople.length === 3 && renderThreePeople(topPeople) }\n            </div>\n\n            {\n                chat.is_direct_chat && otherPerson ?\n                <div style={{ \n                    paddingTop: '55px',\n                    paddingBottom: '7px',\n                    fontSize: '16px',\n                    fontWeight: '600',\n                    textAlign: 'center',\n                    border: '0px solid white',\n                    width: '100%',\n                }}>\n                    { otherPerson.person.username }\n                </div> :\n                <TitleForm chat={chat} conn={conn} />\n            }\n        </div>\n    )\n}\n\nexport default ChatSettingsTop\n","import React, { useContext } from 'react'\n\nimport { ChatEngineContext } from '../../Context'\n\nimport PeopleSettings from './PeopleSettings'\nimport PhotosSettings from './PhotosSettings'\nimport OptionsSettings from './OptionsSettings'\nimport ChatSettingsTop from './ChatSettingsTop'\n\nconst ChatSettings = props => {\n    const { chats, activeChat } = useContext(ChatEngineContext)  \n    const chat = chats && chats[activeChat] \n\n    if (props.renderChatSettings) return props.renderChatSettings(props)\n    \n    if (!chat) return <div style={styles.filler} />\n    \n    return (\n        <div style={styles.settingsContainer} className='ce-settings'>\n            <div style={{ width: '90%', paddingLeft: '5%' }} className='ce-settings-container'>\n                {\n                    props.renderChatSettingsTop ?\n                    props.renderChatSettingsTop(props, chat) :\n                    <ChatSettingsTop {...props} chat={chat} />\n                }\n\n                {\n                    props.renderPeopleSettings ?\n                    props.renderPeopleSettings(props, chat) :\n                    <PeopleSettings {...props} chat={chat} />\n                }\n\n                {\n                    props.renderPhotosSettings ?\n                    props.renderPhotosSettings(chat) :\n                    <PhotosSettings {...props} chat={chat} />\n                }\n\n                {\n                    props && chat && props.userName === chat.admin.username  &&\n                    <div>\n                        {\n                            props.renderOptionsSettings ?\n                            props.renderOptionsSettings(props, chat) :\n                            <OptionsSettings {...props} chat={chat} />\n                        }\n                    </div>\n                }\n            </div>\n        </div>\n    )\n}\n\nexport default ChatSettings\n\nconst styles = {\n    settingsContainer: { \n        height: '100%',\n        overflow: 'scroll',\n        overflowX: 'hidden',\n        borderLeft: '1px solid #afafaf',\n        backgroundColor: 'white'\n    },\n    filler: { \n        display: 'flex',\n        width: '90%',\n        paddingLeft: '5%',\n        borderLeft: '1px solid #afafaf'\n    }\n}","import React, { useState } from 'react'\n\nimport { SettingOutlined, CloseOutlined } from '@ant-design/icons'\n\nimport ChatSettings from '../../ChatSettings'\n\nconst ChatSettingsDrawer = props => {\n    const [isOpen, setIsOpen] = useState(false)\n\n    return (\n        <div> \n            <SettingOutlined\n                onClick={() => setIsOpen(true)}\n                style={{ color: 'rgb(24, 144, 255)', outline: 'none' }} \n            />\n\n            { \n                isOpen &&\n                <div style={styles.drawerContainer}>\n                    <CloseOutlined\n                        style={styles.closeIcon}\n                        onClick={() => setIsOpen(false)}\n                    />\n\n                    <div style={styles.titleContainer}>\n                        <div style={styles.titleText}>\n                            Chat Settings\n                        </div>\n                    </div>\n\n                    <ChatSettings {...props} />\n                </div>\n            }\n        </div>\n    );\n}\n\nexport default ChatSettingsDrawer\n\nconst styles = {\n    drawerContainer: { \n        position: 'fixed',\n        zIndex: '1',\n        top: '0px',\n        left: '0px',\n        width: '100%',\n        height: '100%',\n        backgroundColor: 'white',\n        textAlign: 'left'\n    },\n    closeIcon: {\n        position: 'absolute',\n        left: '28px',\n        top: '32px'\n    },\n    titleContainer: {\n        width: '100%',\n        padding: '24px 0px',\n        textAlign: 'center',\n        color: 'rgb(24, 144, 255)',\n    },\n    titleText: {\n        fontSize: '24px',\n        fontWeight: '600',\n    },\n}\n","import React, { useContext } from 'react'\n\nimport { ChatEngineContext } from '../../../Context'\n\nimport { timeSinceDate } from '../../Utilities/dateToString'\n\nimport ChatListDrawer from './ChatListDrawer'\nimport ChatSettingsDrawer from './ChatSettingsDrawer'\n\nimport { Row, Col } from 'react-grid-system'\n\nimport { setConfiguration } from 'react-grid-system';\n \nsetConfiguration({ maxScreenClass: 'xl', gutterWidth: 0 });\n\nconst ChatHeader = () => {\n    const { conn, chats, activeChat } = useContext(ChatEngineContext)\n\n    if (!chats || !activeChat || !chats[activeChat]) { return <div /> }\n\n    if (!conn || conn === null) { return <div /> }\n\n    const chat = chats[activeChat]\n    const otherPerson = chat.people.find(person => person.person.username !== conn.userName);\n\n    return (\n        <Row \n            className='ce-chat-title'\n            style={styles.titleSection}\n        >\n            <Col \n                xs={2} \n                sm={0} \n                style={{ ...styles.mobileOptiom, ...{ left: '6px' } }}\n                className='ce-chat-list-mobile-option'\n            >\n                <ChatListDrawer />\n            </Col>\n\n            <Col \n                xs={8}\n                sm={12}\n                style={styles.titleContainer} \n                className='ce-chat-title-container'\n            >\n                <div style={styles.titleText} className='ce-chat-title-text'>\n                    { chat.is_direct_chat && otherPerson ? otherPerson.person.username : chat.title }\n                </div>\n                \n                <div style={styles.subtitleText} className='ce-chat-subtitle-text'>\n                    {\n                        chat.last_message.created && chat.last_message.created.length > 0 ?\n                        `Active ${timeSinceDate(chat.last_message.created)}` :\n                        'Say hello!'\n                    }\n                </div>\n            </Col>\n\n            <Col \n                xs={2} \n                sm={0} \n                style={{ ...styles.mobileOptiom, ...{ right: '6px' } }}\n                className='ce-chat-settings-mobile-option'\n            >\n                <ChatSettingsDrawer />\n            </Col>\n        </Row>\n    );\n}\n\nexport default ChatHeader\n\nconst styles = {\n    titleSection: { \n        position: 'absolute',\n        top: '0px',\n        width: '100%',\n        zIndex: '1',\n        backgroundColor: 'rgb(256, 256, 256, 0.92)'\n    },\n    mobileOptiom: {\n        width: '100%',\n        top: '32px',\n        textAlign: 'center',\n        color: 'rgb(24, 144, 255)',\n        overflow: 'hidden'\n    },\n    titleContainer: {\n        width: '100%',\n        padding: '18px 0px',\n        textAlign: 'center',\n        color: 'rgb(24, 144, 255)',\n    },\n    titleText: {\n        fontSize: '24px',\n        fontWeight: '600',\n    },\n    subtitleText: {\n        fontSize: '12px',\n    }\n}\n","import React from 'react'\n\nconst months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']\nconst suffix = [\n  'st', 'nd', 'rd', 'th', 'th',\n  'th', 'th', 'th', 'th', 'th',\n  'th', 'th', 'th', 'th', 'th',\n  'th', 'th', 'th', 'th', 'th',\n  'st', 'nd', 'rd', 'th', 'th',\n  'th', 'th', 'th', 'th', 'th',\n  'st'\n]\n\nconst DatePartition = props => {\n    function getDate(date) {\n        return date ? date.substr(0, 10) : null\n    }\n\n    function formatDate(date_time) {\n        if (!date_time) return ''\n        \n        const year = date_time.substr(0, 4)\n        const month = months[parseInt(date_time.substr(5, 2)) - 1]\n        const day = date_time.substr(8, 2)\n        const dayDuffix = suffix[parseInt(date_time.substr(8, 2)) - 1]\n\n        var time = date_time.substr(11, 5)\n        var timeSuffix = ''\n\n        if(parseInt(time.substr(0, 2)) >= 12){\n            if(parseInt(time.substr(0, 2)) > 12){\n            time = String(parseInt(time.substr(0, 2)) - 12) + ':' + time.substr(3, 2)\n            }\n            timeSuffix = 'PM'\n\n        } else {\n            timeSuffix = 'AM'\n        }\n\n        return time + timeSuffix + ', ' + month + ' ' + day + dayDuffix + ', ' + year\n    }\n\n    const { lastCreated, created } = props\n\n    const lastDate = getDate(lastCreated)\n    const thisDate = getDate(created)\n\n    if (lastCreated && lastDate === thisDate ) {\n        return <div />\n    }\n\n    return (\n        <div style={styles.dateText} className='ce-message-date-text'>\n            { formatDate(created) }\n        </div>\n    )\n}\n\nexport default DatePartition\n\nconst styles = {\n    dateText: { \n        width: '100%', \n        textAlign: 'center',\n        paddingTop: '4px',\n        paddingBottom: '10px',\n        fontSize: '15px',\n        color: 'rgba(0, 0, 0, .40)'\n    }\n}","import React from 'react'\n\nimport { LoadingOutlined } from '@ant-design/icons'\n\nconst Thumbnail = props => {\n    const { attachment } = props\n\n    if (!attachment) {\n        return (\n            <div style={styles.loadingContainer}>\n                <LoadingOutlined  style={{ color: 'white', padding: '4px', fontSize: '28px' }} />\n            </div>\n        )\n    }\n\n    return (\n        <img \n            style={styles.thumbnail}\n            src={attachment.file}\n            alt={'thumb-nail'}\n        />\n    )\n}\n\nexport default Thumbnail\n\nconst styles = {\n    loadingContainer: {\n        width: '100%', \n        cursor: 'pointer',\n        textAlign: 'right', \n        display: 'inline-block', \n        objectFit: 'cover',\n        borderRadius: '0.3em',\n        marginRight: '2px',\n\n        height: '30vw', \n        width: '30vw', \n        maxHeight: '200px',\n        maxWidth: '200px',\n        minHeight: '100px',\n        minWidth: '100px',\n        backgroundColor: '#d9d9d9',\n    },\n    thumbnail: { \n        width: '100%', \n        cursor: 'pointer',\n        textAlign: 'right', \n        display: 'inline', \n        objectFit: 'cover',\n        borderRadius: '0.3em',\n        paddingRight: '2px',\n\n        height: '30vw', \n        width: '30vw', \n        maxHeight: '200px',\n        maxWidth: '200px',\n        minHeight: '100px',\n        minWidth: '100px',\n    }\n}","\n\nconst colors = [\n    '#D64045',\n    '#5B3000',\n    '#00CC99',\n    '#467599',\n    '#1D3354',\n    '#8F250C',\n    '#6153CC',\n    '#961D4E',\n    '#A29F15',\n    '#0CAADC',\n    '#FF5154',\n    '#FA7921',\n    '#688E26',\n    '#550527',\n    '#A10702',\n    '#FF1053',\n    '#6C6EA0',\n    '#100B00',\n]\n\nfunction stringToNumber(str){\n    let sum = 0\n    for (var i = 0; i < str.length; i++) {\n        sum = sum + (str.charCodeAt(i) * i) - 97\n    }\n    return sum\n}\n\nexport function stringToColor(str) {\n    if (!str) {\n        return 'black'\n    } else {\n        return colors[stringToNumber(str) % colors.length]\n    }\n}","import React, { Component } from 'react'\n\nimport { stringToColor } from '../../Utilities/colorMapping' \n\n\nexport default class Dot extends Component {\n    state = { avatar: '' }\n\n    updateImg() {\n        let { avatar } = this.props\n        avatar = avatar && avatar !== null ? avatar : ''\n        \n        if (avatar.split('?')[0] !== this.state.avatar.split('?')[0]) {\n            this.setState({ avatar })\n        }\n    }\n\n    componentDidMount() { this.updateImg() }\n\n    componentDidUpdate() { this.updateImg() }\n\n    render() {\n        const { username } = this.props\n        const color = stringToColor(username)\n        const customStyle = this.props.style ? this.props.style : {}\n        \n        return (\n            <div\n                className='ce-avatar-dot'\n                style={{\n                    ...styles.dot,\n                    ...customStyle,\n                    ...{\n                        backgroundColor: this.state.avatar ? 'white' : color,\n                        backgroundImage: this.state.avatar && `url(${this.state.avatar})`,\n                        backgroundRepeat: 'no-repeat',\n                        backgroundPosition: 'center',\n                        backgroundSize: '14px'\n                    }\n                }}\n            />\n        )\n    }\n}\n\nconst styles = {\n    dot: {\n        width: '13px',\n        height: '13px',\n        borderRadius: '13px',\n        textAlign: 'center',\n    }\n}","import React from 'react'\n\nimport Thumbnail from './Thumbnail'\n\nimport Dot from '../../components/Avatar/Dot'\n\nimport { Row, Col, setConfiguration } from 'react-grid-system'\n\nsetConfiguration({ maxScreenClass: 'xl' })\n\nconst Message = props => {\n    function renderReads() {\n        const { chat, message } = props\n\n        if(!chat) { return <div /> }\n\n        return chat.people.map((chatPerson, index) => {\n            if (message.id === chatPerson.last_read) {\n                return (\n                    <Dot \n                        key={`read_${index}`}\n                        avatar={chatPerson.person.avatar}\n                        username={chatPerson.person.username}\n                        style={{ float: 'right', marginLeft: '4px' }} \n                    />\n                )\n            }\n            return <div key={`read_${index}`} />\n        })\n    }\n\n    function renderAttachments() {\n        const { message } = props\n        const attachments = message && message.attachments ? message.attachments : []\n        return attachments.map((attachment, index) => {\n            return <Thumbnail attachment={attachment} key={`attachment_${index}`} />\n        })\n    }\n\n    \n    const { lastMessage, message, nextMessage } = props\n\n    if (!message) { return <div /> }\n\n    const attachments = message && message.attachments && message.attachments\n\n    const topRightRadius = !lastMessage || lastMessage.sender_username !== message.sender_username ? '1.3em' : '0.3em'\n    const bottomRightRadius = !nextMessage || nextMessage.sender_username !== message.sender_username ? '1.3em' : '0.3em'\n\n    const borderRadius = `1.3em ${topRightRadius} ${bottomRightRadius} 1.3em`\n    const paddingBottom = !nextMessage || nextMessage.sender_username !== message.sender_username ? '12px' : '2px'\n\n    return (\n        <div \n            className='ce-message-row ce-my-message'\n            style={{ width: '100%', textAlign: 'right', paddingBottom }}\n        >\n            <div \n                style={{ display: 'auto' }} \n                className='ce-my-message-attachments-container'\n            >\n                { renderAttachments() }\n            </div>\n\n            <Row\n                style={{ paddingRight: '2px' }} \n                className='ce-message-bubble-row ce-my-message-bubble-row'\n            >\n                <Col xs={1} sm={2} md={3} />\n\n                <Col xs={11} sm={10} md={9}>\n                    {\n                        !attachments || message.text && \n                        <div\n                            className='ce-message-bubble ce-my-message-bubble'\n                            style={{ ...styles.myMessage, ...{ borderRadius } }}\n                        >\n                            { message.text }\n                        </div>\n                    }\n                </Col>\n\n                <Col xs={1} sm={2} md={3} />\n\n                <Col xs={12} className='ce-reads-row ce-my-reads-row'>\n                    { renderReads() }\n                </Col>\n            </Row>\n        </div>\n    )\n}\n\nexport default Message\n\nconst styles = {\n    myMessage: {\n        color: 'white', \n        cursor: 'pointer',\n        float: 'right', textAlign: 'left', // Stay right but render text\n        padding: '12px',\n        fontSize: '15px',\n        whiteSpace: 'pre-line',\n        backgroundColor: 'rgb(24, 144, 255)', \n    }\n}","import React from 'react'\n\nimport Thumbnail from './Thumbnail'\n\nimport { Avatar, Dot } from 'react-chat-engine'\n\nimport { Row, Col, setConfiguration } from 'react-grid-system'\n\nsetConfiguration({ maxScreenClass: 'xl' })\n\n\nconst TheirMessage = props => {\n    function renderReads() {\n        const { chat, message } = props\n\n        if(!chat) { return <div /> }\n\n        return chat.people.map((person, index) => {\n            if (message.id === person.last_read) {\n                return (\n                    <Dot \n                        key={`read_${index}`}\n                        avatar={person.person.avatar}\n                        username={person.person.username}\n                        style={{ float: 'left', marginLeft: '4px' }}\n                    />\n                )\n            }\n            return <div key={`read_${index}`} />\n        })\n    }\n\n    function renderAttachments() {\n        const { message } = props\n        const attachments = message && message.attachments ? props.message.attachments : []\n        return attachments.map((attachment, index) => {\n            return <Thumbnail attachment={attachment} key={`attachment_${index}`} />\n        })\n    }\n\n    const { lastMessage, message, nextMessage } = props\n\n    if (!message) { return <div /> }\n\n    const attachments = message && message.attachments && message.attachments\n\n    const topLeftRadius = !lastMessage || lastMessage.sender_username !== message.sender_username ? '1.3em' : '0.3em'\n    const bottomLeftRadius = !nextMessage || nextMessage.sender_username !== message.sender_username ? '1.3em' : '0.3em'\n\n    const borderRadius = `${topLeftRadius} 1.3em 1.3em ${bottomLeftRadius}`\n    const paddingBottom = !nextMessage || nextMessage.sender_username !== message.sender_username ? '12px' : '2px'\n\n    return (\n        <div \n            style={{ width: '100%', paddingBottom }}\n            className='ce-message-row ce-their-message'\n        >\n            {\n                (!lastMessage || lastMessage.sender_username !== message.sender_username) &&\n                <div style={styles.nameText} className='ce-their-message-sender'>\n                    { message.sender_username }\n                </div>\n            }\n        \n            <Row style={{ paddingLeft: '2px' }} className='ce-their-message-row'>\n                <Col xs={11} sm={10} md={9}>\n                    <div style={{ height: '0px' }} className='ce-their-message-avatar'>\n                        {\n                            (!nextMessage || nextMessage.sender_username !== message.sender_username) &&\n                            <Avatar\n                                show_online={false}\n                                username={message.sender_username}\n                                avatar={message.sender && message.sender.avatar}\n                            />\n                        }\n\n                    </div>\n\n                    <div \n                        style={{ display: 'auto', paddingLeft: '50px' }}\n                        className='ce-their-message-attachments-container'\n                    >\n                        { renderAttachments() }\n                    </div>\n\n                    {\n                        !attachments || message.text &&\n                        <div style={{ paddingLeft: '48px' }}>\n                            <div\n                                className='ce-message-bubble ce-their-message-bubble'\n                                style={{ ...styles.theirMessage, ...{ borderRadius } }}\n                            >\n                                { message.text }\n                            </div>\n                        </div>  \n                    }\n                </Col>\n\n                {/* Col is 9 to not slipp into RHS */}\n                <Col \n                    xs={9} \n                    style={{ marginLeft: '48px' }} \n                    className='ce-reads-row ce-their-reads-row'\n                >\n                    { renderReads() }\n                </Col>\n            </Row>\n        </div>\n    )\n}\n\nexport default TheirMessage\n\nconst styles = {\n    theirMessage: {\n        cusor: 'auto',\n        color: 'black', \n        float: 'left',\n        padding: '12px',\n        fontSize: '15px',\n        whiteSpace: 'pre-line',\n        backgroundColor: '#f1f0f0', \n    },\n    nameText: { \n        paddingLeft: '62px', \n        paddingBottom: '2px', \n        color: 'rgba(0, 0, 0, .40)', \n        fontSize: '15px' \n    }\n}","import React from 'react'\n\nimport Thumbnail from './Thumbnail'\n\nimport Dot from '../../components/Avatar/Dot'\n\nimport { Row, Col, setConfiguration } from 'react-grid-system'\n\nsetConfiguration({ maxScreenClass: 'xl' })\n\nconst SendingMessage = props => {\n    function renderReads() {\n        const { chat, message } = props\n\n        if(!chat) { return <div /> }\n\n        return chat.people.map((chatPerson, index) => {\n            if (message.id === chatPerson.last_read) {\n                return (\n                    <Dot \n                        key={`read_${index}`}\n                        avatar={chatPerson.person.avatar}\n                        username={chatPerson.person.username}\n                        style={{ float: 'right', marginLeft: '4px' }} \n                    />\n                )\n            }\n            return <div key={`read_${index}`} />\n        })\n    }\n\n    function renderAttachments(attachments) {\n        return attachments.map((a, index) => {\n            return <Thumbnail key={`sending-file-${index}`} />\n        })\n    }\n\n    const { lastMessage, message, nextMessage } = props\n\n    if (!message) { return <div /> }\n\n    const attachments = message && message.attachments ? message.attachments : []\n\n    const topRightRadius = !lastMessage || lastMessage.sender_username !== message.sender_username ? '1.3em' : '0.3em'\n    const bottomRightRadius = !nextMessage || nextMessage.sender_username !== message.sender_username ? '1.3em' : '0.3em'\n\n    const borderRadius = `1.3em ${topRightRadius} ${bottomRightRadius} 1.3em`\n    const paddingBottom = !nextMessage || nextMessage.sender_username !== message.sender_username ? '12px' : '2px'\n\n    return (\n        <div \n            className='ce-message-row ce-my-message ce-my-message-sending'\n            style={{ width: '100%', textAlign: 'right', paddingBottom }}\n        >\n            <div \n                style={{ display: 'auto' }} \n                className='ce-my-message-attachments-container'\n            >\n                { renderAttachments(attachments) }\n            </div>\n\n            <Row\n                style={{ paddingRight: '2px' }} \n                className='ce-message-bubble-row ce-my-message-bubble-row ce-my-message-sending-row'\n            >\n                <Col xs={1} sm={2} md={3} />\n\n                <Col xs={11} sm={10} md={9}>\n                    {\n                        message.text &&\n                        <div\n                            className='ce-message-bubble ce-my-message-bubble'\n                            style={{ ...styles.myMessage, ...{ borderRadius } }}\n                        >\n                            { message.text }\n                        </div>\n                    }\n                </Col>\n                \n                <Col xs={1} sm={2} md={3} />\n            </Row>\n        </div>\n    )\n}\n\nexport default SendingMessage\n\nconst styles = {\n    myMessage: {\n        color: 'white', \n        cursor: 'pointer',\n        float: 'right', textAlign: 'left', // Stay right but render text\n        padding: '12px',\n        fontSize: '15px',\n        whiteSpace: 'pre-line',\n        backgroundColor: '#40a9ff', \n    }\n}","import React, { useContext } from 'react'\n\nimport { ChatEngineContext } from '../../../Context'\n\nimport DatePartition from './DatePartition'\nimport MyMessage from './MyMessage'\nimport TheirMessage from './TheirMessage'\nimport SendingMessage from './SendingMessage'\n\nconst Message = props => {\n    const { lastMessage, message, nextMessage, sending, chat } = props\n\n    const { conn } = useContext(ChatEngineContext)\n\n    if (!message || !chat) { return <div /> }\n\n    if (!conn || conn === null) { return <div /> }\n\n    return (\n        <div className='ce-message-and-date'>\n            {\n                !sending &&\n                <DatePartition \n                    lastCreated={lastMessage ? lastMessage.created : null} \n                    created={message.created} \n                />\n            }\n\n            {\n                sending ? \n                <SendingMessage \n                    chat={chat} \n                    conn={conn} \n                    lastMessage={lastMessage} \n                    message={message} \n                    nextMessage={nextMessage} \n                /> :\n                <div>\n                    {\n                        message.sender_username === conn.userName || message.sender_username === conn.senderUsername ?\n                        <MyMessage \n                            chat={chat}\n                            conn={conn}\n                            lastMessage={lastMessage}\n                            message={message}\n                            nextMessage={nextMessage}\n                        /> :\n                        <TheirMessage \n                            chat={chat}\n                            conn={conn}\n                            lastMessage={lastMessage}\n                            message={message}\n                            nextMessage={nextMessage}\n                        />\n                    }\n                </div>\n            }\n        </div>\n    ) \n}\n\nexport default Message","import React, { useState } from 'react'\n\nimport { CloseCircleTwoTone } from '@ant-design/icons'\n\nconst Thumbnail = props => {\n    const [hovered, setHovered] = useState(false)\n\n    return (\n        <div \n            style={{ padding: '12px 6px', display: 'inline' }}\n            onMouseEnter={() => setHovered(true)}\n            onMouseLeave={() => setHovered(false)}\n        >\n            \n            <img\n                style={styles.imageSquare}\n                alt={props.file ? props.file.name : ''}\n                src={URL.createObjectURL(props.file)}\n            />\n\n            {\n                hovered &&\n                <CloseCircleTwoTone \n                    style={styles.closeIcon} \n                    onClick={() => props.onRemove && props.onRemove()}\n                />\n            }\n        </div>\n    )\n}\n\nexport default Thumbnail\n\nconst styles = {\n    imageSquare: { \n        height: '108px', \n        width: '108px', \n        border: '1px solid #afafaf',\n        borderRadius: '8px',\n        objectFit: 'cover',\n        display: 'inline',\n    },\n    closeIcon: {\n        position: 'relative', \n        bottom: '91px', \n        right: '20px', \n        width: '0px', \n        cursor: 'pointer'\n    }\n}","import React from 'react'\n\nimport Thumbnail from './Thumbnail'\n\nconst FileRow = props => {\n    function renderFiles() {\n        return props.files.map((file, index) => {\n            return (\n                <Thumbnail \n                    file={file} \n                    key={`thumb_${index}`} \n                    onRemove={() => props.onRemove && props.onRemove(index)}\n                />\n            )\n        })\n    }\n  \n    return (\n        <div style={{ width: 'calc(100% - 24px)', paddingLeft: '12px' }}>\n            { renderFiles() }\n        </div>\n    )\n}\n\nexport default FileRow","import React, { useState } from 'react';\n\nimport { PaperClipOutlined } from '@ant-design/icons'\n\nconst ImagesInput = props => {\n    const [state, setState] = useState({\n        hovered: false,\n        files: []\n    })\n\n    function onSelect(event) {\n        let files = []\n        const indexes = [...Array(event.target.files.length).keys()]\n\n        indexes.map((i, index) => {\n            const file = event.target.files[index]\n            if (file) { files.push(file) }\n        })\n        \n        props.onSelectFiles &&  props.onSelectFiles(files)\n    }\n\n    return (\n        <form\n            className=\"uploader\"\n            encType=\"multipart/form-data\"\n            style={{ height: '0px' }}\n        >\n            <label\n                htmlFor=\"files\"\n                id='upload-document-button'\n            >\n                <PaperClipOutlined \n                    onMouseEnter={() => setState({ ...state, hovered: true })}\n                    onMouseLeave={() => setState({ ...state, hovered: false })}\n                    style={{\n                        ...{ cursor: 'pointer', position: 'absolute', bottom: '20px', right: '63px', fontSize: '18px' },\n                        ...{ color: state.hovered ? '#69c0ff' : '#1890ff' }\n                    }}\n                />\n            </label>\n\n            <input\n                multiple\n                id=\"files\"\n                accept=\"image/x-png,image/gif,image/jpeg\"\n                style={{ visibility: \"hidden\" }}\n                type=\"file\"\n                onChange={(e) => onSelect(e)} \n            />\n        </form>\n    );\n}\n\nexport default ImagesInput\n","import React, { useContext, useState } from 'react'\n\nimport { ChatEngineContext } from '../../../Context'\n\nimport { sendMessage, isTyping } from 'react-chat-engine'\n\nimport FileRow from './FileRow'\nimport ImagesInput from './ImagesInput'\n\nimport { Button, TextAreaInput } from 'react-chat-engine'\n\nconst NewMessageForm = () => {\n  const { conn, activeChat, sendingMessages, setSendingMessages } = useContext(ChatEngineContext)\n\n  if (!conn || conn === null) return <div />\n\n  const [state, setState] = useState({\n    trigger: 0,\n    mod: 3,\n    value: '',\n    attachments: []\n  })\n\n  function onRemove(index) {\n    let { attachments } = state \n    attachments.splice(index, 1)\n    setState({ ...state, attachments })\n  }\n  \n  function handleChange(event) {\n    setState({\n      ...state,\n      value: event.target.value,\n      trigger: (state.trigger + 1) % state.mod\n    });\n    \n    if (state.trigger === 1) {\n      isTyping(conn, activeChat)\n    }\n  }\n  \n  function handleSubmit(event) {\n    event.preventDefault();\n\n    const { attachments } = state\n    const text = state.value.trim()\n    const custom_json = { sender_id: Date.now().toString() }\n    const sender_username = conn.userName ? conn.userName : conn.senderUsername\n    const data = { text, attachments, custom_json, sender_username, chat: activeChat }\n\n    if (text.length > 0 || attachments.length > 0) {\n      sendMessage(\n        conn, \n        activeChat, \n        data,\n        (data) => {}\n      )\n    }\n\n    setState({ ...state, value: '', attachments: [] })\n\n    let newSendingMessages = {...sendingMessages}\n    newSendingMessages[data.custom_json.sender_id] = data\n    setSendingMessages(newSendingMessages)\n  }\n\n  return (\n    <div \n      id='msg-form-container'\n      style={styles.NewMessageFormContainer}\n      className='ce-message-form-container'\n    >\n      <FileRow files={state.attachments} onRemove={(i) => onRemove(i)} />\n\n      <ImagesInput onSelectFiles={(attachments) => setState({ ...state, attachments })} />\n\n      <form onSubmit={handleSubmit.bind(this)} className='ce-message-form'>\n        <div style={styles.inputContainer} className='ce-message-input-form'>\n          <TextAreaInput\n            value={state.value}\n            label='Send a message...'\n            handleChange={handleChange.bind(this)}\n            onSubmit={handleSubmit.bind(this)}\n          />\n\n          <Button \n            icon='send'\n            type=\"submit\"\n            style={{ position: 'absolute', bottom: '10px', right: '6px' }}\n          />\n        </div>\n      </form>\n    </div>\n  );\n}\n\nexport default NewMessageForm\n\nconst styles = {\n  NewMessageFormContainer: { \n    position: 'absolute', \n    bottom: '0px', \n    width: '100%', \n    backgroundColor: 'white',\n  },\n  inputContainer: { \n    minHeight: '36px',\n    paddingTop: '10px',\n    paddingBottom: '6px',\n  },\n}","import React from 'react'\n\nimport { stringToColor } from '../Utilities/colorMapping'\n\nconst IsTyping = props => {\n    return (\n        <div style={{ color: stringToColor(props.username), padding: '2px', paddingLeft: '12px' }}>\n            {`${props.username} is typing...`}\n        </div>\n    )\n}\nexport default IsTyping","import React, { useContext, useState, useEffect, useRef } from 'react'\n\nimport { ChatEngineContext } from '../../Context'\n\nimport { getMessages, readMessage } from '../../../actions/messages'\n\nimport { AuthFail, Loading, Welcome } from './Steps'\n\nimport ChatHeader from './ChatHeader'\nimport MessageBubble from './MessageBubble'\nimport NewMessageForm from './NewMessageForm'\nimport IsTyping from './IsTyping'\n\nimport _ from 'lodash'\n\nimport { animateScroll } from \"react-scroll\"\n\nconst initial = 66\nlet count = initial\nconst interval = 33\n\nconst ChatFeed = props => {\n    const didMountRef = useRef(false)\n    const [duration, setDuration] = useState(0)\n    const [currentChat, setCurrentChat] = useState(null)\n    const { \n        connecting, conn,\n        chats, setChats,\n        sendingMessages,\n        messages, setMessages,\n        activeChat, setActiveChat,\n        typingData, setTypingData, \n        typingCounter, setTypingCounter,\n    } = useContext(ChatEngineContext)\n\n    function onReadMessage(chat) {\n        if (chats) {\n            const newChats = {...chats}\n            newChats[chat.id] = chat\n            setChats(newChats)\n        }\n    }\n\n    function onGetMessages(chatId, messages) {\n        setMessages(_.mapKeys(messages, 'id'))\n\n        if (messages.length > 0) {\n            const message = messages[messages.length - 1]\n\n            if (props.userName && props.userName !== message.sender_username) {\n                readMessage(conn, chatId, message.id, (chat) => onReadMessage(chat))\n            }\n        }\n        \n        props.onGetMessages && props.onGetMessages(chatId, messages)\n    }\n\n    function loadMoreMessages() {\n        if (conn && !props.activeChat && activeChat !== null && activeChat !== currentChat) {\n            count = initial\n            setCurrentChat(activeChat)\n            getMessages(conn, activeChat, (chatId, messages) => onGetMessages(chatId, messages))\n\n        } else if (conn && props.activeChat && props.activeChat !== currentChat) {\n            count = initial\n            setActiveChat(props.activeChat)\n            setCurrentChat(props.activeChat)\n            getMessages(conn, props.activeChat, (chatId, messages) => onGetMessages(chatId, messages))\n\n        }\n    }\n\n    useEffect(() => {\n        loadMoreMessages(false)\n    }, [conn, activeChat, currentChat])\n\n    useEffect(() => { // TODO: Is typing is super shitty\n        if (typingCounter) {\n            const newTypingCounter = {...typingCounter}\n            Object.keys(newTypingCounter).map(chatId => {\n                Object.keys(newTypingCounter[chatId]).map(person => {\n                    if (newTypingCounter[chatId][person] > 0) {\n                        setTimeout(() => {\n                            setTypingCounter({\n                                ...newTypingCounter,\n                                [chatId]: {\n                                    ...newTypingCounter[chatId],\n                                    [person]: newTypingCounter[chatId][person] - 1\n                                }\n                            })\n                        }, 2500)\n                    }\n                })\n            })\n        }\n    }, [typingCounter])\n\n    useEffect(() => {\n        if (!didMountRef.current) {\n            didMountRef.current = true\n            setTimeout(() => { // Once chat loads, animate scroll\n                setDuration(100)\n            }, 3000);\n\n        } else {\n            if(!_.isEmpty(messages)) { // Scroll (TODO: Make more sophisticated)\n                animateScroll.scrollToBottom({\n                    duration,\n                    containerId: \"ce-feed-container\"\n                })\n            }\n\n            Object.keys(typingCounter).map((chat) => { // Render Typing Data\n                let typers = []\n        \n                Object.keys(typingCounter[chat]).map((person) => {\n                    if (typingCounter[chat][person] > 0) {\n                        typers.push(person)\n                    }\n                })\n        \n                if (!typingData[chat] || typingData[chat].length !== typers.length) {\n                    setTypingData({ ...typingData, [chat]: typers })\n                }\n            })\n        }\n    })\n\n    function renderTypers() {\n        const typers = typingData && typingData[activeChat] ? typingData[activeChat] : []\n\n        if (props.renderIsTyping) {\n            return props.renderIsTyping(typers)\n        }\n\n        return typers.map((username, index) => <IsTyping key={`typer_${index}`} username={username} />)\n    }\n\n    function renderMessages() {\n        const chat = chats && chats[activeChat]\n        const keys = Object.keys(messages)\n        \n        return keys.map((key, index) => {\n            const message = messages[key]\n            const lastMessageKey = index === 0 ? null : keys[index - 1]\n            const nextMessageKey = index === keys.length - 1 ? null : keys[index + 1]\n\n            if (props.renderMessageBubble) {\n                return (\n                    <div key={`message_${index}`}>\n                        { \n                            props.renderMessageBubble(\n                                conn, \n                                chat, \n                                messages[lastMessageKey], \n                                message, \n                                messages[nextMessageKey]\n                            ) \n                        }\n                    </div>\n                )\n            }\n            \n            return (\n                <MessageBubble \n                    key={`message_${index}`}\n                    chat={chat}\n                    message={message}\n                    lastMessage={messages[lastMessageKey]}\n                    nextMessage={messages[nextMessageKey]}\n                />\n            )\n        })\n    }\n\n    function renderSendingMessages() {\n        const keys = Object.keys(sendingMessages)\n        const chat = chats && chats[activeChat]\n\n        return keys.map((key, index) => {\n            const message = sendingMessages[key]\n            const lastMessageKey = index === 0 ? null : keys[index - 1]\n            const nextMessageKey = index === keys.length - 1 ? null : keys[index + 1]\n\n            if(message && message.chat === activeChat) {\n                return (\n                    <MessageBubble \n                        sending\n                        key={`sending-msg-${index}`}\n                        chat={chat}\n                        message={message}\n                        lastMessage={sendingMessages[lastMessageKey]}\n                        nextMessage={sendingMessages[nextMessageKey]}\n                    />\n                )\n            }\n        })\n    }\n\n    const chat = chats && chats[currentChat] \n\n    if(props.renderChatFeed) return props.renderChatFeed(props)\n\n    if(conn === undefined) return <AuthFail />\n\n    if(conn && chats !== null && _.isEmpty(chats)) return <Welcome />\n\n    return (\n        <div \n            className='ce-chat-feed'\n            style={{ height: '100%', maxHeight: '100vh', backgroundColor: '#f0f0f0' }}\n        >\n            { connecting && <Loading /> }\n\n            { props.renderChatHeader ?  props.renderChatHeader(chat) : <ChatHeader /> }\n\n            <div\n                id='ce-feed-container'\n                style={styles.feedContainer} \n                className='ce-chat-feed-container'\n            >\n                <div style={{ height: '88px' }} className='ce-feed-container-top' />\n\n                { renderMessages() }\n\n                { renderSendingMessages() }\n\n                { renderTypers() }\n\n                <div style={{ height: '54px' }} className='ce-feed-container-bottom' />\n            </div>\n\n            { props.renderNewMessageForm ? props.renderNewMessageForm(props, currentChat) : <NewMessageForm /> }\n        </div>\n    )\n}\n\nexport default ChatFeed\n\nconst styles = {\n    feedContainer: { \n        width: '100%',\n        height: '100%',\n        maxHeight: '100vh',\n        overflowX: 'hidden',\n        overflowY: 'scroll',\n        backgroundColor: 'white',\n    }\n}","import React, { useContext } from 'react'\n\nimport { ChatEngineContext } from '../Context'\n\nimport _ from 'lodash'\n\nimport Socket from '../Socket'\n\nimport ChatList from './ChatList'\nimport ChatFeed from './ChatFeed'\nimport ChatSettings from './ChatSettings'\n\nimport { Row, Col } from 'react-grid-system'\nimport { setConfiguration } from 'react-grid-system';\n \nsetConfiguration({ maxScreenClass: 'xl', gutterWidth: 0 });\n\nconst ChatEngine = props => {\n  const context = useContext(ChatEngineContext)\n  const { height } = props\n  const propsAndContext = {...props, ...context}\n\n  return (\n    <div style={{ textAlign: 'left', backgroundColor: 'white' }}>\n      <Socket {...props} />\n\n      <Row>\n        <Col xs={0} sm={3} style={{ height: height ? height : '' }}>\n          <ChatList {...propsAndContext} />\n        </Col>\n\n        <Col xs={12} sm={6} style={{ height: height ? height : '' }}>\n          <ChatFeed {...propsAndContext} />\n        </Col>\n\n        <Col xs={0} sm={3} style={{ height: height ? height : '' }}>\n          <ChatSettings { ...propsAndContext} />\n        </Col>\n      </Row>\n    </div>\n  )\n}\n\nexport default ChatEngine","import React, { useContext } from 'react'\n\nimport ChatEngine from './ChatEngine'\n\nimport { ChatEngineWrapper, ChatEngineContext } from './Context'\n\nconst ChatEngineApp = (props) => {\n    if (useContext(ChatEngineContext)) {\n        return <ChatEngine {...props} />\n    } else {\n        return <ChatEngineWrapper><ChatEngine {...props} /></ChatEngineWrapper>\n    }\n    \n}\n\nexport default ChatEngineApp\n","import React, { useContext } from 'react'\n\nimport { ChatEngineContext } from '../Context'\n\nimport { getChat } from '../../actions/chats'\n\nimport { WebSocket } from 'nextjs-websocket'\n\nconst ChatSocket = props => {\n    const {\n      setConnecting,\n      conn, setConn, setCreds,\n      chats, setChats,\n      messages, setMessages,\n      sendingMessages, setSendingMessages,\n      activeChat, setActiveChat,\n      typingCounter, setTypingCounter,\n    } = useContext(ChatEngineContext)\n\n    // Common Context Handlers\n\n    function onEditChat(chat) {\n        if (chats) {\n            const newChats = {...chats}\n            newChats[chat.id] = chat\n            setChats(newChats)\n        }\n\n        props.onEditChat && props.onEditChat(chat)\n    }\n\n    function onGetChat(chat) {\n        if (activeChat === null) {\n            setActiveChat(chat.id)\n        }\n\n        setChats(_.mapKeys([chat], 'id'))\n    }\n\n    function onConnect(conn) {\n        setConn(conn); setCreds(conn);\n        setConnecting(false)\n    \n        getChat(conn, props.chatID, (chat) => onGetChat(chat)) // Not redundant\n    \n        props.onConnect && props.onConnect(conn)\n    }\n    \n    // Socket Events\n\n    function handleEvent(event) {\n        const eventJSON = JSON.parse(event)\n\n        if (eventJSON.action === 'login_error') {\n            console.log(\n                `Your chat auth credentials were not correct: \\n\n                Project ID: ${props.projectID} \\n\n                Chat ID: ${props.chatID} \\n\n                Access Key: ${props.chatAccessKey}\\n\n                Double check these credentials to make sure they're correct.\\n\n                If all three are correct, try resetting the username and secret in the Online Dashboard or Private API.`\n            )\n\n            setConn(undefined); setCreds(undefined);\n\n            props.onFailAuth && props.onFailAuth(conn)\n\n        } else if (eventJSON.action === 'edit_chat') {\n            onEditChat(eventJSON.data)\n            \n        } else if (eventJSON.action === 'delete_chat') {\n            const chat = eventJSON.data \n\n            if (chats) {\n                chats[chat.id] = undefined\n                \n                setChats(chats)\n            }\n\n            props.onDeleteChat && props.onDeleteChat(chat)\n\n        } else if (eventJSON.action === 'add_person') {\n            onEditChat(eventJSON.data)\n            \n            props.onAddPerson && props.onAddPerson(eventJSON.data)\n\n        } else if (eventJSON.action === 'remove_person') {\n            onEditChat(eventJSON.data)\n\n            props.onRemovePerson && props.onRemovePerson(eventJSON.data)\n\n        } else if (eventJSON.action === 'new_message') {\n            const { id, message } = eventJSON.data\n\n            if (typeof message.custom_json === \"string\" && message.custom_json.indexOf('sender_id') !== -1) {\n                sendingMessages[JSON.parse(message.custom_json).sender_id] = undefined\n                setSendingMessages(sendingMessages)\n            }\n        \n            if (id === activeChat) {\n                const newMessages = {...messages}\n                newMessages[message.id] = message\n                setMessages(newMessages)\n            }\n\n            props.onNewMessage && props.onNewMessage(id, message)\n\n        } else if (eventJSON.action === 'edit_message') {\n            const { id, message } = eventJSON.data\n            \n            if (id === activeChat) {\n                messages[message.id] = message\n                setMessages(messages)\n            }\n\n            props.onEditMessage && props.onEditMessage(id, message)\n\n        } else if (eventJSON.action === 'delete_message') {\n            const { id, message } = eventJSON.data\n\n            if (id === activeChat) {\n                messages[message.id] = undefined\n                setMessages(messages)\n            }\n\n            props.onDeleteMessage && props.onDeleteMessage(id, message)\n        \n        } else if (eventJSON.action === 'is_typing') {\n            const { id, person } = eventJSON.data\n            let newTypingCounter = {...typingCounter}\n\n            if (newTypingCounter[id] && newTypingCounter[id][person]) {\n                newTypingCounter = {\n                    ...newTypingCounter,\n                    [id]: {\n                        ...newTypingCounter[id],\n                        [person]: newTypingCounter[id][person] + 1\n                    }\n                }\n\n            } else {\n                newTypingCounter = {\n                    ...newTypingCounter,\n                    [id]: {\n                        ...newTypingCounter[id],\n                        [person]: 1\n                    }\n                }\n            }\n                \n            setTypingCounter(newTypingCounter)\n                \n            props.onTyping && props.onTyping(id, person)\n        }\n    }\n\n    function onClose() { setConnecting(true) }\n\n    // Render\n    \n    const {\n        development,\n        publicKey, projectID, \n        chatID, chatAccessKey, \n    } = props \n    \n    const wsStart = development ? 'ws://' : 'wss://'\n    const rootHost = development ? '127.0.0.1:8000' : 'api.chatengine.io'\n    const project = publicKey ? publicKey : projectID\n\n    return <WebSocket \n        url={`${wsStart}${rootHost}/chat/?projectID=${project}&chatID=${chatID}&accessKey=${chatAccessKey}`}\n        onOpen={() => onConnect(props)}\n        onClose={onClose.bind(this)}\n        onMessage={handleEvent.bind(this)}\n        reconnectIntervalInMilliSeconds={3000}\n    />\n}\n\nexport default ChatSocket","import axios from 'axios'\n\nimport * as str from '..'\nimport { getHeaders } from '../auth'\n\nexport function isTyping(props, chatId, callback) {\n    axios.post(\n        `${str.getApiUrl(props)}/chats/${chatId}/typing/`,\n        {},\n        { headers: getHeaders(props) }\n    )\n\n    .then((response) => {\n        callback && callback(response.data)\n    })\n    \n    .catch((error) => {});\n}","import axios from 'axios'\n\nimport * as str from '..'\nimport { getHeaders } from '../auth'\n\nexport function addPerson(props, chatId, userName, callback) {\n    axios.post(\n        `${str.getApiUrl(props)}/chats/${chatId}/people/`,\n        { username: userName },\n        { headers: getHeaders(props) }\n    )\n\n    .then((response) => {\n        callback && callback(response.data)\n    })\n    \n    .catch((error) => {\n        console.log('New Person Error', error)\n    });\n}","import axios from 'axios'\nimport * as str from '..'\nimport { getHeaders } from '../auth'\n\nexport function removePerson(props, chatId, userName, callback) {\n    axios.put(\n        `${str.getApiUrl(props)}/chats/${chatId}/people/`,\n        { username: userName },\n        { headers: getHeaders(props) }\n    )\n\n    .then((response) => {\n        callback && callback(response.data)\n    })\n    \n    .catch((error) => {\n        console.log('Delete Person Error', error)\n    });\n}","import axios from 'axios'\nimport * as str from '../../actions'\nimport { getHeaders } from '../auth'\n\nexport function getOtherPeople(props, chatId, successCallback, errorCallback) {\n    axios.get(\n        `${str.getApiUrl(props)}/chats/${chatId}/others/`,\n        { headers: getHeaders(props) }\n    )\n\n    .then((response) => {\n        // Run hook in Axios on GET requests\n        props.onGetOtherPeople && props.onGetOtherPeople(chatId, response.data)\n\n        successCallback && successCallback(chatId, response.data)\n    })\n    \n    .catch((error) => {\n        console.log('Fetch Other People Error', error)\n\n        errorCallback && errorCallback()\n    });\n}","import axios from 'axios'\n\nimport * as str from '..'\nimport { getHeaders } from '../auth'\n\nexport function getMyData(props, callback) {\n    axios.get(\n        `${str.getApiUrl(props)}/chats/me/`,\n        { headers: getHeaders(props) }\n    )\n\n    .then((response) => {\n        callback && callback(response.data)\n    })\n    \n    .catch((error) => {\n        console.log('Get Myself Error', error)\n    });\n}","import axios from 'axios'\n\nimport * as str from '..'\nimport { getHeaders } from '../auth'\n\nexport function editMyData(props, data, callback) {\n    axios.patch(\n        `${str.getApiUrl(props)}/chats/me/`,\n        data,\n        { headers: getHeaders(props) }\n    )\n\n    .then((response) => {\n        callback && callback(response.data)\n    })\n    \n    .catch((error) => {\n        console.log('Edit Myself Error', error)\n    });\n}","import axios from 'axios'\nimport * as str from '..'\nimport { getHeaders } from '../auth'\n\nexport function leaveChat(props, chatId, callback) {\n    axios.delete(\n        `${str.getApiUrl(props)}/chats/${chatId}/people/`,\n        { headers: getHeaders(props)}\n    )\n\n    .then((response) => {\n        callback && callback(response.data)\n    })\n    \n    .catch((error) => {\n        console.log('Delete Person Error', error)\n    });\n}","import React, { Component } from 'react'\n\nimport { stringToColor } from '../../Utilities/colorMapping' \n\n\nexport default class Avatar extends Component {\n    state = { avatar: '' }  \n\n    updateImg() {\n        let { avatar } = this.props\n        avatar = avatar && avatar !== null ? avatar : ''\n        \n        if (avatar.split('?')[0] !== this.state.avatar.split('?')[0]) {\n            this.setState({ avatar })\n        }\n    }\n\n    componentDidMount() { this.updateImg() }\n\n    componentDidUpdate() { this.updateImg() }\n\n    render() {\n        const { username, is_online } = this.props\n        const customStyle = this.props.style ? this.props.style : {}\n        const text = username ? username.substring(0, 2).toUpperCase() : ''\n        const color = stringToColor(username)    \n                \n        return (\n            <div style={{ width: '48px', height: '48px' }}>\n                <div style={{ height: '0px' }}>\n                    <div \n                        className='ce-avatar'\n                        style={{ \n                            ...styles.avatar, \n                            ...customStyle, \n                            ...{ \n                                backgroundColor: this.state.avatar ? 'white' : color,\n                                backgroundImage: this.state.avatar && `url(${this.state.avatar})`,\n                                backgroundRepeat: 'no-repeat',\n                                backgroundPosition: 'center',\n                                backgroundSize: '48px',\n                            }\n                        }}\n                    >   \n                        <div \n                            className='ce-avatar-text'\n                            style={styles.avatarText}\n                        >\n                            { !this.state.avatar && text }\n                        </div>\n                    </div>\n                </div>\n\n                {\n                    this.props.show_online !== false && \n                    <div\n                        className='ce-avatar-status'\n                        style={{\n                            ...styles.status, \n                            ...{ backgroundColor: is_online ? '#52c41a' : '#f5222d' }\n                        }}\n                    />\n                }\n            </div>\n        )\n    }\n}\n\nconst styles = {\n    avatar: {\n        width: '44px',\n        height: '44px',\n        borderRadius: '22px',\n        color: 'white',\n        textAlign: 'center',\n    },\n    avatarText: {\n        color: 'white', \n        paddingTop: '12px', \n        fontSize: '15px', \n        fontWeight: '600'\n    },\n    status: { \n        width: '8px', \n        height: '8px', \n        borderRadius: '100%', \n        border: '2px solid white',   \n    }\n}","import React, { Component } from 'react'\n\nimport { PlusOutlined, ArrowUpOutlined, DeleteOutlined, UserAddOutlined } from '@ant-design/icons'\n\nexport default class Button extends Component {\n    state = {\n        hovered: false\n    }\n\n    render() {\n        const { value, icon, theme, style } = this.props\n\n        const customStyle = style ? style : {}\n        const hoverStyle = this.state.hovered ? styles.hoverButton : {}\n        const themeStyle = theme === 'danger' ? styles.dangerButton : styles.button\n\n        return (\n            <button \n                type={this.props.type}\n                onClick={() => this.props.onClick && this.props.onClick()}\n                onMouseEnter={() => this.setState({ hovered: true })}\n                onMouseLeave={() => this.setState({ hovered: false })}\n                style={{ ...themeStyle, ...customStyle, ...hoverStyle }}\n                className={`ce-primary-button ${theme === 'danger' ? 'ce-danger-button' : ''}`}\n            >\n\n                { icon === 'plus' && <PlusOutlined /> }\n                { icon === 'send'  && <ArrowUpOutlined /> }\n                { icon === 'delete'  && <DeleteOutlined /> }\n                { icon === 'user-add'  && <UserAddOutlined /> }\n\n                { value && icon ? ` ${value}` : value}  \n\n            </button>\n        )\n    }\n}\n\nconst styles = {\n    button: {\n        color: 'white',\n        border: 'none',\n        outline: 'none',\n        height: '36px',\n        fontSize: '15px',\n        cursor: 'pointer',\n        padding: '8px 16px',\n        borderRadius: '33px',\n        backgroundColor: '#1890ff'\n    },\n    dangerButton: {\n        color: 'red',\n        border: 'none',\n        outline: 'none',\n        height: '36px',\n        fontSize: '15px',\n        cursor: 'pointer',\n        padding: '8px 16px',\n        borderRadius: '33px',\n        backgroundColor: 'white',\n        border: '1px solid red',\n    },\n    hoverButton: {\n        opacity: '0.66'\n    }\n}","import React, { Component } from 'react'\n\nexport default class TextInput extends Component {\n    state = {\n        focused: false,\n        value: null\n    }\n\n    componentDidMount() {\n        const value = this.props.default\n        if(value) {\n            const event = {target: {value}}\n            this.props.handleChange(event)\n            this.setState({ value })\n        }\n    }\n\n    render() {\n        const customStyle = this.props.style ? this.props.style : {}\n        const defaultStyle = this.state.focused ? styles.focusInput : styles.input\n\n        return (\n            // NOTE: You may need to make a div the searchContainer to put icons in...\n            <input \n                className='ce-input ce-text-input'\n                value={this.props.value} \n                placeholder={this.props.label}\n                style={{ ...defaultStyle, ...customStyle }}\n                onBlur={() => this.setState({ focused: false })}\n                onFocus={() => this.setState({ focused: true })}\n                type={this.props.type ? this.props.type : \"text\" }\n                onChange={(e) => this.props.handleChange && this.props.handleChange(e)} \n            />\n        )\n    }\n}\n\nconst styles = {\n    input: {\n        // Sizes\n        height: '36px',\n        fontSize: '15px',\n        // Border\n        outline: 'none',\n        borderRadius: '24px',\n        border: '1px solid #d9d9d9',\n        // Padding and fixed width\n        padding: '0px 12px',\n        boxSizing: 'border-box',\n    },\n    focusInput: {\n        // Sizes\n        height: '36px',\n        fontSize: '15px',\n        // Border\n        outline: 'none',\n        borderRadius: '24px',\n        border: '1px solid #1890ff',\n        // Padding and fixed width\n        padding: '0px 12px',\n        boxSizing: 'border-box',\n    }\n}","import React, { Component } from 'react'\n\nexport default class TextAreaInput extends Component {\n    state = {\n        focused: false,\n        value: null\n    }\n\n    componentDidMount() {\n        const value = this.props.default\n\n        if(value) {\n            this.props.handleChange({ target: { value } })\n            this.setState({ value })\n        }\n    }\n\n    resize() {\n        var textarea = document.getElementById(\"msg-textarea\");\n        textarea.style.height = \"\";\n        textarea.style.height = Math.min(textarea.scrollHeight, 150) + \"px\";\n    }\n\n    componentDidMount() {\n        this.resize()\n    }\n\n    handleChange(e) {\n        this.resize()\n        this.props.handleChange && this.props.handleChange(e)\n    }\n\n    onKeyDown(e) {\n        if (e.key === 'Enter') { \n            e.preventDefault()\n\n            if (this.props.value.length > 0) {\n                this.props.onSubmit && this.props.onSubmit(e) \n            }\n        }\n    }\n\n    render() {\n        return (\n            <textarea \n                id='msg-textarea'\n                className='ce-input ce-textarea-input'\n                rows='1'\n                style={ styles.input }\n                value={ this.props.value }\n                placeholder={ this.props.label }\n                onBlur={() => this.setState({ focused: false })}\n                onFocus={() => this.setState({ focused: true })}\n                type={this.props.type ? this.props.type : \"text\" }\n                onChange={(e) => this.handleChange(e)} \n                onKeyDown={(e) => this.onKeyDown(e)}\n            />\n        )\n    }\n}\n// This is another thing we need to chat about which regards the competence of one more\nconst styles = {\n    input: { \n        // Border\n        border: '1px solid white',\n        width: 'calc(100% - 64px - 24px - 44px)',\n        outline: 'none', \n        // Fonts\n        fontFamily: 'inherit',\n        fontSize: '15px',\n        // Padding\n        paddingLeft: '12px',\n        paddingRight: '12px',\n        // Position\n        position: 'relative', \n        left: '12px',\n        // Dynamic Sizing\n        resize: 'none', \n    }\n}","import React, { Component } from 'react'\n\nimport { CloseOutlined } from '@ant-design/icons'\n\nexport default class AutoComplete extends Component {\n    state = {\n        focused: false,\n        showAll: false,\n    }\n\n    onFocus() {\n        this.onChange('', true)\n        this.setState({ focused: true })\n        this.props.onFocus && this.props.onFocus()\n    }\n\n    onBlur() {\n        this.setState({ focused: false })\n        this.props.onBlur && this.props.onBlur()\n    }\n\n    onChange(value, showAll) {\n        this.setState({ showAll })\n        this.props.handleChange && this.props.handleChange(value)\n    }\n\n    getNames() {\n        let count = 0\n        const max = this.props.max ? this.props.max : 3\n        \n        const results = []\n\n        this.props.options.map(option => {\n            if (JSON.stringify(option).toLowerCase().indexOf(this.props.value.toLowerCase()) !== -1 && count < max) {\n                count = count + 1\n                results.push(option)\n            }\n        })\n        \n        return results\n    }\n\n\n    renderOptions() {\n        if(!this.props.value && !this.state.showAll) { return <div /> }\n\n        const results = this.getNames()\n\n        return results.map((option, index) => {\n            return (\n                <div key={`option_${index}`} className='ce-autocomplete-option'>\n                    { this.props.renderOption && this.props.renderOption(option) }\n\n                    { \n                        index === results.length - 1 && \n                        <div \n                            style={styles.close} \n                            className='ce-autocomplete-close'\n                            onClick={() => this.onChange('', false)}\n                        >\n                            <CloseOutlined />\n                        </div>\n                    }\n                </div>\n            )\n        })\n    }\n\n    render() {\n        const { options } = this.props\n        const customStyle = this.props.style ? this.props.style : {}\n        const defaultStyle = { ...styles.input, ...{ border: this.state.focused ? '1px solid #1890ff' : '1px solid #d9d9d9' } }\n\n        return (\n            <div>\n                <input \n                    className='ce-input ce-autocomplete-input'\n                    value={this.props.value} \n                    placeholder={this.props.label}\n                    style={{ ...defaultStyle, ...customStyle }}\n                    type={this.props.type ? this.props.type : \"text\" }\n                    onBlur={() => this.onBlur()}\n                    onFocus={() => this.onFocus()}\n                    onChange={(e) => this.onChange(e.target.value, true)}\n                />\n\n                {\n                    options && options.length > 0 && this.state.showAll &&\n                    <div \n                        className='ce-autocomplete-options'\n                        style={{ borderRadius: '19px', border: '1px solid #afafaf', overflow: 'hidden' }}\n                    >\n                        { this.props.options && this.renderOptions() }\n                    </div>\n                }\n            </div>\n        )\n    }\n}\n\nconst styles = {\n    input: {\n        height: '36px',\n        fontSize: '15px',\n        outline: 'none',\n        borderRadius: '24px',\n        padding: '0px 12px',\n        boxSizing: 'border-box'\n    },\n    close: {\n        cursor: 'pointer',\n        textAlign: 'center',\n        padding: '8px 12px',\n        fontSize: '15px',\n        borderRadius: '24px',\n    }\n}"]},"metadata":{},"sourceType":"module"}